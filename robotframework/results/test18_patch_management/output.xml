<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.3.2 (Python 3.12.3 on linux)" generated="2025-10-05T15:43:58.394114" rpa="false" schemaversion="5">
<suite id="s1" name="Patch Management" source="/mnt/c/Users/sacpa/Projects/robot/robotframework/tests/test18_patch_management/patch_management.robot">
<kw name="Initialize Patch Management Test Environment" owner="patch_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:10.802960" level="INFO">🚀 Initializing Test-18: Patch Management &amp; RSA Authentication Environment...</msg>
<arg>🚀 Initializing Test-18: Patch Management &amp; RSA Authentication Environment...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:10.800401" elapsed="0.002707"/>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2025-10-05T15:44:10.804499" level="INFO" html="true">Directory '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test18_patch_management/data"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test18_patch_management/data&lt;/a&gt;' already exists.</msg>
<arg>${DATA_DIR}</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2025-10-05T15:44:10.803278" elapsed="0.001342"/>
</kw>
<kw name="Lookup Server Config" owner="EDSLookup">
<msg time="2025-10-05T15:44:10.845407" level="INFO">Found matching row for hostname 'alhxvdvitap01'</msg>
<msg time="2025-10-05T15:44:10.845702" level="INFO">Extracted IP from EDS: 172.30.16.186</msg>
<msg time="2025-10-05T15:44:10.845799" level="INFO">Extracted subnet from EDS: 10.26.216.0/24</msg>
<msg time="2025-10-05T15:44:10.845834" level="INFO">Extracted mask from EDS: 255.255.255.0</msg>
<msg time="2025-10-05T15:44:10.845862" level="INFO">Extracted gateway from EDS: 10.26.216.4</msg>
<msg time="2025-10-05T15:44:10.845887" level="INFO">Extracted CNAME from EDS: alhxvdvitap01</msg>
<msg time="2025-10-05T15:44:10.845912" level="INFO">Extracted domain from EDS: gnscet.com</msg>
<msg time="2025-10-05T15:44:10.845943" level="INFO">Extracted CPU cores from EDS: 8</msg>
<msg time="2025-10-05T15:44:10.845969" level="INFO">Extracted RAM from EDS: 16</msg>
<msg time="2025-10-05T15:44:10.845997" level="INFO">Extracted storage type from EDS: VSAN</msg>
<msg time="2025-10-05T15:44:10.846099" level="INFO">Extracted storage total TB from EDS: 0.465</msg>
<msg time="2025-10-05T15:44:10.846143" level="INFO">Extracted drive/volume group from EDS: rootvg:</msg>
<msg time="2025-10-05T15:44:10.846172" level="INFO">Extracted file system from EDS: /dev/mapper/rootvg-rootlv</msg>
<msg time="2025-10-05T15:44:10.846200" level="INFO">Extracted logical volume/partition from EDS: /</msg>
<msg time="2025-10-05T15:44:10.846228" level="INFO">Extracted storage allocation GB from EDS: 20</msg>
<msg time="2025-10-05T15:44:10.846255" level="INFO">Extracted recommended storage allocation GB from EDS: 20</msg>
<msg time="2025-10-05T15:44:10.846279" level="INFO">Extracted drive purpose from EDS: OS</msg>
<msg time="2025-10-05T15:44:10.846302" level="INFO">Extracted OS type from EDS: RHEL 9.6</msg>
<msg time="2025-10-05T15:44:10.846332" level="INFO">EDS configuration for alhxvdvitap01: {'ip': '172.30.16.186', 'subnet': '10.26.216.0/24', 'mask': '255.255.255.0', 'gateway': '10.26.216.4', 'cname': 'alhxvdvitap01', 'domain': 'gnscet.com', 'cpu_cores': '8', 'ram': '16', 'storage_type': 'VSAN', 'storage_total_tb': '0.465', 'drive_volume_group': 'rootvg:', 'file_system': '/dev/mapper/rootvg-rootlv', 'logical_volume_partition': '/', 'storage_allocation_gb': '20', 'recommended_storage_gb': '20', 'drive_purpose': 'OS', 'os_type': 'RHEL 9.6'}</msg>
<msg time="2025-10-05T15:44:10.846500" level="INFO">${eds_config} = {'ip': '172.30.16.186', 'subnet': '10.26.216.0/24', 'mask': '255.255.255.0', 'gateway': '10.26.216.4', 'cname': 'alhxvdvitap01', 'domain': 'gnscet.com', 'cpu_cores': '8', 'ram': '16', 'storage_type': ...</msg>
<var>${eds_config}</var>
<arg>${TARGET_HOSTNAME}</arg>
<doc>Lookup server configuration from EDS sheet based on hostname</doc>
<status status="PASS" start="2025-10-05T15:44:10.804842" elapsed="0.041687"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:44:10.851119" level="INFO">${TARGET_IP} = 172.30.16.186</msg>
<arg>${TARGET_IP}</arg>
<arg>${eds_config['ip']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:44:10.846883" elapsed="0.004627"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:10.853196" level="INFO">📋 Target Server: alhxvdvitap01</msg>
<arg>📋 Target Server: ${TARGET_HOSTNAME}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:10.852473" elapsed="0.000964"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:10.853938" level="INFO">📋 Target IP: 172.30.16.186</msg>
<arg>📋 Target IP: ${TARGET_IP}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:10.853632" elapsed="0.000407"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:10.854336" level="INFO">🔗 Connecting to target server: 172.30.16.186...</msg>
<arg>🔗 Connecting to target server: ${TARGET_IP}...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:10.854171" elapsed="0.000257"/>
</kw>
<kw name="Open Connection" owner="SSHLibrary">
<arg>${TARGET_IP}</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" start="2025-10-05T15:44:10.854551" elapsed="0.000230"/>
</kw>
<kw name="Login" owner="SSHLibrary">
<msg time="2025-10-05T15:44:10.855052" level="INFO">Logging into '172.30.16.186:22' as 'sac'.</msg>
<msg time="2025-10-05T15:44:12.738336" level="INFO">Read output: Welcome to Ubuntu 24.04.3 LTS (GNU/Linux 6.6.87.2-microsoft-standard-WSL2 x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/pro

 System information as of Sun Oct  5 15:44:11 CDT 2025

  System load:  0.79                Processes:             40
  Usage of /:   0.7% of 1006.85GB   Users logged in:       1
  Memory usage: 6%                  IPv4 address for eth0: 172.30.16.186
  Swap usage:   0%

 * Strictly confined Kubernetes makes edge and IoT secure. Learn how MicroK8s
   just raised the bar for easy, resilient and secure K8s cluster deployment.

   https://ubuntu.com/engage/secure-kubernetes-at-the-edge
Last login: Sun Oct  5 15:43:33 2025 from 172.30.16.186
[?2004hsac@alhxvdvitap01:~$</msg>
<arg>${SSH_USERNAME}</arg>
<arg>${SSH_PASSWORD}</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<status status="PASS" start="2025-10-05T15:44:10.854877" elapsed="1.883907"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:12.740303" level="INFO">✅ SSH connection established successfully</msg>
<arg>✅ SSH connection established successfully</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:12.739608" elapsed="0.001154"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:12.742371" level="INFO">✅ Test-18 environment initialized</msg>
<arg>✅ Test-18 environment initialized</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:12.741425" elapsed="0.001418"/>
</kw>
<doc>🏗️ Set up test environment for patch management and RSA validation</doc>
<status status="PASS" start="2025-10-05T15:44:10.799191" elapsed="1.943901"/>
</kw>
<test id="s1-t1" name="Critical - Connect to Target Server" line="20">
<kw name="Log Test Start" owner="patch_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:12.746940" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:12.746534" elapsed="0.002895"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:12.750714" level="INFO">🏁 Starting Test: Critical - Connect to Target Server</msg>
<arg>🏁 Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:12.750298" elapsed="0.000809"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:12.752838" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:12.751405" elapsed="0.001631"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:44:12.745382" elapsed="0.007970"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:12.753941" level="INFO">🔍 Verifying SSH connection to target server...</msg>
<arg>🔍 Verifying SSH connection to target server...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:12.753675" elapsed="0.000448"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:12.754771" level="INFO">📋 Target: alhxvdvitap01 (172.30.16.186)</msg>
<arg>📋 Target: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:12.754423" elapsed="0.000528"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:12.756985" level="INFO">Executing command 'echo "Connection active"'.</msg>
<msg time="2025-10-05T15:44:12.770803" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:12.771120" level="INFO">${output} = Connection active</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:12.756570" elapsed="0.014589"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:12.771269" elapsed="0.000089"/>
</return>
<msg time="2025-10-05T15:44:12.771571" level="INFO">${connection_status} = Connection active</msg>
<var>${connection_status}</var>
<arg>echo "Connection active"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:12.755769" elapsed="0.015850"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${connection_status}</arg>
<arg>Connection active</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-10-05T15:44:12.771863" elapsed="0.000253"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:12.772409" level="INFO">✅ SSH connection verified and active</msg>
<arg>✅ SSH connection verified and active</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:12.772264" elapsed="0.000274"/>
</kw>
<kw name="Log Test End" owner="patch_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:12.773351" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:12.773218" elapsed="0.000233"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:12.773969" level="INFO">🏁 Completed Test: Critical - Connect to Target Server | Status: PASS</msg>
<arg>🏁 Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:12.773612" elapsed="0.000485"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:12.774407" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:12.774265" elapsed="0.000243"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:44:12.772871" elapsed="0.001718"/>
</kw>
<doc>🔗 Establish direct connection to target machine via SSH</doc>
<tag>connection</tag>
<tag>critical</tag>
<tag>infrastructure</tag>
<tag>ssh</tag>
<status status="PASS" start="2025-10-05T15:44:12.743343" elapsed="0.031291"/>
</test>
<test id="s1-t2" name="Critical - Check RSA Agent Installation" line="33">
<kw name="Log Test Start" owner="patch_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:12.776396" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:12.776183" elapsed="0.000342"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:12.776821" level="INFO">🏁 Starting Test: Critical - Check RSA Agent Installation</msg>
<arg>🏁 Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:12.776661" elapsed="0.000264"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:12.777198" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:12.777054" elapsed="0.000240"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:44:12.775628" elapsed="0.001747"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:12.777708" level="INFO">🔍 Checking RSA SecurID agent installation...</msg>
<arg>🔍 Checking RSA SecurID agent installation...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:12.777590" elapsed="0.000254"/>
</kw>
<kw name="Check RSA Agent Installation" owner="patch_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:12.778443" level="INFO">🔐 Checking RSA SecurID agent installation...</msg>
<arg>🔐 Checking RSA SecurID agent installation...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:12.778335" elapsed="0.000198"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:12.779099" level="INFO">Executing command 'rpm -qa | grep -i rsa 2&gt;/dev/null || dpkg -l | grep -i rsa 2&gt;/dev/null || echo "No RSA packages found"'.</msg>
<msg time="2025-10-05T15:44:12.869295" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:12.869625" level="INFO">${output} = ii  libuchardet0:amd64                               0.0.8-1build1                             amd64        universal charset detection library - shared library
ii  libuuid1:amd64                     ...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:12.778961" elapsed="0.091768"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:12.870912" elapsed="0.000112"/>
</return>
<msg time="2025-10-05T15:44:12.871240" level="INFO">${rsa_package} = ii  libuchardet0:amd64                               0.0.8-1build1                             amd64        universal charset detection library - shared library
ii  libuuid1:amd64                     ...</msg>
<var>${rsa_package}</var>
<arg>rpm -qa | grep -i rsa 2&gt;/dev/null || dpkg -l | grep -i rsa 2&gt;/dev/null || echo "No RSA packages found"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:12.778736" elapsed="0.092581"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:12.872099" level="INFO">Executing command 'which rsaagent 2&gt;/dev/null || which rsaauth 2&gt;/dev/null || echo "RSA agent binary not found in PATH"'.</msg>
<msg time="2025-10-05T15:44:12.936214" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:12.936473" level="INFO">${output} = RSA agent binary not found in PATH</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:12.871960" elapsed="0.064548"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:12.936609" elapsed="0.000061"/>
</return>
<msg time="2025-10-05T15:44:12.936854" level="INFO">${rsa_agent_bin} = RSA agent binary not found in PATH</msg>
<var>${rsa_agent_bin}</var>
<arg>which rsaagent 2&gt;/dev/null || which rsaauth 2&gt;/dev/null || echo "RSA agent binary not found in PATH"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:12.871614" elapsed="0.065272"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:12.939093" level="INFO">Executing command 'ls -la /opt/rsa* 2&gt;/dev/null || ls -la /usr/local/rsa* 2&gt;/dev/null || echo "No RSA installation directories found"'.</msg>
<msg time="2025-10-05T15:44:12.994778" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:12.995108" level="INFO">${output} = No RSA installation directories found</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:12.938829" elapsed="0.056323"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:12.995271" elapsed="0.000090"/>
</return>
<msg time="2025-10-05T15:44:12.995654" level="INFO">${rsa_installation} = No RSA installation directories found</msg>
<var>${rsa_installation}</var>
<arg>ls -la /opt/rsa* 2&gt;/dev/null || ls -la /usr/local/rsa* 2&gt;/dev/null || echo "No RSA installation directories found"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:12.937873" elapsed="0.057819"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:12.996864" level="INFO">Executing command 'ls -la /opt/pam_client* 2&gt;/dev/null || ls -la /var/ace* 2&gt;/dev/null || echo "No ACE client found"'.</msg>
<msg time="2025-10-05T15:44:13.046114" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:13.046357" level="INFO">${output} = No ACE client found</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:12.996630" elapsed="0.049764"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:13.046510" elapsed="0.000057"/>
</return>
<msg time="2025-10-05T15:44:13.046722" level="INFO">${ace_client} = No ACE client found</msg>
<var>${ace_client}</var>
<arg>ls -la /opt/pam_client* 2&gt;/dev/null || ls -la /var/ace* 2&gt;/dev/null || echo "No ACE client found"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:12.996103" elapsed="0.050642"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.047236" level="INFO">${agent_status} = === RSA Packages ===
ii  libuchardet0:amd64                               0.0.8-1build1                             amd64        universal charset detection library - shared library
ii  libuuid1:amd64...</msg>
<var>${agent_status}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== RSA Packages ===</arg>
<arg>${rsa_package}</arg>
<arg>=== RSA Agent Binary ===</arg>
<arg>${rsa_agent_bin}</arg>
<arg>=== RSA Installation Directory ===</arg>
<arg>${rsa_installation}</arg>
<arg>=== ACE Client ===</arg>
<arg>${ace_client}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:13.046914" elapsed="0.000349"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.047733" level="INFO">${RSA_AGENT_STATUS} = === RSA Packages ===
ii  libuchardet0:amd64                               0.0.8-1build1                             amd64        universal charset detection library - shared library
ii  libuuid1:amd64...</msg>
<arg>${RSA_AGENT_STATUS}</arg>
<arg>${agent_status}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:44:13.047408" elapsed="0.000371"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.048025" level="INFO">🔐 RSA Agent Installation Status collected</msg>
<arg>🔐 RSA Agent Installation Status collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.047891" elapsed="0.000253"/>
</kw>
<return>
<value>${agent_status}</value>
<status status="PASS" start="2025-10-05T15:44:13.048210" elapsed="0.000045"/>
</return>
<msg time="2025-10-05T15:44:13.048382" level="INFO">${agent_status} = === RSA Packages ===
ii  libuchardet0:amd64                               0.0.8-1build1                             amd64        universal charset detection library - shared library
ii  libuuid1:amd64...</msg>
<var>${agent_status}</var>
<doc>🔐 Check if RSA SecurID agent is installed</doc>
<status status="PASS" start="2025-10-05T15:44:12.778099" elapsed="0.270305"/>
</kw>
<kw name="Save RSA Agent Status to File" owner="patch_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:44:13.049113" level="INFO">${timestamp} = 20251005_154413</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:44:13.048906" elapsed="0.000233"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.049391" level="INFO">${agent_file} = results/test18_patch_management/data/rsa_agent_status_20251005_154413.txt</msg>
<var>${agent_file}</var>
<arg>${DATA_DIR}/rsa_agent_status_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:44:13.049237" elapsed="0.000195"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.049971" level="INFO">${report} = =========================================
=== RSA Agent Installation Status ===
=========================================
Timestamp: 20251005_154413
Target Server: alhxvdvitap01 (172.30.16.186)

=== R...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== RSA Agent Installation Status ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>${agent_status}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:13.049571" elapsed="0.000962"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:44:13.057676" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test18_patch_management/data/rsa_agent_status_20251005_154413.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test18_patch_management/data/rsa_agent_status_20251005_154413.txt&lt;/a&gt;'.</msg>
<arg>${agent_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:44:13.050676" elapsed="0.007237"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.058916" level="INFO">📄 RSA agent status saved to: results/test18_patch_management/data/rsa_agent_status_20251005_154413.txt</msg>
<arg>📄 RSA agent status saved to: ${agent_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.058522" elapsed="0.000575"/>
</kw>
<return>
<value>${agent_file}</value>
<status status="PASS" start="2025-10-05T15:44:13.059199" elapsed="0.000070"/>
</return>
<msg time="2025-10-05T15:44:13.059445" level="INFO">${agent_file} = results/test18_patch_management/data/rsa_agent_status_20251005_154413.txt</msg>
<var>${agent_file}</var>
<arg>${agent_status}</arg>
<doc>💾 Save RSA agent installation status to file</doc>
<status status="PASS" start="2025-10-05T15:44:13.048609" elapsed="0.010864"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.059844" level="INFO">📄 RSA agent status saved to: results/test18_patch_management/data/rsa_agent_status_20251005_154413.txt</msg>
<arg>📄 RSA agent status saved to: ${agent_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.059621" elapsed="0.000336"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.060319" level="INFO">✅ RSA agent installation check completed</msg>
<arg>✅ RSA agent installation check completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.060142" elapsed="0.000289"/>
</kw>
<kw name="Log Test End" owner="patch_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.061367" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.061196" elapsed="0.000355"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.062021" level="INFO">🏁 Completed Test: Critical - Check RSA Agent Installation | Status: PASS</msg>
<arg>🏁 Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.061714" elapsed="0.000412"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.062464" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.062282" elapsed="0.000305"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:44:13.060744" elapsed="0.001938"/>
</kw>
<doc>🔐 Verify RSA SecurID agent is installed on the system</doc>
<tag>agent</tag>
<tag>critical</tag>
<tag>installation</tag>
<tag>rsa</tag>
<status status="PASS" start="2025-10-05T15:44:12.774945" elapsed="0.287810"/>
</test>
<test id="s1-t3" name="Critical - Validate RSA Configuration Files" line="48">
<kw name="Log Test Start" owner="patch_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.064956" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.064728" elapsed="0.000339"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.066611" level="INFO">🏁 Starting Test: Critical - Validate RSA Configuration Files</msg>
<arg>🏁 Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.066351" elapsed="0.000427"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.067083" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.066940" elapsed="0.000232"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:44:13.064141" elapsed="0.003106"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.067457" level="INFO">🔍 Validating RSA configuration files...</msg>
<arg>🔍 Validating RSA configuration files...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.067352" elapsed="0.000194"/>
</kw>
<kw name="Collect RSA Configuration Files" owner="patch_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.068116" level="INFO">📄 Collecting RSA configuration files...</msg>
<arg>📄 Collecting RSA configuration files...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.068005" elapsed="0.000209"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:13.069026" level="INFO">Executing command 'cat /var/ace/sdconf.rec 2&gt;/dev/null || echo "No /var/ace/sdconf.rec"'.</msg>
<msg time="2025-10-05T15:44:13.098884" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:13.099128" level="INFO">${output} = No /var/ace/sdconf.rec</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:13.068601" elapsed="0.030566"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:13.099264" elapsed="0.000133"/>
</return>
<msg time="2025-10-05T15:44:13.099636" level="INFO">${sdconf} = No /var/ace/sdconf.rec</msg>
<var>${sdconf}</var>
<arg>cat /var/ace/sdconf.rec 2&gt;/dev/null || echo "No /var/ace/sdconf.rec"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:13.068383" elapsed="0.031288"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:13.103212" level="INFO">Executing command 'cat /var/ace/sdopts.rec 2&gt;/dev/null || echo "No /var/ace/sdopts.rec"'.</msg>
<msg time="2025-10-05T15:44:13.146797" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:13.147140" level="INFO">${output} = No /var/ace/sdopts.rec</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:13.100422" elapsed="0.046766"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:13.147312" elapsed="0.000086"/>
</return>
<msg time="2025-10-05T15:44:13.147817" level="INFO">${sdopts} = No /var/ace/sdopts.rec</msg>
<var>${sdopts}</var>
<arg>cat /var/ace/sdopts.rec 2&gt;/dev/null || echo "No /var/ace/sdopts.rec"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:13.100004" elapsed="0.047878"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:13.149267" level="INFO">Executing command 'cat /etc/pam.d/rsa 2&gt;/dev/null || grep -r rsa /etc/pam.d/ 2&gt;/dev/null || echo "No PAM RSA configuration"'.</msg>
<msg time="2025-10-05T15:44:13.219775" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:13.220096" level="INFO">${output} = No PAM RSA configuration</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:13.149006" elapsed="0.071136"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:13.220260" elapsed="0.000179"/>
</return>
<msg time="2025-10-05T15:44:13.220781" level="INFO">${pam_rsa} = No PAM RSA configuration</msg>
<var>${pam_rsa}</var>
<arg>cat /etc/pam.d/rsa 2&gt;/dev/null || grep -r rsa /etc/pam.d/ 2&gt;/dev/null || echo "No PAM RSA configuration"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:13.148396" elapsed="0.072432"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:13.222264" level="INFO">Executing command 'ls -la /var/ace/ 2&gt;/dev/null || echo "No /var/ace/ directory"'.</msg>
<msg time="2025-10-05T15:44:13.272160" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:13.272468" level="INFO">${output} = No /var/ace/ directory</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:13.222000" elapsed="0.050514"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:13.272702" elapsed="0.000113"/>
</return>
<msg time="2025-10-05T15:44:13.273083" level="INFO">${ace_data} = No /var/ace/ directory</msg>
<var>${ace_data}</var>
<arg>ls -la /var/ace/ 2&gt;/dev/null || echo "No /var/ace/ directory"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:13.221280" elapsed="0.052328"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:13.275564" level="INFO">Executing command 'ls -la /opt/rsa/*/config/ 2&gt;/dev/null || echo "No RSA config directory"'.</msg>
<msg time="2025-10-05T15:44:13.338664" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:13.338961" level="INFO">${output} = No RSA config directory</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:13.275185" elapsed="0.063822"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:13.339133" elapsed="0.000080"/>
</return>
<msg time="2025-10-05T15:44:13.339530" level="INFO">${rsa_config_dir} = No RSA config directory</msg>
<var>${rsa_config_dir}</var>
<arg>ls -la /opt/rsa/*/config/ 2&gt;/dev/null || echo "No RSA config directory"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:13.274353" elapsed="0.065243"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.340646" level="INFO">${config_files} = === /var/ace/sdconf.rec ===
No /var/ace/sdconf.rec

=== /var/ace/sdopts.rec ===
No /var/ace/sdopts.rec

=== PAM RSA Configuration ===
No PAM RSA configuration

=== /var/ace/ Directory ===
No /var/ace/...</msg>
<var>${config_files}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== /var/ace/sdconf.rec ===</arg>
<arg>${sdconf}</arg>
<arg>=== /var/ace/sdopts.rec ===</arg>
<arg>${sdopts}</arg>
<arg>=== PAM RSA Configuration ===</arg>
<arg>${pam_rsa}</arg>
<arg>=== /var/ace/ Directory ===</arg>
<arg>${ace_data}</arg>
<arg>=== RSA Config Directory ===</arg>
<arg>${rsa_config_dir}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:13.339909" elapsed="0.000799"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.342448" level="INFO">${RSA_CONFIG_FILES} = === /var/ace/sdconf.rec ===
No /var/ace/sdconf.rec

=== /var/ace/sdopts.rec ===
No /var/ace/sdopts.rec

=== PAM RSA Configuration ===
No PAM RSA configuration

=== /var/ace/ Directory ===
No /var/ace/...</msg>
<arg>${RSA_CONFIG_FILES}</arg>
<arg>${config_files}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:44:13.341535" elapsed="0.001036"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.343233" level="INFO">📄 RSA configuration files collected</msg>
<arg>📄 RSA configuration files collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.342874" elapsed="0.000637"/>
</kw>
<return>
<value>${config_files}</value>
<status status="PASS" start="2025-10-05T15:44:13.343658" elapsed="0.000141"/>
</return>
<msg time="2025-10-05T15:44:13.344185" level="INFO">${config_status} = === /var/ace/sdconf.rec ===
No /var/ace/sdconf.rec

=== /var/ace/sdopts.rec ===
No /var/ace/sdopts.rec

=== PAM RSA Configuration ===
No PAM RSA configuration

=== /var/ace/ Directory ===
No /var/ace/...</msg>
<var>${config_status}</var>
<doc>📄 Collect RSA configuration files from common locations</doc>
<status status="PASS" start="2025-10-05T15:44:13.067767" elapsed="0.276500"/>
</kw>
<kw name="Save RSA Config to File" owner="patch_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:44:13.348551" level="INFO">${timestamp} = 20251005_154413</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:44:13.348131" elapsed="0.000467"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.349155" level="INFO">${config_file} = results/test18_patch_management/data/rsa_config_20251005_154413.txt</msg>
<var>${config_file}</var>
<arg>${DATA_DIR}/rsa_config_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:44:13.348875" elapsed="0.000320"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.350380" level="INFO">${report} = =========================================
=== RSA Configuration Files ===
=========================================
Timestamp: 20251005_154413
Target Server: alhxvdvitap01 (172.30.16.186)

=== /var/ac...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== RSA Configuration Files ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>${config_status}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:13.349350" elapsed="0.001080"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:44:13.358793" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test18_patch_management/data/rsa_config_20251005_154413.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test18_patch_management/data/rsa_config_20251005_154413.txt&lt;/a&gt;'.</msg>
<arg>${config_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:44:13.351383" elapsed="0.007541"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.359331" level="INFO">📄 RSA configuration saved to: results/test18_patch_management/data/rsa_config_20251005_154413.txt</msg>
<arg>📄 RSA configuration saved to: ${config_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.359116" elapsed="0.000331"/>
</kw>
<return>
<value>${config_file}</value>
<status status="PASS" start="2025-10-05T15:44:13.359526" elapsed="0.000051"/>
</return>
<msg time="2025-10-05T15:44:13.359725" level="INFO">${config_file} = results/test18_patch_management/data/rsa_config_20251005_154413.txt</msg>
<var>${config_file}</var>
<arg>${config_status}</arg>
<doc>💾 Save RSA configuration to file</doc>
<status status="PASS" start="2025-10-05T15:44:13.344801" elapsed="0.014967"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.360115" level="INFO">📄 RSA configuration saved to: results/test18_patch_management/data/rsa_config_20251005_154413.txt</msg>
<arg>📄 RSA configuration saved to: ${config_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.359895" elapsed="0.000334"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.360496" level="INFO">✅ RSA configuration files validated</msg>
<arg>✅ RSA configuration files validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.360376" elapsed="0.000216"/>
</kw>
<kw name="Log Test End" owner="patch_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.361862" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.361659" elapsed="0.000301"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.362276" level="INFO">🏁 Completed Test: Critical - Validate RSA Configuration Files | Status: PASS</msg>
<arg>🏁 Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.362085" elapsed="0.000288"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.362637" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.362508" elapsed="0.000226"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:44:13.361179" elapsed="0.001644"/>
</kw>
<doc>📄 Check for RSA configuration files and validate their presence</doc>
<tag>configuration</tag>
<tag>critical</tag>
<tag>files</tag>
<tag>rsa</tag>
<status status="PASS" start="2025-10-05T15:44:13.063165" elapsed="0.299711"/>
</test>
<test id="s1-t4" name="Critical - Check RSA Authentication Settings" line="63">
<kw name="Log Test Start" owner="patch_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.367058" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.366886" elapsed="0.000402"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.368054" level="INFO">🏁 Starting Test: Critical - Check RSA Authentication Settings</msg>
<arg>🏁 Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.367703" elapsed="0.000819"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.368885" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.368696" elapsed="0.000317"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:44:13.363610" elapsed="0.005530"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.369427" level="INFO">🔍 Checking RSA authentication settings...</msg>
<arg>🔍 Checking RSA authentication settings...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.369268" elapsed="0.000332"/>
</kw>
<kw name="Validate RSA Authentication Settings" owner="patch_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.370447" level="INFO">🔐 Validating RSA authentication settings...</msg>
<arg>🔐 Validating RSA authentication settings...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.370339" elapsed="0.000215"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:13.371051" level="INFO">Executing command 'grep -i "challengeresponse|pubkeyauth|rsa" /etc/ssh/sshd_config 2&gt;/dev/null || echo "No RSA settings in sshd_config"'.</msg>
<msg time="2025-10-05T15:44:13.393640" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:13.394200" level="INFO">${output} = No RSA settings in sshd_config</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:13.370943" elapsed="0.023667"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:13.394774" elapsed="0.000089"/>
</return>
<msg time="2025-10-05T15:44:13.395111" level="INFO">${sshd_config} = No RSA settings in sshd_config</msg>
<var>${sshd_config}</var>
<arg>grep -i "challengeresponse\|pubkeyauth\|rsa" /etc/ssh/sshd_config 2&gt;/dev/null || echo "No RSA settings in sshd_config"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:13.370718" elapsed="0.024431"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:13.396198" level="INFO">Executing command 'grep -r "pam_rsa|pam_securid" /etc/pam.d/ 2&gt;/dev/null || echo "No RSA PAM configuration"'.</msg>
<msg time="2025-10-05T15:44:13.447581" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:13.448034" level="INFO">${output} = No RSA PAM configuration</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:13.396044" elapsed="0.053037"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:13.449257" elapsed="0.000076"/>
</return>
<msg time="2025-10-05T15:44:13.449607" level="INFO">${pam_config} = No RSA PAM configuration</msg>
<var>${pam_config}</var>
<arg>grep -r "pam_rsa\|pam_securid" /etc/pam.d/ 2&gt;/dev/null || echo "No RSA PAM configuration"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:13.395551" elapsed="0.054100"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:13.450694" level="INFO">Executing command 'ls -la /lib*/security/*rsa* 2&gt;/dev/null || ls -la /lib*/security/*securid* 2&gt;/dev/null || echo "No RSA auth modules found"'.</msg>
<msg time="2025-10-05T15:44:13.512381" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:13.512716" level="INFO">${output} = No RSA auth modules found</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:13.450480" elapsed="0.062279"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:13.512915" elapsed="0.000091"/>
</return>
<msg time="2025-10-05T15:44:13.513288" level="INFO">${auth_modules} = No RSA auth modules found</msg>
<var>${auth_modules}</var>
<arg>ls -la /lib*/security/*rsa* 2&gt;/dev/null || ls -la /lib*/security/*securid* 2&gt;/dev/null || echo "No RSA auth modules found"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:13.450088" elapsed="0.063243"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:13.514678" level="INFO">Executing command 'grep rsa /etc/nsswitch.conf 2&gt;/dev/null || echo "No RSA in nsswitch.conf"'.</msg>
<msg time="2025-10-05T15:44:13.558115" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:13.558401" level="INFO">${output} = No RSA in nsswitch.conf</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:13.514472" elapsed="0.043970"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:13.558566" elapsed="0.000080"/>
</return>
<msg time="2025-10-05T15:44:13.558951" level="INFO">${nsswitch} = No RSA in nsswitch.conf</msg>
<var>${nsswitch}</var>
<arg>grep rsa /etc/nsswitch.conf 2&gt;/dev/null || echo "No RSA in nsswitch.conf"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:13.513947" elapsed="0.045043"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.559579" level="INFO">${auth_settings} = === SSH Configuration (RSA) ===
No RSA settings in sshd_config

=== PAM RSA Configuration ===
No RSA PAM configuration

=== RSA Authentication Modules ===
No RSA auth modules found

=== nsswitch.conf ...</msg>
<var>${auth_settings}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== SSH Configuration (RSA) ===</arg>
<arg>${sshd_config}</arg>
<arg>=== PAM RSA Configuration ===</arg>
<arg>${pam_config}</arg>
<arg>=== RSA Authentication Modules ===</arg>
<arg>${auth_modules}</arg>
<arg>=== nsswitch.conf ===</arg>
<arg>${nsswitch}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:13.559212" elapsed="0.000398"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.559930" level="INFO">${RSA_AUTH_SETTINGS} = === SSH Configuration (RSA) ===
No RSA settings in sshd_config

=== PAM RSA Configuration ===
No RSA PAM configuration

=== RSA Authentication Modules ===
No RSA auth modules found

=== nsswitch.conf ...</msg>
<arg>${RSA_AUTH_SETTINGS}</arg>
<arg>${auth_settings}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:44:13.559751" elapsed="0.000244"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.560252" level="INFO">🔐 RSA authentication settings validated</msg>
<arg>🔐 RSA authentication settings validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.560120" elapsed="0.000252"/>
</kw>
<return>
<value>${auth_settings}</value>
<status status="PASS" start="2025-10-05T15:44:13.560435" elapsed="0.000039"/>
</return>
<msg time="2025-10-05T15:44:13.560626" level="INFO">${auth_settings} = === SSH Configuration (RSA) ===
No RSA settings in sshd_config

=== PAM RSA Configuration ===
No RSA PAM configuration

=== RSA Authentication Modules ===
No RSA auth modules found

=== nsswitch.conf ...</msg>
<var>${auth_settings}</var>
<doc>🔐 Validate RSA authentication settings in SSH and PAM</doc>
<status status="PASS" start="2025-10-05T15:44:13.370114" elapsed="0.190535"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.560883" level="INFO">🔐 RSA Authentication Status: === SSH Configuration (RSA) ===
No RSA settings in sshd_config

=== PAM RSA Configuration ===
No RSA PAM configuration

=== RSA Authentication Modules ===
No RSA auth modules found

=== nsswitch.conf ===
No RSA in nsswitch.conf</msg>
<arg>🔐 RSA Authentication Status: ${auth_settings}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.560748" elapsed="0.000229"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.561226" level="INFO">✅ RSA authentication settings validated</msg>
<arg>✅ RSA authentication settings validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.561122" elapsed="0.000196"/>
</kw>
<kw name="Log Test End" owner="patch_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.562194" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.562052" elapsed="0.000232"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.562943" level="INFO">🏁 Completed Test: Critical - Check RSA Authentication Settings | Status: PASS</msg>
<arg>🏁 Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.562723" elapsed="0.000318"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.563363" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.563188" elapsed="0.000271"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:44:13.561632" elapsed="0.001906"/>
</kw>
<doc>🔐 Verify RSA authentication is properly configured</doc>
<tag>authentication</tag>
<tag>critical</tag>
<tag>rsa</tag>
<tag>settings</tag>
<status status="PASS" start="2025-10-05T15:44:13.363134" elapsed="0.200453"/>
</test>
<test id="s1-t5" name="Critical - Test RSA Server Connectivity" line="75">
<kw name="Log Test Start" owner="patch_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.565870" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.565621" elapsed="0.000359"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.566248" level="INFO">🏁 Starting Test: Critical - Test RSA Server Connectivity</msg>
<arg>🏁 Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.566099" elapsed="0.000243"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.566605" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.566483" elapsed="0.000208"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:44:13.564962" elapsed="0.001808"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.566964" level="INFO">🔍 Testing RSA server connectivity...</msg>
<arg>🔍 Testing RSA server connectivity...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.566869" elapsed="0.000177"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.567284" level="INFO">📋 Expected RSA Server: rsa.domain.com</msg>
<arg>📋 Expected RSA Server: ${EXPECTED_RSA_SERVER}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.567157" elapsed="0.000209"/>
</kw>
<kw name="Test RSA Server Connectivity" owner="patch_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.567871" level="INFO">🌐 Testing RSA server connectivity...</msg>
<arg>🌐 Testing RSA server connectivity...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.567782" elapsed="0.000173"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:13.568512" level="INFO">Executing command 'grep -r "auth_server|ace_server" /var/ace/ /opt/rsa/ 2&gt;/dev/null || echo "No RSA server configuration found"'.</msg>
<msg time="2025-10-05T15:44:13.606801" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:13.607029" level="INFO">${output} = No RSA server configuration found</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:13.568369" elapsed="0.038690"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:13.607149" elapsed="0.000055"/>
</return>
<msg time="2025-10-05T15:44:13.607365" level="INFO">${rsa_server_config} = No RSA server configuration found</msg>
<var>${rsa_server_config}</var>
<arg>grep -r "auth_server\|ace_server" /var/ace/ /opt/rsa/ 2&gt;/dev/null || echo "No RSA server configuration found"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:13.568101" elapsed="0.039289"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:13.608281" level="INFO">Executing command 'timeout 5 nc -zv rsa.domain.com 5500 2&gt;&amp;1 || echo "Port 5500 test failed/timeout"'.</msg>
<msg time="2025-10-05T15:44:13.752705" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:13.753138" level="INFO">${output} = nc: getaddrinfo for host "rsa.domain.com" port 5500: No address associated with hostname
Port 5500 test failed/timeout</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:13.608075" elapsed="0.145139"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:13.753466" elapsed="0.000164"/>
</return>
<msg time="2025-10-05T15:44:13.754063" level="INFO">${port_5500_test} = nc: getaddrinfo for host "rsa.domain.com" port 5500: No address associated with hostname
Port 5500 test failed/timeout</msg>
<var>${port_5500_test}</var>
<arg>timeout 5 nc -zv ${EXPECTED_RSA_SERVER} 5500 2&gt;&amp;1 || echo "Port 5500 test failed/timeout"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:13.607625" elapsed="0.146482"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:13.755200" level="INFO">Executing command 'timeout 5 nc -zv rsa.domain.com 5555 2&gt;&amp;1 || echo "Port 5555 test failed/timeout"'.</msg>
<msg time="2025-10-05T15:44:13.850263" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:13.850522" level="INFO">${output} = nc: getaddrinfo for host "rsa.domain.com" port 5555: No address associated with hostname
Port 5555 test failed/timeout</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:13.754999" elapsed="0.095560"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:13.850658" elapsed="0.000065"/>
</return>
<msg time="2025-10-05T15:44:13.850969" level="INFO">${port_5555_test} = nc: getaddrinfo for host "rsa.domain.com" port 5555: No address associated with hostname
Port 5555 test failed/timeout</msg>
<var>${port_5555_test}</var>
<arg>timeout 5 nc -zv ${EXPECTED_RSA_SERVER} 5555 2&gt;&amp;1 || echo "Port 5555 test failed/timeout"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:13.754438" elapsed="0.096584"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:13.852039" level="INFO">Executing command 'nslookup rsa.domain.com 2&gt;&amp;1 || dig rsa.domain.com 2&gt;&amp;1 || echo "DNS lookup not available"'.</msg>
<msg time="2025-10-05T15:44:13.904950" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:13.905464" level="INFO">${output} = bash: line 1: nslookup: command not found
bash: line 1: dig: command not found
DNS lookup not available</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:13.851846" elapsed="0.053737"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:13.905874" elapsed="0.000137"/>
</return>
<msg time="2025-10-05T15:44:13.906451" level="INFO">${dns_test} = bash: line 1: nslookup: command not found
bash: line 1: dig: command not found
DNS lookup not available</msg>
<var>${dns_test}</var>
<arg>nslookup ${EXPECTED_RSA_SERVER} 2&gt;&amp;1 || dig ${EXPECTED_RSA_SERVER} 2&gt;&amp;1 || echo "DNS lookup not available"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:13.851368" elapsed="0.055133"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:13.907961" level="INFO">Executing command 'ping -c 3 rsa.domain.com 2&gt;&amp;1 || echo "Ping test failed"'.</msg>
<msg time="2025-10-05T15:44:14.011425" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:14.012699" level="INFO">${output} = ping: rsa.domain.com: No address associated with hostname
Ping test failed</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:13.907550" elapsed="0.105263"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:14.012979" elapsed="0.000113"/>
</return>
<msg time="2025-10-05T15:44:14.013451" level="INFO">${ping_test} = ping: rsa.domain.com: No address associated with hostname
Ping test failed</msg>
<var>${ping_test}</var>
<arg>ping -c 3 ${EXPECTED_RSA_SERVER} 2&gt;&amp;1 || echo "Ping test failed"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:13.906883" elapsed="0.106619"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.014541" level="INFO">${connectivity_result} = === RSA Server Configuration ===
No RSA server configuration found

=== Port 5500 Test (RSA Auth) ===
nc: getaddrinfo for host "rsa.domain.com" port 5500: No address associated with hostname
Port 5500...</msg>
<var>${connectivity_result}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== RSA Server Configuration ===</arg>
<arg>${rsa_server_config}</arg>
<arg>=== Port 5500 Test (RSA Auth) ===</arg>
<arg>${port_5500_test}</arg>
<arg>=== Port 5555 Test (RSA Auth) ===</arg>
<arg>${port_5555_test}</arg>
<arg>=== DNS Resolution ===</arg>
<arg>${dns_test}</arg>
<arg>=== Ping Test ===</arg>
<arg>${ping_test}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:14.013862" elapsed="0.000717"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.014997" level="INFO">🌐 RSA server connectivity test completed</msg>
<arg>🌐 RSA server connectivity test completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.014794" elapsed="0.000343"/>
</kw>
<return>
<value>${connectivity_result}</value>
<status status="PASS" start="2025-10-05T15:44:14.015205" elapsed="0.000045"/>
</return>
<msg time="2025-10-05T15:44:14.015426" level="INFO">${connectivity_result} = === RSA Server Configuration ===
No RSA server configuration found

=== Port 5500 Test (RSA Auth) ===
nc: getaddrinfo for host "rsa.domain.com" port 5500: No address associated with hostname
Port 5500...</msg>
<var>${connectivity_result}</var>
<doc>🌐 Test connectivity to RSA authentication server</doc>
<status status="PASS" start="2025-10-05T15:44:13.567598" elapsed="0.447860"/>
</kw>
<kw name="Save RSA Connectivity Test to File" owner="patch_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:44:14.016449" level="INFO">${timestamp} = 20251005_154414</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:44:14.016190" elapsed="0.000296"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.016852" level="INFO">${conn_file} = results/test18_patch_management/data/rsa_connectivity_20251005_154414.txt</msg>
<var>${conn_file}</var>
<arg>${DATA_DIR}/rsa_connectivity_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:44:14.016634" elapsed="0.000250"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.017427" level="INFO">${report} = =========================================
=== RSA Server Connectivity Test ===
=========================================
Timestamp: 20251005_154414
Target Server: alhxvdvitap01 (172.30.16.186)
Expecte...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== RSA Server Connectivity Test ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>Expected RSA Server: ${EXPECTED_RSA_SERVER}</arg>
<arg>${connectivity_result}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:14.017011" elapsed="0.000449"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:44:14.037852" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test18_patch_management/data/rsa_connectivity_20251005_154414.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test18_patch_management/data/rsa_connectivity_20251005_154414.txt&lt;/a&gt;'.</msg>
<arg>${conn_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:44:14.017617" elapsed="0.020450"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.038733" level="INFO">📄 RSA connectivity test saved to: results/test18_patch_management/data/rsa_connectivity_20251005_154414.txt</msg>
<arg>📄 RSA connectivity test saved to: ${conn_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.038365" elapsed="0.000546"/>
</kw>
<return>
<value>${conn_file}</value>
<status status="PASS" start="2025-10-05T15:44:14.039009" elapsed="0.000076"/>
</return>
<msg time="2025-10-05T15:44:14.039355" level="INFO">${conn_file} = results/test18_patch_management/data/rsa_connectivity_20251005_154414.txt</msg>
<var>${conn_file}</var>
<arg>${connectivity_result}</arg>
<doc>💾 Save RSA connectivity test results to file</doc>
<status status="PASS" start="2025-10-05T15:44:14.015732" elapsed="0.023666"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.039851" level="INFO">📄 Connectivity test saved to: results/test18_patch_management/data/rsa_connectivity_20251005_154414.txt</msg>
<arg>📄 Connectivity test saved to: ${conn_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.039614" elapsed="0.000362"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.040314" level="INFO">✅ RSA server connectivity test completed</msg>
<arg>✅ RSA server connectivity test completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.040148" elapsed="0.000297"/>
</kw>
<kw name="Log Test End" owner="patch_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.041455" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.041290" elapsed="0.000273"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.042022" level="INFO">🏁 Completed Test: Critical - Test RSA Server Connectivity | Status: PASS</msg>
<arg>🏁 Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.041704" elapsed="0.000443"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.042459" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.042283" elapsed="0.000331"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:44:14.040781" elapsed="0.001915"/>
</kw>
<doc>🌐 Test connectivity to RSA authentication server</doc>
<tag>connectivity</tag>
<tag>critical</tag>
<tag>network</tag>
<tag>rsa</tag>
<status status="PASS" start="2025-10-05T15:44:13.563858" elapsed="0.479777"/>
</test>
<test id="s1-t6" name="Critical - Validate RSA Agent Status" line="91">
<kw name="Log Test Start" owner="patch_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.045675" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.045368" elapsed="0.000448"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.046282" level="INFO">🏁 Starting Test: Critical - Validate RSA Agent Status</msg>
<arg>🏁 Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.046067" elapsed="0.000326"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.046629" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.046518" elapsed="0.000201"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:44:14.044911" elapsed="0.001881"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.046996" level="INFO">🔍 Validating RSA agent service status...</msg>
<arg>🔍 Validating RSA agent service status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.046895" elapsed="0.000189"/>
</kw>
<kw name="Check RSA Agent Service Status" owner="patch_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.047667" level="INFO">🔧 Checking RSA agent service status...</msg>
<arg>🔧 Checking RSA agent service status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.047559" elapsed="0.000203"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:14.048241" level="INFO">Executing command 'systemctl status rsaagent 2&gt;&amp;1 || systemctl status rsa 2&gt;&amp;1 || echo "RSA service not found in systemctl"'.</msg>
<msg time="2025-10-05T15:44:14.070648" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:14.070845" level="INFO">${output} = Unit rsaagent.service could not be found.
Unit rsa.service could not be found.
RSA service not found in systemctl</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:14.048136" elapsed="0.022734"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:14.070989" elapsed="0.000067"/>
</return>
<msg time="2025-10-05T15:44:14.071238" level="INFO">${rsa_service} = Unit rsaagent.service could not be found.
Unit rsa.service could not be found.
RSA service not found in systemctl</msg>
<var>${rsa_service}</var>
<arg>systemctl status rsaagent 2&gt;&amp;1 || systemctl status rsa 2&gt;&amp;1 || echo "RSA service not found in systemctl"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:14.047921" elapsed="0.023340"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:14.071900" level="INFO">Executing command 'systemctl status aceagent 2&gt;&amp;1 || echo "ACE agent service not found"'.</msg>
<msg time="2025-10-05T15:44:14.133278" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:14.133634" level="INFO">${output} = Unit aceagent.service could not be found.
ACE agent service not found</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:14.071763" elapsed="0.061906"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:14.133856" elapsed="0.000091"/>
</return>
<msg time="2025-10-05T15:44:14.134140" level="INFO">${ace_service} = Unit aceagent.service could not be found.
ACE agent service not found</msg>
<var>${ace_service}</var>
<arg>systemctl status aceagent 2&gt;&amp;1 || echo "ACE agent service not found"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:14.071486" elapsed="0.062682"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:14.135031" level="INFO">Executing command 'systemctl list-units | grep -i rsa 2&gt;&amp;1 || echo "No RSA services in systemctl list"'.</msg>
<msg time="2025-10-05T15:44:14.204709" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:14.205141" level="INFO">${output} = No RSA services in systemctl list</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:14.134883" elapsed="0.070326"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:14.205377" elapsed="0.000115"/>
</return>
<msg time="2025-10-05T15:44:14.206153" level="INFO">${service_list} = No RSA services in systemctl list</msg>
<var>${service_list}</var>
<arg>systemctl list-units | grep -i rsa 2&gt;&amp;1 || echo "No RSA services in systemctl list"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:14.134429" elapsed="0.071798"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:14.207914" level="INFO">Executing command 'ps aux | grep -i rsa | grep -v grep || echo "No RSA processes running"'.</msg>
<msg time="2025-10-05T15:44:14.272726" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:14.273028" level="INFO">${output} = No RSA processes running</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:14.207668" elapsed="0.065394"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:14.273154" elapsed="0.000061"/>
</return>
<msg time="2025-10-05T15:44:14.273464" level="INFO">${rsa_process} = No RSA processes running</msg>
<var>${rsa_process}</var>
<arg>ps aux | grep -i rsa | grep -v grep || echo "No RSA processes running"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:14.206927" elapsed="0.066588"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.274365" level="INFO">${service_status} = === RSA Agent Service ===
Unit rsaagent.service could not be found.
Unit rsa.service could not be found.
RSA service not found in systemctl

=== ACE Agent Service ===
Unit aceagent.service could not b...</msg>
<var>${service_status}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== RSA Agent Service ===</arg>
<arg>${rsa_service}</arg>
<arg>=== ACE Agent Service ===</arg>
<arg>${ace_service}</arg>
<arg>=== RSA Services List ===</arg>
<arg>${service_list}</arg>
<arg>=== RSA Processes ===</arg>
<arg>${rsa_process}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:14.273894" elapsed="0.000503"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.276001" level="INFO">🔧 RSA agent service status collected</msg>
<arg>🔧 RSA agent service status collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.275782" elapsed="0.000358"/>
</kw>
<return>
<value>${service_status}</value>
<status status="PASS" start="2025-10-05T15:44:14.276222" elapsed="0.000051"/>
</return>
<msg time="2025-10-05T15:44:14.276429" level="INFO">${service_status} = === RSA Agent Service ===
Unit rsaagent.service could not be found.
Unit rsa.service could not be found.
RSA service not found in systemctl

=== ACE Agent Service ===
Unit aceagent.service could not b...</msg>
<var>${service_status}</var>
<doc>🔧 Check if RSA agent service is running</doc>
<status status="PASS" start="2025-10-05T15:44:14.047301" elapsed="0.229157"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.276777" level="INFO">🔧 RSA Agent Service: === RSA Agent Service ===
Unit rsaagent.service could not be found.
Unit rsa.service could not be found.
RSA service not found in systemctl

=== ACE Agent Service ===
Unit aceagent.service could not be found.
ACE agent service not found

=== RSA Services List ===
No RSA services in systemctl list

=== RSA Processes ===
No RSA processes running</msg>
<arg>🔧 RSA Agent Service: ${service_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.276589" elapsed="0.000321"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.277345" level="INFO">✅ RSA agent service status validated</msg>
<arg>✅ RSA agent service status validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.277109" elapsed="0.000366"/>
</kw>
<kw name="Log Test End" owner="patch_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.278639" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.278489" elapsed="0.000299"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.279076" level="INFO">🏁 Completed Test: Critical - Validate RSA Agent Status | Status: PASS</msg>
<arg>🏁 Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.278911" elapsed="0.000261"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.279441" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.279317" elapsed="0.000218"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:44:14.278005" elapsed="0.001603"/>
</kw>
<doc>🔧 Check if RSA agent service is running</doc>
<tag>critical</tag>
<tag>rsa</tag>
<tag>service</tag>
<tag>status</tag>
<status status="PASS" start="2025-10-05T15:44:14.044142" elapsed="0.235505"/>
</test>
<test id="s1-t7" name="Critical - Check Patch Management Registration" line="103">
<kw name="Log Test Start" owner="patch_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.280842" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.280710" elapsed="0.000231"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.281219" level="INFO">🏁 Starting Test: Critical - Check Patch Management Registration</msg>
<arg>🏁 Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.281069" elapsed="0.000250"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.281629" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.281492" elapsed="0.000241"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:44:14.280428" elapsed="0.001837"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.282600" level="INFO">🔍 Checking patch management server registration...</msg>
<arg>🔍 Checking patch management server registration...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.282427" elapsed="0.000323"/>
</kw>
<kw name="Check Patch Management Registration" owner="patch_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.283431" level="INFO">📦 Checking patch management registration...</msg>
<arg>📦 Checking patch management registration...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.283301" elapsed="0.000238"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:14.284168" level="INFO">Executing command 'subscription-manager status 2&gt;&amp;1 || echo "subscription-manager not available"'.</msg>
<msg time="2025-10-05T15:44:14.328328" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:14.328732" level="INFO">${output} = bash: line 1: subscription-manager: command not found
subscription-manager not available</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:14.284041" elapsed="0.044739"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:14.329320" elapsed="0.000163"/>
</return>
<msg time="2025-10-05T15:44:14.330016" level="INFO">${satellite_status} = bash: line 1: subscription-manager: command not found
subscription-manager not available</msg>
<var>${satellite_status}</var>
<arg>subscription-manager status 2&gt;&amp;1 || echo "subscription-manager not available"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:14.283769" elapsed="0.046296"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:14.331266" level="INFO">Executing command 'subscription-manager identity 2&gt;&amp;1 || echo "Not registered with Satellite"'.</msg>
<msg time="2025-10-05T15:44:14.385123" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:14.385496" level="INFO">${output} = bash: line 1: subscription-manager: command not found
Not registered with Satellite</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:14.331047" elapsed="0.054534"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:14.385846" elapsed="0.000110"/>
</return>
<msg time="2025-10-05T15:44:14.387190" level="INFO">${satellite_identity} = bash: line 1: subscription-manager: command not found
Not registered with Satellite</msg>
<var>${satellite_identity}</var>
<arg>subscription-manager identity 2&gt;&amp;1 || echo "Not registered with Satellite"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:14.330403" elapsed="0.056844"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:14.388588" level="INFO">Executing command 'cat /etc/rhsm/facts/katello.facts 2&gt;/dev/null || echo "No Katello facts file"'.</msg>
<msg time="2025-10-05T15:44:14.441336" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:14.441824" level="INFO">${output} = No Katello facts file</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:14.388268" elapsed="0.053614"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:14.442030" elapsed="0.000092"/>
</return>
<msg time="2025-10-05T15:44:14.442407" level="INFO">${katello_facts} = No Katello facts file</msg>
<var>${katello_facts}</var>
<arg>cat /etc/rhsm/facts/katello.facts 2&gt;/dev/null || echo "No Katello facts file"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:14.387740" elapsed="0.054709"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:14.443973" level="INFO">Executing command 'cat /etc/ansible/ansible.cfg 2&gt;/dev/null || echo "No Ansible configuration"'.</msg>
<msg time="2025-10-05T15:44:14.528810" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:14.529127" level="INFO">${output} = No Ansible configuration</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:14.443715" elapsed="0.085455"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:14.529295" elapsed="0.000081"/>
</return>
<msg time="2025-10-05T15:44:14.529738" level="INFO">${ansible_config} = No Ansible configuration</msg>
<var>${ansible_config}</var>
<arg>cat /etc/ansible/ansible.cfg 2&gt;/dev/null || echo "No Ansible configuration"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:14.442876" elapsed="0.086995"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:14.531176" level="INFO">Executing command 'grep alhxvdvitap01 /etc/ansible/hosts 2&gt;/dev/null || echo "Not in Ansible hosts"'.</msg>
<msg time="2025-10-05T15:44:14.574658" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:14.574865" level="INFO">${output} = Not in Ansible hosts</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:14.530715" elapsed="0.044177"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:14.574965" elapsed="0.000046"/>
</return>
<msg time="2025-10-05T15:44:14.575158" level="INFO">${ansible_hosts} = Not in Ansible hosts</msg>
<var>${ansible_hosts}</var>
<arg>grep ${TARGET_HOSTNAME} /etc/ansible/hosts 2&gt;/dev/null || echo "Not in Ansible hosts"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:14.530230" elapsed="0.044957"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:14.575859" level="INFO">Executing command 'ls -la /etc/yum/pluginconf.d/ 2&gt;/dev/null || echo "No yum plugin configs"'.</msg>
<msg time="2025-10-05T15:44:14.622706" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:14.622949" level="INFO">${output} = No yum plugin configs</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:14.575718" elapsed="0.047262"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:14.623072" elapsed="0.000064"/>
</return>
<msg time="2025-10-05T15:44:14.623311" level="INFO">${yum_plugins} = No yum plugin configs</msg>
<var>${yum_plugins}</var>
<arg>ls -la /etc/yum/pluginconf.d/ 2&gt;/dev/null || echo "No yum plugin configs"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:14.575407" elapsed="0.047944"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:14.624238" level="INFO">Executing command 'rpm -qa | grep -E "katello|satellite|foreman" 2&gt;/dev/null || echo "No Satellite packages found"'.</msg>
<msg time="2025-10-05T15:44:14.676084" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:14.676400" level="INFO">${output} = No Satellite packages found</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:14.624019" elapsed="0.052428"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:14.676568" elapsed="0.000077"/>
</return>
<msg time="2025-10-05T15:44:14.676885" level="INFO">${satellite_pkgs} = No Satellite packages found</msg>
<var>${satellite_pkgs}</var>
<arg>rpm -qa | grep -E "katello|satellite|foreman" 2&gt;/dev/null || echo "No Satellite packages found"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:14.623646" elapsed="0.053280"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.678142" level="INFO">${registration_status} = === Satellite Status ===
bash: line 1: subscription-manager: command not found
subscription-manager not available

=== Satellite Identity ===
bash: line 1: subscription-manager: command not found
Not ...</msg>
<var>${registration_status}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Satellite Status ===</arg>
<arg>${satellite_status}</arg>
<arg>=== Satellite Identity ===</arg>
<arg>${satellite_identity}</arg>
<arg>=== Katello Facts ===</arg>
<arg>${katello_facts}</arg>
<arg>=== Ansible Configuration ===</arg>
<arg>${ansible_config}</arg>
<arg>=== Ansible Hosts ===</arg>
<arg>${ansible_hosts}</arg>
<arg>=== Yum Plugins ===</arg>
<arg>${yum_plugins}</arg>
<arg>=== Satellite Packages ===</arg>
<arg>${satellite_pkgs}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:14.677196" elapsed="0.000996"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.678924" level="INFO">${PATCH_REGISTRATION_STATUS} = === Satellite Status ===
bash: line 1: subscription-manager: command not found
subscription-manager not available

=== Satellite Identity ===
bash: line 1: subscription-manager: command not found
Not ...</msg>
<arg>${PATCH_REGISTRATION_STATUS}</arg>
<arg>${registration_status}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:44:14.678461" elapsed="0.000575"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.679576" level="INFO">📦 Patch management registration status collected</msg>
<arg>📦 Patch management registration status collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.679321" elapsed="0.000439"/>
</kw>
<return>
<value>${registration_status}</value>
<status status="PASS" start="2025-10-05T15:44:14.680993" elapsed="0.000091"/>
</return>
<msg time="2025-10-05T15:44:14.681383" level="INFO">${registration_status} = === Satellite Status ===
bash: line 1: subscription-manager: command not found
subscription-manager not available

=== Satellite Identity ===
bash: line 1: subscription-manager: command not found
Not ...</msg>
<var>${registration_status}</var>
<doc>📦 Check system registration with patch management servers</doc>
<status status="PASS" start="2025-10-05T15:44:14.283048" elapsed="0.398472"/>
</kw>
<kw name="Save Registration Status to File" owner="patch_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:44:14.682941" level="INFO">${timestamp} = 20251005_154414</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:44:14.682603" elapsed="0.000385"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.683458" level="INFO">${reg_file} = results/test18_patch_management/data/patch_registration_20251005_154414.txt</msg>
<var>${reg_file}</var>
<arg>${DATA_DIR}/patch_registration_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:44:14.683171" elapsed="0.000327"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.684112" level="INFO">${report} = =========================================
=== Patch Management Registration ===
=========================================
Timestamp: 20251005_154414
Target Server: alhxvdvitap01 (172.30.16.186)

=== S...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== Patch Management Registration ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>${registration_status}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:14.683656" elapsed="0.000497"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:44:14.698665" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test18_patch_management/data/patch_registration_20251005_154414.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test18_patch_management/data/patch_registration_20251005_154414.txt&lt;/a&gt;'.</msg>
<arg>${reg_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:44:14.684400" elapsed="0.014461"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.699532" level="INFO">📄 Registration status saved to: results/test18_patch_management/data/patch_registration_20251005_154414.txt</msg>
<arg>📄 Registration status saved to: ${reg_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.699157" elapsed="0.000563"/>
</kw>
<return>
<value>${reg_file}</value>
<status status="PASS" start="2025-10-05T15:44:14.699819" elapsed="0.000069"/>
</return>
<msg time="2025-10-05T15:44:14.700198" level="INFO">${reg_file} = results/test18_patch_management/data/patch_registration_20251005_154414.txt</msg>
<var>${reg_file}</var>
<arg>${registration_status}</arg>
<doc>💾 Save registration status to file</doc>
<status status="PASS" start="2025-10-05T15:44:14.682044" elapsed="0.018201"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.700718" level="INFO">📄 Registration status saved to: results/test18_patch_management/data/patch_registration_20251005_154414.txt</msg>
<arg>📄 Registration status saved to: ${reg_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.700448" elapsed="0.000427"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.701244" level="INFO">✅ Patch management registration check completed</msg>
<arg>✅ Patch management registration check completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.701061" elapsed="0.000326"/>
</kw>
<kw name="Log Test End" owner="patch_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.702757" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.702558" elapsed="0.000352"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.703361" level="INFO">🏁 Completed Test: Critical - Check Patch Management Registration | Status: PASS</msg>
<arg>🏁 Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.703091" elapsed="0.000413"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.703930" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.703681" elapsed="0.000388"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:44:14.701991" elapsed="0.002181"/>
</kw>
<doc>📦 Verify system is registered with patch management server (Ansible/Satellite)</doc>
<tag>ansible</tag>
<tag>critical</tag>
<tag>patch_management</tag>
<tag>registration</tag>
<tag>satellite</tag>
<status status="PASS" start="2025-10-05T15:44:14.279902" elapsed="0.424337"/>
</test>
<test id="s1-t8" name="Normal - Validate Two-Factor Authentication Flow" line="118">
<kw name="Log Test Start" owner="patch_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.706306" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.705990" elapsed="0.000512"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.706929" level="INFO">🏁 Starting Test: Normal - Validate Two-Factor Authentication Flow</msg>
<arg>🏁 Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.706688" elapsed="0.000380"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.707411" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.707239" elapsed="0.000330"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:44:14.705404" elapsed="0.002265"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.708031" level="INFO">🔍 Validating two-factor authentication flow...</msg>
<arg>🔍 Validating two-factor authentication flow...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.707848" elapsed="0.000326"/>
</kw>
<kw name="Validate Two Factor Authentication Flow" owner="patch_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.710772" level="INFO">🔐 Validating two-factor authentication flow...</msg>
<arg>🔐 Validating two-factor authentication flow...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.710517" elapsed="0.000428"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:14.711812" level="INFO">Executing command 'cat /etc/pam.d/sshd 2&gt;/dev/null || echo "No /etc/pam.d/sshd"'.</msg>
<msg time="2025-10-05T15:44:14.726906" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:14.727187" level="INFO">${output} = # PAM configuration for the Secure Shell service

# Standard Un*x authentication.
@include common-auth

# Disallow non-root logins when /etc/nologin exists.
account    required     pam_nologin.so

# U...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:14.711616" elapsed="0.015617"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:14.727349" elapsed="0.000074"/>
</return>
<msg time="2025-10-05T15:44:14.727655" level="INFO">${pam_sshd} = # PAM configuration for the Secure Shell service

# Standard Un*x authentication.
@include common-auth

# Disallow non-root logins when /etc/nologin exists.
account    required     pam_nologin.so

# U...</msg>
<var>${pam_sshd}</var>
<arg>cat /etc/pam.d/sshd 2&gt;/dev/null || echo "No /etc/pam.d/sshd"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:14.711214" elapsed="0.016482"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:14.728711" level="INFO">Executing command 'cat /etc/pam.d/login 2&gt;/dev/null || echo "No /etc/pam.d/login"'.</msg>
<msg time="2025-10-05T15:44:14.780231" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:14.780583" level="INFO">${output} = #
# The PAM configuration file for the Shadow `login' service
#

# Enforce a minimal delay in case of failure (in microseconds).
# (Replaces the `FAIL_DELAY' setting from login.defs)
# Note that other...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:14.728503" elapsed="0.052129"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:14.780759" elapsed="0.000077"/>
</return>
<msg time="2025-10-05T15:44:14.781103" level="INFO">${pam_login} = #
# The PAM configuration file for the Shadow `login' service
#

# Enforce a minimal delay in case of failure (in microseconds).
# (Replaces the `FAIL_DELAY' setting from login.defs)
# Note that other...</msg>
<var>${pam_login}</var>
<arg>cat /etc/pam.d/login 2&gt;/dev/null || echo "No /etc/pam.d/login"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:14.728004" elapsed="0.053142"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:14.782385" level="INFO">Executing command 'cat /etc/pam.d/system-auth 2&gt;/dev/null || echo "No /etc/pam.d/system-auth"'.</msg>
<msg time="2025-10-05T15:44:14.835862" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:14.836185" level="INFO">${output} = No /etc/pam.d/system-auth</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:14.782152" elapsed="0.054183"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:14.836534" elapsed="0.000188"/>
</return>
<msg time="2025-10-05T15:44:14.837080" level="INFO">${pam_system} = No /etc/pam.d/system-auth</msg>
<var>${pam_system}</var>
<arg>cat /etc/pam.d/system-auth 2&gt;/dev/null || echo "No /etc/pam.d/system-auth"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:14.781485" elapsed="0.055646"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:14.838744" level="INFO">Executing command 'ls -la ~/.rsa* 2&gt;/dev/null || echo "No user RSA config in home"'.</msg>
<msg time="2025-10-05T15:44:14.892572" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:14.892962" level="INFO">${output} = No user RSA config in home</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:14.838492" elapsed="0.054526"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:14.893163" elapsed="0.000082"/>
</return>
<msg time="2025-10-05T15:44:14.893707" level="INFO">${user_rsa_config} = No user RSA config in home</msg>
<var>${user_rsa_config}</var>
<arg>ls -la ~/.rsa* 2&gt;/dev/null || echo "No user RSA config in home"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:14.837665" elapsed="0.056182"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.895437" level="INFO">${tfa_status} = === PAM SSHD ===
# PAM configuration for the Secure Shell service

# Standard Un*x authentication.
@include common-auth

# Disallow non-root logins when /etc/nologin exists.
account    required     pa...</msg>
<var>${tfa_status}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== PAM SSHD ===</arg>
<arg>${pam_sshd}</arg>
<arg>=== PAM Login ===</arg>
<arg>${pam_login}</arg>
<arg>=== PAM System Auth ===</arg>
<arg>${pam_system}</arg>
<arg>=== User RSA Config ===</arg>
<arg>${user_rsa_config}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:14.894638" elapsed="0.000857"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.896099" level="INFO">🔐 Two-factor authentication flow validated</msg>
<arg>🔐 Two-factor authentication flow validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.895770" elapsed="0.000856"/>
</kw>
<return>
<value>${tfa_status}</value>
<status status="PASS" start="2025-10-05T15:44:14.896750" elapsed="0.000070"/>
</return>
<msg time="2025-10-05T15:44:14.897212" level="INFO">${tfa_status} = === PAM SSHD ===
# PAM configuration for the Secure Shell service

# Standard Un*x authentication.
@include common-auth

# Disallow non-root logins when /etc/nologin exists.
account    required     pa...</msg>
<var>${tfa_status}</var>
<doc>🔐 Validate two-factor authentication flow readiness</doc>
<status status="PASS" start="2025-10-05T15:44:14.710110" elapsed="0.187158"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.898358" level="INFO">🔐 2FA Flow Status: === PAM SSHD ===
# PAM configuration for the Secure Shell service

# Standard Un*x authentication.
@include common-auth

# Disallow non-root logins when /etc/nologin exists.
account    required     pam_nologin.so

# Uncomment and edit /etc/security/access.conf if you need to set complex
# access limits that are hard to express in sshd_config.
# account  required     pam_access.so

# Standard Un*x authorization.
@include common-account

# SELinux needs to be the first session rule.  This ensures that any
# lingering context has been cleared.  Without this it is possible that a
# module could execute code in the wrong domain.
session [success=ok ignore=ignore module_unknown=ignore default=bad]        pam_selinux.so close

# Set the loginuid process attribute.
session    required     pam_loginuid.so

# Create a new session keyring.
session    optional     pam_keyinit.so force revoke

# Standard Un*x session setup and teardown.
@include common-session

# Print the message of the day upon successful login.
# This includes a dynamically generated part from /run/motd.dynamic
# and a static (admin-editable) part from /etc/motd.
session    optional     pam_motd.so  motd=/run/motd.dynamic
session    optional     pam_motd.so noupdate

# Print the status of the user's mailbox upon successful login.
session    optional     pam_mail.so standard noenv # [1]

# Set up user limits from /etc/security/limits.conf.
session    required     pam_limits.so

# Read environment variables from /etc/environment and
# /etc/security/pam_env.conf.
session    required     pam_env.so # [1]
# In Debian 4.0 (etch), locale-related environment variables were moved to
# /etc/default/locale, so read that as well.
session    required     pam_env.so user_readenv=1 envfile=/etc/default/locale

# SELinux needs to intervene at login time to ensure that the process starts
# in the proper default security context.  Only sessions which are intended
# to run in the user's context should be run after this.
session [success=ok ignore=ignore module_unknown=ignore default=bad]        pam_selinux.so open

# Standard Un*x password updating.
@include common-password

=== PAM Login ===
#
# The PAM configuration file for the Shadow `login' service
#

# Enforce a minimal delay in case of failure (in microseconds).
# (Replaces the `FAIL_DELAY' setting from login.defs)
# Note that other modules may require another minimal delay. (for example,
# to disable any delay, you should add the nodelay option to pam_unix)
auth       optional   pam_faildelay.so  delay=3000000

# Outputs an issue file prior to each login prompt (Replaces the
# ISSUE_FILE option from login.defs). Uncomment for use
# auth       required   pam_issue.so issue=/etc/issue

# Disallows other than root logins when /etc/nologin exists
# (Replaces the `NOLOGINS_FILE' option from login.defs)
auth       requisite  pam_nologin.so

# SELinux needs to be the first session rule. This ensures that any
# lingering context has been cleared. Without this it is possible
# that a module could execute code in the wrong domain.
# When the module is present, "required" would be sufficient (When SELinux
# is disabled, this returns success.)
session [success=ok ignore=ignore module_unknown=ignore default=bad] pam_selinux.so close

# Sets the loginuid process attribute
session    required     pam_loginuid.so

# Prints the message of the day upon successful login.
# (Replaces the `MOTD_FILE' option in login.defs)
# This includes a dynamically generated part from /run/motd.dynamic
# and a static (admin-editable) part from /etc/motd.
session    optional   pam_motd.so motd=/run/motd.dynamic
session    optional   pam_motd.so noupdate

# SELinux needs to intervene at login time to ensure that the process
# starts in the proper default security context. Only sessions which are
# intended to run in the user's context should be run after this.
# pam_selinux.so changes the SELinux context of the used TTY and configures
# SELinux in order to transition to the user context with the next execve()
# call.
session [success=ok ignore=ignore module_unknown=ignore default=bad] pam_selinux.so open
# When the module is present, "required" would be sufficient (When SELinux
# is disabled, this returns success.)

# This module parses environment configuration file(s)
# and also allows you to use an extended config
# file /etc/security/pam_env.conf.
# 
# parsing /etc/environment needs "readenv=1"
session       required   pam_env.so readenv=1
# locale variables can also be set in /etc/default/locale
# reading this file *in addition to /etc/environment* does not hurt
session       required   pam_env.so readenv=1 envfile=/etc/default/locale

# Standard Un*x authentication.
@include common-auth

# This allows certain extra groups to be granted to a user
# based on things like time of day, tty, service, and user.
# Please edit /etc/security/group.conf to fit your needs
# (Replaces the `CONSOLE_GROUPS' option in login.defs)
auth       optional   pam_group.so

# Uncomment and edit /etc/security/time.conf if you need to set
# time restraint on logins.
# (Replaces the `PORTTIME_CHECKS_ENAB' option from login.defs
# as well as /etc/porttime)
# account    requisite  pam_time.so

# Uncomment and edit /etc/security/access.conf if you need to
# set access limits.
# (Replaces /etc/login.access file)
# account  required       pam_access.so

# Sets up user limits according to /etc/security/limits.conf
# (Replaces the use of /etc/limits in old login)
session    required   pam_limits.so

# Prints the last login info upon successful login
# (Replaces the `LASTLOG_ENAB' option from login.defs)
session    optional   pam_lastlog.so

# Prints the status of the user's mailbox upon successful login
# (Replaces the `MAIL_CHECK_ENAB' option from login.defs). 
#
# This also defines the MAIL environment variable
# However, userdel also needs MAIL_DIR and MAIL_FILE variables
# in /etc/login.defs to make sure that removing a user 
# also removes the user's mail spool file.
# See comments in /etc/login.defs
session    optional   pam_mail.so standard

# Create a new session keyring.
session    optional   pam_keyinit.so force revoke

# Standard Un*x account and session
@include common-account
@include common-session
@include common-password

=== PAM System Auth ===
No /etc/pam.d/system-auth

=== User RSA Config ===
No user RSA config in home</msg>
<arg>🔐 2FA Flow Status: ${tfa_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.897603" elapsed="0.002131"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.900299" level="INFO">✅ Two-factor authentication flow validated</msg>
<arg>✅ Two-factor authentication flow validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.900031" elapsed="0.000499"/>
</kw>
<kw name="Log Test End" owner="patch_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.902537" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.902259" elapsed="0.000849"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.903916" level="INFO">🏁 Completed Test: Normal - Validate Two-Factor Authentication Flow | Status: PASS</msg>
<arg>🏁 Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.903435" elapsed="0.000689"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.904701" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.904392" elapsed="0.000510"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:44:14.901101" elapsed="0.005166"/>
</kw>
<doc>🔐 Verify RSA two-factor authentication flow is ready</doc>
<tag>2fa</tag>
<tag>authentication_flow</tag>
<tag>normal</tag>
<tag>rsa</tag>
<status status="PASS" start="2025-10-05T15:44:14.704629" elapsed="0.201737"/>
</test>
<test id="s1-t9" name="Normal - Check RSA Token Configuration" line="130">
<kw name="Log Test Start" owner="patch_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.909338" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.909068" elapsed="0.000571"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.910366" level="INFO">🏁 Starting Test: Normal - Check RSA Token Configuration</msg>
<arg>🏁 Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.910028" elapsed="0.000535"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.911028" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.910815" elapsed="0.000387"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:44:14.908533" elapsed="0.002821"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.911795" level="INFO">🔍 Checking RSA token configuration...</msg>
<arg>🔍 Checking RSA token configuration...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.911588" elapsed="0.000405"/>
</kw>
<kw name="Check RSA Token Configuration" owner="patch_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.913363" level="INFO">🎫 Checking RSA token configuration...</msg>
<arg>🎫 Checking RSA token configuration...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.912736" elapsed="0.000820"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:14.915346" level="INFO">Executing command 'cat /var/ace/user_token.db 2&gt;/dev/null || echo "No token database found"'.</msg>
<msg time="2025-10-05T15:44:14.946484" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:14.946721" level="INFO">${output} = No token database found</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:14.915063" elapsed="0.031781"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:14.946980" elapsed="0.000081"/>
</return>
<msg time="2025-10-05T15:44:14.947299" level="INFO">${token_info} = No token database found</msg>
<var>${token_info}</var>
<arg>cat /var/ace/user_token.db 2&gt;/dev/null || echo "No token database found"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:14.914295" elapsed="0.033043"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:14.948817" level="INFO">Executing command 'ls -la /var/ace/cache/ 2&gt;/dev/null || echo "No token cache"'.</msg>
<msg time="2025-10-05T15:44:14.994630" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:14.995302" level="INFO">${output} = No token cache</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:14.948548" elapsed="0.046849"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:14.995523" elapsed="0.000088"/>
</return>
<msg time="2025-10-05T15:44:14.995883" level="INFO">${token_cache} = No token cache</msg>
<var>${token_cache}</var>
<arg>ls -la /var/ace/cache/ 2&gt;/dev/null || echo "No token cache"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:14.947714" elapsed="0.048212"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:14.997275" level="INFO">Executing command 'cat /var/ace/securid 2&gt;/dev/null || echo "No securid file"'.</msg>
<msg time="2025-10-05T15:44:15.047791" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:15.048096" level="INFO">${output} = No securid file</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:14.997033" elapsed="0.051108"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:15.048261" elapsed="0.000073"/>
</return>
<msg time="2025-10-05T15:44:15.048564" level="INFO">${securid_config} = No securid file</msg>
<var>${securid_config}</var>
<arg>cat /var/ace/securid 2&gt;/dev/null || echo "No securid file"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:14.996351" elapsed="0.052258"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.050342" level="INFO">${token_config} = === Token Database ===
No token database found

=== Token Cache ===
No token cache

=== SecurID Configuration ===
No securid file</msg>
<var>${token_config}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Token Database ===</arg>
<arg>${token_info}</arg>
<arg>=== Token Cache ===</arg>
<arg>${token_cache}</arg>
<arg>=== SecurID Configuration ===</arg>
<arg>${securid_config}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:15.049519" elapsed="0.000871"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.051194" level="INFO">🎫 RSA token configuration collected</msg>
<arg>🎫 RSA token configuration collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.050662" elapsed="0.000761"/>
</kw>
<return>
<value>${token_config}</value>
<status status="PASS" start="2025-10-05T15:44:15.051522" elapsed="0.000073"/>
</return>
<msg time="2025-10-05T15:44:15.051886" level="INFO">${token_config} = === Token Database ===
No token database found

=== Token Cache ===
No token cache

=== SecurID Configuration ===
No securid file</msg>
<var>${token_config}</var>
<doc>🎫 Check RSA token configuration</doc>
<status status="PASS" start="2025-10-05T15:44:14.912320" elapsed="0.139609"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.052411" level="INFO">🎫 RSA Token Config: === Token Database ===
No token database found

=== Token Cache ===
No token cache

=== SecurID Configuration ===
No securid file</msg>
<arg>🎫 RSA Token Config: ${token_config}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.052114" elapsed="0.000474"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.053050" level="INFO">✅ RSA token configuration checked</msg>
<arg>✅ RSA token configuration checked</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.052854" elapsed="0.000363"/>
</kw>
<kw name="Log Test End" owner="patch_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.055980" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.055268" elapsed="0.000941"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.056769" level="INFO">🏁 Completed Test: Normal - Check RSA Token Configuration | Status: PASS</msg>
<arg>🏁 Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.056446" elapsed="0.000462"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.057290" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.057062" elapsed="0.000360"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:44:15.054644" elapsed="0.003032"/>
</kw>
<doc>🎫 Verify RSA token configuration and assignment</doc>
<tag>configuration</tag>
<tag>normal</tag>
<tag>rsa</tag>
<tag>token</tag>
<status status="PASS" start="2025-10-05T15:44:14.906901" elapsed="0.151089"/>
</test>
<test id="s1-t10" name="Normal - Validate Satellite Subscription Status" line="142">
<kw name="Log Test Start" owner="patch_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.059998" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.059802" elapsed="0.000338"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.060614" level="INFO">🏁 Starting Test: Normal - Validate Satellite Subscription Status</msg>
<arg>🏁 Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.060325" elapsed="0.000426"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.061103" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.060932" elapsed="0.000308"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:44:15.059377" elapsed="0.002000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.062049" level="INFO">🔍 Validating Satellite subscription status...</msg>
<arg>🔍 Validating Satellite subscription status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.061868" elapsed="0.000371"/>
</kw>
<kw name="Check Satellite Subscription Status" owner="patch_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.063287" level="INFO">📦 Checking Satellite subscription status...</msg>
<arg>📦 Checking Satellite subscription status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.063136" elapsed="0.000284"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:15.064201" level="INFO">Executing command 'subscription-manager status 2&gt;&amp;1 || echo "subscription-manager not available"'.</msg>
<msg time="2025-10-05T15:44:15.103553" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:15.103874" level="INFO">${output} = bash: line 1: subscription-manager: command not found
subscription-manager not available</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:15.064023" elapsed="0.039899"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:15.104047" elapsed="0.000075"/>
</return>
<msg time="2025-10-05T15:44:15.104385" level="INFO">${sub_status} = bash: line 1: subscription-manager: command not found
subscription-manager not available</msg>
<var>${sub_status}</var>
<arg>subscription-manager status 2&gt;&amp;1 || echo "subscription-manager not available"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:15.063627" elapsed="0.040797"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:15.105462" level="INFO">Executing command 'subscription-manager list --consumed 2&gt;&amp;1 || echo "No subscriptions listed"'.</msg>
<msg time="2025-10-05T15:44:15.157021" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:15.157512" level="INFO">${output} = bash: line 1: subscription-manager: command not found
No subscriptions listed</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:15.105180" elapsed="0.052426"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:15.157943" elapsed="0.000129"/>
</return>
<msg time="2025-10-05T15:44:15.158464" level="INFO">${sub_list} = bash: line 1: subscription-manager: command not found
No subscriptions listed</msg>
<var>${sub_list}</var>
<arg>subscription-manager list --consumed 2&gt;&amp;1 || echo "No subscriptions listed"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:15.104721" elapsed="0.053793"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:15.159790" level="INFO">Executing command 'subscription-manager repos --list-enabled 2&gt;&amp;1 | head -50 || echo "No repos listed"'.</msg>
<msg time="2025-10-05T15:44:15.206834" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:15.207170" level="INFO">${output} = bash: line 1: subscription-manager: command not found</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:15.159496" elapsed="0.047721"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:15.207353" elapsed="0.000078"/>
</return>
<msg time="2025-10-05T15:44:15.207680" level="INFO">${repos_list} = bash: line 1: subscription-manager: command not found</msg>
<var>${repos_list}</var>
<arg>subscription-manager repos --list-enabled 2&gt;&amp;1 | head -50 || echo "No repos listed"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:15.158961" elapsed="0.048753"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:15.208724" level="INFO">Executing command 'subscription-manager compliance 2&gt;&amp;1 || echo "Compliance check not available"'.</msg>
<msg time="2025-10-05T15:44:15.258176" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:15.258516" level="INFO">${output} = bash: line 1: subscription-manager: command not found
Compliance check not available</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:15.208524" elapsed="0.050039"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:15.258689" elapsed="0.000081"/>
</return>
<msg time="2025-10-05T15:44:15.259017" level="INFO">${compliance} = bash: line 1: subscription-manager: command not found
Compliance check not available</msg>
<var>${compliance}</var>
<arg>subscription-manager compliance 2&gt;&amp;1 || echo "Compliance check not available"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:15.208061" elapsed="0.050994"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.259925" level="INFO">${subscription_status} = === Subscription Status ===
bash: line 1: subscription-manager: command not found
subscription-manager not available

=== Consumed Subscriptions ===
bash: line 1: subscription-manager: command not fou...</msg>
<var>${subscription_status}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Subscription Status ===</arg>
<arg>${sub_status}</arg>
<arg>=== Consumed Subscriptions ===</arg>
<arg>${sub_list}</arg>
<arg>=== Enabled Repositories ===</arg>
<arg>${repos_list}</arg>
<arg>=== Compliance Status ===</arg>
<arg>${compliance}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:15.259342" elapsed="0.000627"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.260391" level="INFO">📦 Satellite subscription status collected</msg>
<arg>📦 Satellite subscription status collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.260185" elapsed="0.000363"/>
</kw>
<return>
<value>${subscription_status}</value>
<status status="PASS" start="2025-10-05T15:44:15.260633" elapsed="0.000054"/>
</return>
<msg time="2025-10-05T15:44:15.260882" level="INFO">${subscription_status} = === Subscription Status ===
bash: line 1: subscription-manager: command not found
subscription-manager not available

=== Consumed Subscriptions ===
bash: line 1: subscription-manager: command not fou...</msg>
<var>${subscription_status}</var>
<doc>📦 Check Red Hat Satellite subscription status</doc>
<status status="PASS" start="2025-10-05T15:44:15.062822" elapsed="0.198095"/>
</kw>
<kw name="Save Subscription Status to File" owner="patch_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:44:15.262001" level="INFO">${timestamp} = 20251005_154415</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:44:15.261671" elapsed="0.000365"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.262419" level="INFO">${sub_file} = results/test18_patch_management/data/subscription_status_20251005_154415.txt</msg>
<var>${sub_file}</var>
<arg>${DATA_DIR}/subscription_status_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:44:15.262189" elapsed="0.000262"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.263005" level="INFO">${report} = =========================================
=== Satellite Subscription Status ===
=========================================
Timestamp: 20251005_154415
Target Server: alhxvdvitap01 (172.30.16.186)

=== S...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== Satellite Subscription Status ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>${subscription_status}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:15.262596" elapsed="0.000444"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:44:15.274694" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test18_patch_management/data/subscription_status_20251005_154415.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test18_patch_management/data/subscription_status_20251005_154415.txt&lt;/a&gt;'.</msg>
<arg>${sub_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:44:15.263213" elapsed="0.011649"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.275341" level="INFO">📄 Subscription status saved to: results/test18_patch_management/data/subscription_status_20251005_154415.txt</msg>
<arg>📄 Subscription status saved to: ${sub_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.275083" elapsed="0.000378"/>
</kw>
<return>
<value>${sub_file}</value>
<status status="PASS" start="2025-10-05T15:44:15.275535" elapsed="0.000048"/>
</return>
<msg time="2025-10-05T15:44:15.275746" level="INFO">${sub_file} = results/test18_patch_management/data/subscription_status_20251005_154415.txt</msg>
<var>${sub_file}</var>
<arg>${subscription_status}</arg>
<doc>💾 Save subscription status to file</doc>
<status status="PASS" start="2025-10-05T15:44:15.261194" elapsed="0.014580"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.276094" level="INFO">📄 Subscription status saved to: results/test18_patch_management/data/subscription_status_20251005_154415.txt</msg>
<arg>📄 Subscription status saved to: ${sub_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.275933" elapsed="0.000275"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.276553" level="INFO">✅ Satellite subscription status validated</msg>
<arg>✅ Satellite subscription status validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.276379" elapsed="0.000299"/>
</kw>
<kw name="Log Test End" owner="patch_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.277371" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.277231" elapsed="0.000282"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.277913" level="INFO">🏁 Completed Test: Normal - Validate Satellite Subscription Status | Status: PASS</msg>
<arg>🏁 Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.277649" elapsed="0.000383"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.278319" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.278169" elapsed="0.000250"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:44:15.276925" elapsed="0.001568"/>
</kw>
<doc>📦 Check Red Hat Satellite subscription status</doc>
<tag>normal</tag>
<tag>rhel</tag>
<tag>satellite</tag>
<tag>subscription</tag>
<status status="PASS" start="2025-10-05T15:44:15.058602" elapsed="0.220802"/>
</test>
<test id="s1-t11" name="Normal - Check Available Patches" line="157">
<kw name="Log Test Start" owner="patch_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.281610" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.281104" elapsed="0.000886"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.282600" level="INFO">🏁 Starting Test: Normal - Check Available Patches</msg>
<arg>🏁 Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.282190" elapsed="0.000790"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.283354" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.283169" elapsed="0.000334"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:44:15.280598" elapsed="0.003117"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.284169" level="INFO">🔍 Checking available patches and updates...</msg>
<arg>🔍 Checking available patches and updates...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.283907" elapsed="0.000427"/>
</kw>
<kw name="Check Available Patches" owner="patch_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.286002" level="INFO">🔄 Checking available patches...</msg>
<arg>🔄 Checking available patches...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.285799" elapsed="0.000297"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:15.286981" level="INFO">Executing command 'yum check-update 2&gt;&amp;1 || dnf check-update 2&gt;&amp;1 || echo "Package manager check not available"'.</msg>
<msg time="2025-10-05T15:44:15.310502" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:15.310687" level="INFO">${output} = bash: line 1: yum: command not found
bash: line 1: dnf: command not found
Package manager check not available</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:15.286767" elapsed="0.023948"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:15.310789" elapsed="0.000045"/>
</return>
<msg time="2025-10-05T15:44:15.310972" level="INFO">${yum_updates} = bash: line 1: yum: command not found
bash: line 1: dnf: command not found
Package manager check not available</msg>
<var>${yum_updates}</var>
<arg>yum check-update 2&gt;&amp;1 || dnf check-update 2&gt;&amp;1 || echo "Package manager check not available"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:15.286365" elapsed="0.024632"/>
</kw>
<kw name="${security_updates}= Execute Command">
<msg time="2025-10-05T15:44:15.313094" level="FAIL">No keyword with name '${security_updates}= Execute Command' found.</msg>
<arg>yum updateinfo list security 2&gt;&amp;1 || dnf updateinfo list security 2&gt;&amp;1 || echo "Security updates check not available"</arg>
<status status="FAIL" start="2025-10-05T15:44:15.313026" elapsed="0.000132">No keyword with name '${security_updates}= Execute Command' found.</status>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<var>${last_update}</var>
<arg>rpm -qa --last | head -20 || echo "RPM query not available"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="NOT RUN" start="2025-10-05T15:44:15.313429" elapsed="0.000051"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<var>${yum_history}</var>
<arg>yum history list 2&gt;&amp;1 | head -20 || dnf history list 2&gt;&amp;1 | head -20 || echo "Update history not available"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="NOT RUN" start="2025-10-05T15:44:15.313704" elapsed="0.000037"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<var>${patch_status}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Available Updates ===</arg>
<arg>${yum_updates}</arg>
<arg>=== Security Updates ===</arg>
<arg>${security_updates}</arg>
<arg>=== Recently Installed Packages ===</arg>
<arg>${last_update}</arg>
<arg>=== Update History ===</arg>
<arg>${yum_history}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" start="2025-10-05T15:44:15.313979" elapsed="0.000027"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>🔄 Available patches collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:44:15.314137" elapsed="0.000019"/>
</kw>
<return>
<value>${patch_status}</value>
<status status="NOT RUN" start="2025-10-05T15:44:15.314204" elapsed="0.000022"/>
</return>
<var>${patch_status}</var>
<doc>🔄 Check for available patches and updates</doc>
<status status="FAIL" start="2025-10-05T15:44:15.284839" elapsed="0.029536">No keyword with name '${security_updates}= Execute Command' found.</status>
</kw>
<kw name="Save Available Patches to File" owner="patch_keywords">
<var>${patch_file}</var>
<arg>${patch_status}</arg>
<doc>💾 Save available patches to file</doc>
<status status="NOT RUN" start="2025-10-05T15:44:15.314586" elapsed="0.000028"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📄 Available patches saved to: ${patch_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:44:15.314740" elapsed="0.000064"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>✅ Available patches check completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:44:15.314921" elapsed="0.000020"/>
</kw>
<kw name="Log Test End" owner="patch_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.315861" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.315683" elapsed="0.000315"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.316316" level="INFO">🏁 Completed Test: Normal - Check Available Patches | Status: FAIL</msg>
<arg>🏁 Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.316125" elapsed="0.000286"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.316656" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.316526" elapsed="0.000216"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:44:15.315226" elapsed="0.002245"/>
</kw>
<doc>🔄 Check for available patches and updates</doc>
<tag>normal</tag>
<tag>patches</tag>
<tag>updates</tag>
<tag>yum</tag>
<status status="FAIL" start="2025-10-05T15:44:15.279822" elapsed="0.037712">No keyword with name '${security_updates}= Execute Command' found.</status>
</test>
<test id="s1-t12" name="Normal - Validate Ansible Control Node Access" line="172">
<kw name="Log Test Start" owner="patch_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.319004" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.318855" elapsed="0.000222"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.319333" level="INFO">🏁 Starting Test: Normal - Validate Ansible Control Node Access</msg>
<arg>🏁 Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.319203" elapsed="0.000203"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.319584" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.319492" elapsed="0.000157"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:44:15.318616" elapsed="0.001083"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.319867" level="INFO">🔍 Validating Ansible control node access...</msg>
<arg>🔍 Validating Ansible control node access...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.319784" elapsed="0.000148"/>
</kw>
<kw name="Check Ansible Control Node Access" owner="patch_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.320357" level="INFO">🤖 Checking Ansible control node access...</msg>
<arg>🤖 Checking Ansible control node access...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.320264" elapsed="0.000168"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:15.320853" level="INFO">Executing command 'ls -la /etc/ansible/facts.d/ 2&gt;/dev/null || echo "No Ansible facts directory"'.</msg>
<msg time="2025-10-05T15:44:15.362017" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:15.362284" level="INFO">${output} = No Ansible facts directory</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:15.320756" elapsed="0.041562"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:15.362418" elapsed="0.000074"/>
</return>
<msg time="2025-10-05T15:44:15.362726" level="INFO">${ansible_facts} = No Ansible facts directory</msg>
<var>${ansible_facts}</var>
<arg>ls -la /etc/ansible/facts.d/ 2&gt;/dev/null || echo "No Ansible facts directory"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:15.320553" elapsed="0.042212"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:15.363839" level="INFO">Executing command 'grep ansible /var/log/messages 2&gt;/dev/null | tail -20 || echo "No Ansible logs in messages"'.</msg>
<msg time="2025-10-05T15:44:15.412532" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:15.412882" level="INFO">${output} = </msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:15.363613" elapsed="0.049317"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:15.413053" elapsed="0.000077"/>
</return>
<msg time="2025-10-05T15:44:15.413369" level="INFO">${ansible_log} = </msg>
<var>${ansible_log}</var>
<arg>grep ansible /var/log/messages 2&gt;/dev/null | tail -20 || echo "No Ansible logs in messages"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:15.363095" elapsed="0.050400"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:15.415632" level="INFO">Executing command 'ls -la ~/.ssh/authorized_keys 2&gt;/dev/null | head -20 || echo "No authorized_keys"'.</msg>
<msg time="2025-10-05T15:44:15.474472" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:15.474950" level="INFO">${output} = </msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:15.415186" elapsed="0.059841"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:15.475338" elapsed="0.000149"/>
</return>
<msg time="2025-10-05T15:44:15.475902" level="INFO">${ssh_keys} = </msg>
<var>${ssh_keys}</var>
<arg>ls -la ~/.ssh/authorized_keys 2&gt;/dev/null | head -20 || echo "No authorized_keys"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:15.414168" elapsed="0.061805"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:15.478116" level="INFO">Executing command 'id ansible 2&gt;/dev/null || echo "No ansible user"'.</msg>
<msg time="2025-10-05T15:44:15.547250" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:15.547746" level="INFO">${output} = No ansible user</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:15.477514" elapsed="0.070306"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:15.548009" elapsed="0.000120"/>
</return>
<msg time="2025-10-05T15:44:15.548605" level="INFO">${ansible_user} = No ansible user</msg>
<var>${ansible_user}</var>
<arg>id ansible 2&gt;/dev/null || echo "No ansible user"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:15.476557" elapsed="0.072124"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.550183" level="INFO">${ansible_status} = === Ansible Facts ===
No Ansible facts directory

=== Ansible Logs ===


=== SSH Authorized Keys ===


=== Ansible User ===
No ansible user</msg>
<var>${ansible_status}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Ansible Facts ===</arg>
<arg>${ansible_facts}</arg>
<arg>=== Ansible Logs ===</arg>
<arg>${ansible_log}</arg>
<arg>=== SSH Authorized Keys ===</arg>
<arg>${ssh_keys}</arg>
<arg>=== Ansible User ===</arg>
<arg>${ansible_user}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:15.549153" elapsed="0.001133"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.550880" level="INFO">🤖 Ansible control node access checked</msg>
<arg>🤖 Ansible control node access checked</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.550575" elapsed="0.000566"/>
</kw>
<return>
<value>${ansible_status}</value>
<status status="PASS" start="2025-10-05T15:44:15.552392" elapsed="0.000140"/>
</return>
<msg time="2025-10-05T15:44:15.552866" level="INFO">${ansible_status} = === Ansible Facts ===
No Ansible facts directory

=== Ansible Logs ===


=== SSH Authorized Keys ===


=== Ansible User ===
No ansible user</msg>
<var>${ansible_status}</var>
<doc>🤖 Check connectivity and access to Ansible control node</doc>
<status status="PASS" start="2025-10-05T15:44:15.320079" elapsed="0.232846"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.553976" level="INFO">🤖 Ansible Access Status: === Ansible Facts ===
No Ansible facts directory

=== Ansible Logs ===


=== SSH Authorized Keys ===


=== Ansible User ===
No ansible user</msg>
<arg>🤖 Ansible Access Status: ${ansible_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.553272" elapsed="0.000972"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.555046" level="INFO">✅ Ansible control node access validated</msg>
<arg>✅ Ansible control node access validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.554650" elapsed="0.000632"/>
</kw>
<kw name="Log Test End" owner="patch_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.556695" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.556468" elapsed="0.000476"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.557518" level="INFO">🏁 Completed Test: Normal - Validate Ansible Control Node Access | Status: PASS</msg>
<arg>🏁 Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.557177" elapsed="0.000558"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.558418" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.558162" elapsed="0.000459"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:44:15.555851" elapsed="0.003124"/>
</kw>
<doc>🤖 Verify connectivity and access to Ansible control node</doc>
<tag>ansible</tag>
<tag>connectivity</tag>
<tag>control_node</tag>
<tag>normal</tag>
<status status="PASS" start="2025-10-05T15:44:15.317907" elapsed="0.241266"/>
</test>
<test id="s1-t13" name="Normal - Check Patch Management Schedule" line="184">
<kw name="Log Test Start" owner="patch_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.562159" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.561659" elapsed="0.000679"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.562910" level="INFO">🏁 Starting Test: Normal - Check Patch Management Schedule</msg>
<arg>🏁 Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.562573" elapsed="0.000507"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.563517" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.563304" elapsed="0.000368"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:44:15.560978" elapsed="0.002806"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.564251" level="INFO">🔍 Checking patch management schedule...</msg>
<arg>🔍 Checking patch management schedule...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.564055" elapsed="0.000354"/>
</kw>
<kw name="Check Patch Management Schedule" owner="patch_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.565360" level="INFO">📅 Checking patch management schedule...</msg>
<arg>📅 Checking patch management schedule...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.565109" elapsed="0.000462"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:15.567472" level="INFO">Executing command 'crontab -l 2&gt;&amp;1 || echo "No user crontab"'.</msg>
<msg time="2025-10-05T15:44:15.615595" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:15.615876" level="INFO">${output} = no crontab for sac
No user crontab</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:15.566858" elapsed="0.049056"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:15.616023" elapsed="0.000115"/>
</return>
<msg time="2025-10-05T15:44:15.616388" level="INFO">${cron_jobs} = no crontab for sac
No user crontab</msg>
<var>${cron_jobs}</var>
<arg>crontab -l 2&gt;&amp;1 || echo "No user crontab"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:15.566068" elapsed="0.050356"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:15.617350" level="INFO">Executing command 'ls -la /etc/cron.d/ 2&gt;/dev/null || echo "No /etc/cron.d/"'.</msg>
<msg time="2025-10-05T15:44:15.673994" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:15.674364" level="INFO">${output} = total 16
drwxr-xr-x  2 root root 4096 Aug  5 11:56 .
drwxr-xr-x 91 root root 4096 Oct  5 15:44 ..
-rw-r--r--  1 root root  102 Mar 30  2024 .placeholder
-rw-r--r--  1 root root  201 Apr  8  2024 e2scr...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:15.617168" elapsed="0.057243"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:15.674908" elapsed="0.000136"/>
</return>
<msg time="2025-10-05T15:44:15.675433" level="INFO">${system_cron} = total 16
drwxr-xr-x  2 root root 4096 Aug  5 11:56 .
drwxr-xr-x 91 root root 4096 Oct  5 15:44 ..
-rw-r--r--  1 root root  102 Mar 30  2024 .placeholder
-rw-r--r--  1 root root  201 Apr  8  2024 e2scr...</msg>
<var>${system_cron}</var>
<arg>ls -la /etc/cron.d/ 2&gt;/dev/null || echo "No /etc/cron.d/"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:15.616715" elapsed="0.058775"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:15.677994" level="INFO">Executing command 'cat /etc/yum/yum-cron.conf 2&gt;/dev/null || cat /etc/dnf/automatic.conf 2&gt;/dev/null || echo "No automatic update config"'.</msg>
<msg time="2025-10-05T15:44:15.734348" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:15.734763" level="INFO">${output} = No automatic update config</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:15.676544" elapsed="0.058283"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:15.734990" elapsed="0.000158"/>
</return>
<msg time="2025-10-05T15:44:15.735750" level="INFO">${yum_cron} = No automatic update config</msg>
<var>${yum_cron}</var>
<arg>cat /etc/yum/yum-cron.conf 2&gt;/dev/null || cat /etc/dnf/automatic.conf 2&gt;/dev/null || echo "No automatic update config"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:15.675928" elapsed="0.059880"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:15.737047" level="INFO">Executing command 'systemctl list-timers 2&gt;&amp;1 | grep -E "yum|dnf|update" || echo "No update timers"'.</msg>
<msg time="2025-10-05T15:44:15.803540" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:15.803905" level="INFO">${output} = No update timers</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:15.736766" elapsed="0.067184"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:15.804151" elapsed="0.000079"/>
</return>
<msg time="2025-10-05T15:44:15.804459" level="INFO">${timer_units} = No update timers</msg>
<var>${timer_units}</var>
<arg>systemctl list-timers 2&gt;&amp;1 | grep -E "yum|dnf|update" || echo "No update timers"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:15.736220" elapsed="0.068275"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.805229" level="INFO">${schedule_status} = === User Cron Jobs ===
no crontab for sac
No user crontab

=== System Cron ===
total 16
drwxr-xr-x  2 root root 4096 Aug  5 11:56 .
drwxr-xr-x 91 root root 4096 Oct  5 15:44 ..
-rw-r--r--  1 root root...</msg>
<var>${schedule_status}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== User Cron Jobs ===</arg>
<arg>${cron_jobs}</arg>
<arg>=== System Cron ===</arg>
<arg>${system_cron}</arg>
<arg>=== Automatic Update Config ===</arg>
<arg>${yum_cron}</arg>
<arg>=== Update Timers ===</arg>
<arg>${timer_units}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:15.804842" elapsed="0.000418"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.805638" level="INFO">📅 Patch management schedule collected</msg>
<arg>📅 Patch management schedule collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.805459" elapsed="0.000368"/>
</kw>
<return>
<value>${schedule_status}</value>
<status status="PASS" start="2025-10-05T15:44:15.805888" elapsed="0.000044"/>
</return>
<msg time="2025-10-05T15:44:15.806095" level="INFO">${schedule_status} = === User Cron Jobs ===
no crontab for sac
No user crontab

=== System Cron ===
total 16
drwxr-xr-x  2 root root 4096 Aug  5 11:56 .
drwxr-xr-x 91 root root 4096 Oct  5 15:44 ..
-rw-r--r--  1 root root...</msg>
<var>${schedule_status}</var>
<doc>📅 Check patch management schedule and maintenance windows</doc>
<status status="PASS" start="2025-10-05T15:44:15.564738" elapsed="0.241381"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.806422" level="INFO">📅 Patch Schedule: === User Cron Jobs ===
no crontab for sac
No user crontab

=== System Cron ===
total 16
drwxr-xr-x  2 root root 4096 Aug  5 11:56 .
drwxr-xr-x 91 root root 4096 Oct  5 15:44 ..
-rw-r--r--  1 root root  102 Mar 30  2024 .placeholder
-rw-r--r--  1 root root  201 Apr  8  2024 e2scrub_all

=== Automatic Update Config ===
No automatic update config

=== Update Timers ===
No update timers</msg>
<arg>📅 Patch Schedule: ${schedule_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.806242" elapsed="0.000296"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.806768" level="INFO">✅ Patch management schedule checked</msg>
<arg>✅ Patch management schedule checked</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.806655" elapsed="0.000208"/>
</kw>
<kw name="Log Test End" owner="patch_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.807586" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.807473" elapsed="0.000203"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.807943" level="INFO">🏁 Completed Test: Normal - Check Patch Management Schedule | Status: PASS</msg>
<arg>🏁 Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.807791" elapsed="0.000244"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.808261" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.808149" elapsed="0.000210"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:44:15.807121" elapsed="0.001315"/>
</kw>
<doc>📅 Verify patch management schedule and maintenance windows</doc>
<tag>maintenance</tag>
<tag>normal</tag>
<tag>patches</tag>
<tag>schedule</tag>
<status status="PASS" start="2025-10-05T15:44:15.559751" elapsed="0.248743"/>
</test>
<test id="s1-t14" name="Normal - Validate Security Updates Status" line="196">
<kw name="Log Test Start" owner="patch_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.810339" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.810088" elapsed="0.000386"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.810855" level="INFO">🏁 Starting Test: Normal - Validate Security Updates Status</msg>
<arg>🏁 Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.810647" elapsed="0.000329"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.811271" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.811116" elapsed="0.000267"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:44:15.809602" elapsed="0.001918"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.812704" level="INFO">🔍 Validating security updates status...</msg>
<arg>🔍 Validating security updates status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.812507" elapsed="0.000331"/>
</kw>
<kw name="Check Security Updates Status" owner="patch_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.813427" level="INFO">🔒 Checking security updates status...</msg>
<arg>🔒 Checking security updates status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.813295" elapsed="0.000283"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:15.814432" level="INFO">Executing command 'yum updateinfo list security 2&gt;&amp;1 || dnf updateinfo list security 2&gt;&amp;1 || echo "Security list not available"'.</msg>
<msg time="2025-10-05T15:44:15.856932" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:15.857230" level="INFO">${output} = bash: line 1: yum: command not found
bash: line 1: dnf: command not found
Security list not available</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:15.814313" elapsed="0.042955"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:15.857367" elapsed="0.000099"/>
</return>
<msg time="2025-10-05T15:44:15.857733" level="INFO">${security_list} = bash: line 1: yum: command not found
bash: line 1: dnf: command not found
Security list not available</msg>
<var>${security_list}</var>
<arg>yum updateinfo list security 2&gt;&amp;1 || dnf updateinfo list security 2&gt;&amp;1 || echo "Security list not available"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:15.813943" elapsed="0.043869"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:15.858797" level="INFO">Executing command 'yum updateinfo list crit 2&gt;&amp;1 || dnf updateinfo list crit 2&gt;&amp;1 || echo "Critical list not available"'.</msg>
<msg time="2025-10-05T15:44:15.906057" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:15.906374" level="INFO">${output} = bash: line 1: yum: command not found
bash: line 1: dnf: command not found
Critical list not available</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:15.858606" elapsed="0.047807"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:15.906584" elapsed="0.000058"/>
</return>
<msg time="2025-10-05T15:44:15.906805" level="INFO">${critical_list} = bash: line 1: yum: command not found
bash: line 1: dnf: command not found
Critical list not available</msg>
<var>${critical_list}</var>
<arg>yum updateinfo list crit 2&gt;&amp;1 || dnf updateinfo list crit 2&gt;&amp;1 || echo "Critical list not available"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:15.858164" elapsed="0.048667"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:15.907555" level="INFO">Executing command 'yum updateinfo list cves 2&gt;&amp;1 || dnf updateinfo list cves 2&gt;&amp;1 || echo "CVE list not available"'.</msg>
<msg time="2025-10-05T15:44:15.955296" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:15.955537" level="INFO">${output} = bash: line 1: yum: command not found
bash: line 1: dnf: command not found
CVE list not available</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:15.907400" elapsed="0.048164"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:15.955650" elapsed="0.000054"/>
</return>
<msg time="2025-10-05T15:44:15.955861" level="INFO">${cve_list} = bash: line 1: yum: command not found
bash: line 1: dnf: command not found
CVE list not available</msg>
<var>${cve_list}</var>
<arg>yum updateinfo list cves 2&gt;&amp;1 || dnf updateinfo list cves 2&gt;&amp;1 || echo "CVE list not available"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:15.907067" elapsed="0.048829"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:15.956741" level="INFO">Executing command 'yum updateinfo info security 2&gt;&amp;1 | head -50 || dnf updateinfo info security 2&gt;&amp;1 | head -50 || echo "Security info not available"'.</msg>
<msg time="2025-10-05T15:44:16.007277" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:16.007563" level="INFO">${output} = bash: line 1: yum: command not found</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:15.956606" elapsed="0.050989"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:16.007687" elapsed="0.000058"/>
</return>
<msg time="2025-10-05T15:44:16.007915" level="INFO">${security_info} = bash: line 1: yum: command not found</msg>
<var>${security_info}</var>
<arg>yum updateinfo info security 2&gt;&amp;1 | head -50 || dnf updateinfo info security 2&gt;&amp;1 | head -50 || echo "Security info not available"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:15.956198" elapsed="0.051745"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.008629" level="INFO">${security_status} = === Security Updates List ===
bash: line 1: yum: command not found
bash: line 1: dnf: command not found
Security list not available

=== Critical Updates List ===
bash: line 1: yum: command not found
...</msg>
<var>${security_status}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Security Updates List ===</arg>
<arg>${security_list}</arg>
<arg>=== Critical Updates List ===</arg>
<arg>${critical_list}</arg>
<arg>=== CVE List ===</arg>
<arg>${cve_list}</arg>
<arg>=== Security Update Details ===</arg>
<arg>${security_info}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:16.008135" elapsed="0.000536"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.009053" level="INFO">🔒 Security updates status collected</msg>
<arg>🔒 Security updates status collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:16.008873" elapsed="0.000322"/>
</kw>
<return>
<value>${security_status}</value>
<status status="PASS" start="2025-10-05T15:44:16.009263" elapsed="0.000045"/>
</return>
<msg time="2025-10-05T15:44:16.009560" level="INFO">${security_status} = === Security Updates List ===
bash: line 1: yum: command not found
bash: line 1: dnf: command not found
Security list not available

=== Critical Updates List ===
bash: line 1: yum: command not found
...</msg>
<var>${security_status}</var>
<doc>🔒 Check security patches and critical updates status</doc>
<status status="PASS" start="2025-10-05T15:44:15.813059" elapsed="0.196543"/>
</kw>
<kw name="Save Security Updates to File" owner="patch_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:44:16.010432" level="INFO">${timestamp} = 20251005_154416</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:44:16.010214" elapsed="0.001317"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.011969" level="INFO">${security_file} = results/test18_patch_management/data/security_updates_20251005_154416.txt</msg>
<var>${security_file}</var>
<arg>${DATA_DIR}/security_updates_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:44:16.011718" elapsed="0.000284"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.012498" level="INFO">${report} = =========================================
=== Security Updates Status ===
=========================================
Timestamp: 20251005_154416
Target Server: alhxvdvitap01 (172.30.16.186)

=== Securit...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== Security Updates Status ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>${security_status}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:16.012126" elapsed="0.000407"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:44:16.018659" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test18_patch_management/data/security_updates_20251005_154416.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test18_patch_management/data/security_updates_20251005_154416.txt&lt;/a&gt;'.</msg>
<arg>${security_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:44:16.012676" elapsed="0.006105"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.019147" level="INFO">📄 Security updates saved to: results/test18_patch_management/data/security_updates_20251005_154416.txt</msg>
<arg>📄 Security updates saved to: ${security_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:16.018940" elapsed="0.000322"/>
</kw>
<return>
<value>${security_file}</value>
<status status="PASS" start="2025-10-05T15:44:16.019339" elapsed="0.000050"/>
</return>
<msg time="2025-10-05T15:44:16.019646" level="INFO">${security_file} = results/test18_patch_management/data/security_updates_20251005_154416.txt</msg>
<var>${security_file}</var>
<arg>${security_status}</arg>
<doc>💾 Save security updates status to file</doc>
<status status="PASS" start="2025-10-05T15:44:16.009907" elapsed="0.009769"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.019966" level="INFO">📄 Security updates saved to: results/test18_patch_management/data/security_updates_20251005_154416.txt</msg>
<arg>📄 Security updates saved to: ${security_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:16.019802" elapsed="0.000351"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.020478" level="INFO">✅ Security updates status validated</msg>
<arg>✅ Security updates status validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:16.020313" elapsed="0.000285"/>
</kw>
<kw name="Log Test End" owner="patch_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.021662" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:16.021445" elapsed="0.000366"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.022240" level="INFO">🏁 Completed Test: Normal - Validate Security Updates Status | Status: PASS</msg>
<arg>🏁 Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:16.021990" elapsed="0.000371"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.022784" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:16.022522" elapsed="0.000393"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:44:16.020951" elapsed="0.002066"/>
</kw>
<doc>🔒 Check status of security patches and critical updates</doc>
<tag>critical</tag>
<tag>normal</tag>
<tag>security</tag>
<tag>updates</tag>
<status status="PASS" start="2025-10-05T15:44:15.808803" elapsed="0.214268"/>
</test>
<test id="s1-t15" name="Normal - Comprehensive Patch Management Summary" line="211">
<kw name="Log Test Start" owner="patch_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.025061" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:16.024727" elapsed="0.000481"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.025575" level="INFO">🏁 Starting Test: Normal - Comprehensive Patch Management Summary</msg>
<arg>🏁 Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:16.025347" elapsed="0.000325"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.026170" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:16.026053" elapsed="0.000215"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:44:16.024018" elapsed="0.002321"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.026547" level="INFO">🔍 Generating comprehensive patch management summary...</msg>
<arg>🔍 Generating comprehensive patch management summary...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:16.026436" elapsed="0.000196"/>
</kw>
<kw name="Validate All Patch Management Settings" owner="patch_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.027125" level="INFO">📊 Validating all patch management and RSA settings...</msg>
<arg>📊 Validating all patch management and RSA settings...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:16.026973" elapsed="0.000248"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.027418" level="INFO">✅ All patch management and RSA data collected and validated</msg>
<arg>✅ All patch management and RSA data collected and validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:16.027328" elapsed="0.000415"/>
</kw>
<doc>📊 Validate all patch management and RSA settings</doc>
<status status="PASS" start="2025-10-05T15:44:16.026779" elapsed="0.001491"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.028502" level="INFO">📊 Comprehensive patch management summary:</msg>
<arg>📊 Comprehensive patch management summary:</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:16.028383" elapsed="0.000214"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.028847" level="INFO">📊 - RSA Agent: Validated ✅</msg>
<arg>📊 - RSA Agent: Validated ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:16.028739" elapsed="0.000201"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.029195" level="INFO">📊 - RSA Configuration: Checked ✅</msg>
<arg>📊 - RSA Configuration: Checked ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:16.029057" elapsed="0.000237"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.029558" level="INFO">📊 - RSA Authentication: Validated ✅</msg>
<arg>📊 - RSA Authentication: Validated ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:16.029454" elapsed="0.000187"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.029924" level="INFO">📊 - RSA Connectivity: Tested ✅</msg>
<arg>📊 - RSA Connectivity: Tested ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:16.029798" elapsed="0.000214"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.030238" level="INFO">📊 - Patch Registration: Validated ✅</msg>
<arg>📊 - Patch Registration: Validated ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:16.030130" elapsed="0.000198"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.030576" level="INFO">📊 - Subscription Status: Checked ✅</msg>
<arg>📊 - Subscription Status: Checked ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:16.030480" elapsed="0.000179"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.030857" level="INFO">📊 - Available Patches: Documented ✅</msg>
<arg>📊 - Available Patches: Documented ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:16.030769" elapsed="0.000169"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.031425" level="INFO">✅ Comprehensive patch management validation: COMPLETED</msg>
<arg>✅ Comprehensive patch management validation: COMPLETED</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:16.031121" elapsed="0.000408"/>
</kw>
<kw name="Log Test End" owner="patch_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.032216" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:16.032116" elapsed="0.000194"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.032623" level="INFO">🏁 Completed Test: Normal - Comprehensive Patch Management Summary | Status: PASS</msg>
<arg>🏁 Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:16.032424" elapsed="0.000285"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.032958" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:16.032847" elapsed="0.000198"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:44:16.031812" elapsed="0.001304"/>
</kw>
<doc>📊 Generate comprehensive summary of patch management and RSA configuration</doc>
<tag>compliance</tag>
<tag>comprehensive</tag>
<tag>normal</tag>
<tag>summary</tag>
<status status="PASS" start="2025-10-05T15:44:16.023389" elapsed="0.009763"/>
</test>
<kw name="Close All SSH Connections" owner="patch_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.034136" level="INFO">🔌 Closing SSH connections...</msg>
<arg>🔌 Closing SSH connections...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:16.034028" elapsed="0.000203"/>
</kw>
<kw name="Close All Connections" owner="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" start="2025-10-05T15:44:16.034373" elapsed="0.000304"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.034911" level="INFO">✅ SSH connections closed</msg>
<arg>✅ SSH connections closed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:16.034778" elapsed="0.000243"/>
</kw>
<doc>🔌 Close all SSH connections</doc>
<status status="PASS" start="2025-10-05T15:44:16.033845" elapsed="0.001256"/>
</kw>
<doc>🔐 Patch Management &amp; RSA Authentication Test Suite - Test-18
🔍 Process: Find hostname in EDS → SSH to server → Check RSA configuration → Validate patch management registration
✅ Validates: RSA agent installation, RSA configuration files, RSA authentication settings, RSA server connectivity
📊 Documents: Patch management server registration (Ansible/Satellite), RSA agent status, authentication flow readiness
🔐 Focus: Two-factor authentication (RSA) setup validation for patch management access</doc>
<status status="FAIL" start="2025-10-05T15:43:58.398046" elapsed="17.637086"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">2fa</stat>
<stat pass="1" fail="0" skip="0">agent</stat>
<stat pass="2" fail="0" skip="0">ansible</stat>
<stat pass="1" fail="0" skip="0">authentication</stat>
<stat pass="1" fail="0" skip="0">authentication_flow</stat>
<stat pass="1" fail="0" skip="0">compliance</stat>
<stat pass="1" fail="0" skip="0">comprehensive</stat>
<stat pass="2" fail="0" skip="0">configuration</stat>
<stat pass="1" fail="0" skip="0">connection</stat>
<stat pass="2" fail="0" skip="0">connectivity</stat>
<stat pass="1" fail="0" skip="0">control_node</stat>
<stat pass="8" fail="0" skip="0">critical</stat>
<stat pass="1" fail="0" skip="0">files</stat>
<stat pass="1" fail="0" skip="0">infrastructure</stat>
<stat pass="1" fail="0" skip="0">installation</stat>
<stat pass="1" fail="0" skip="0">maintenance</stat>
<stat pass="1" fail="0" skip="0">network</stat>
<stat pass="7" fail="1" skip="0">normal</stat>
<stat pass="1" fail="1" skip="0">patches</stat>
<stat pass="1" fail="0" skip="0">patch_management</stat>
<stat pass="1" fail="0" skip="0">registration</stat>
<stat pass="1" fail="0" skip="0">rhel</stat>
<stat pass="7" fail="0" skip="0">rsa</stat>
<stat pass="2" fail="0" skip="0">satellite</stat>
<stat pass="1" fail="0" skip="0">schedule</stat>
<stat pass="1" fail="0" skip="0">security</stat>
<stat pass="1" fail="0" skip="0">service</stat>
<stat pass="1" fail="0" skip="0">settings</stat>
<stat pass="1" fail="0" skip="0">ssh</stat>
<stat pass="1" fail="0" skip="0">status</stat>
<stat pass="1" fail="0" skip="0">subscription</stat>
<stat pass="1" fail="0" skip="0">summary</stat>
<stat pass="1" fail="0" skip="0">token</stat>
<stat pass="1" fail="1" skip="0">updates</stat>
<stat pass="0" fail="1" skip="0">yum</stat>
</tag>
<suite>
<stat name="Patch Management" id="s1" pass="14" fail="1" skip="0">Patch Management</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
