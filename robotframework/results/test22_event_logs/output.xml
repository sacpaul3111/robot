<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.3.2 (Python 3.12.3 on linux)" generated="2025-10-05T15:44:58.550044" rpa="false" schemaversion="5">
<suite id="s1" name="Event Logs" source="/mnt/c/Users/sacpa/Projects/robot/robotframework/tests/test22_event_logs/event_logs.robot">
<kw name="Initialize Event Logs Test Environment" owner="logs_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:09.836192" level="INFO">🚀 Initializing Test-22: Event Logs &amp; Critical Error Validation Environment...</msg>
<arg>🚀 Initializing Test-22: Event Logs &amp; Critical Error Validation Environment...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:09.835945" elapsed="0.000398"/>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2025-10-05T15:45:09.837592" level="INFO" html="true">Directory '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data&lt;/a&gt;' already exists.</msg>
<arg>${DATA_DIR}</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2025-10-05T15:45:09.836520" elapsed="0.001203"/>
</kw>
<kw name="Lookup Server Config" owner="EDSLookup">
<msg time="2025-10-05T15:45:09.869118" level="INFO">Found matching row for hostname 'alhxvdvitap01'</msg>
<msg time="2025-10-05T15:45:09.869334" level="INFO">Extracted IP from EDS: 172.30.16.186</msg>
<msg time="2025-10-05T15:45:09.869373" level="INFO">Extracted subnet from EDS: 10.26.216.0/24</msg>
<msg time="2025-10-05T15:45:09.869402" level="INFO">Extracted mask from EDS: 255.255.255.0</msg>
<msg time="2025-10-05T15:45:09.869423" level="INFO">Extracted gateway from EDS: 10.26.216.4</msg>
<msg time="2025-10-05T15:45:09.869445" level="INFO">Extracted CNAME from EDS: alhxvdvitap01</msg>
<msg time="2025-10-05T15:45:09.869465" level="INFO">Extracted domain from EDS: gnscet.com</msg>
<msg time="2025-10-05T15:45:09.869490" level="INFO">Extracted CPU cores from EDS: 8</msg>
<msg time="2025-10-05T15:45:09.869512" level="INFO">Extracted RAM from EDS: 16</msg>
<msg time="2025-10-05T15:45:09.869535" level="INFO">Extracted storage type from EDS: VSAN</msg>
<msg time="2025-10-05T15:45:09.869572" level="INFO">Extracted storage total TB from EDS: 0.465</msg>
<msg time="2025-10-05T15:45:09.869595" level="INFO">Extracted drive/volume group from EDS: rootvg:</msg>
<msg time="2025-10-05T15:45:09.869616" level="INFO">Extracted file system from EDS: /dev/mapper/rootvg-rootlv</msg>
<msg time="2025-10-05T15:45:09.869638" level="INFO">Extracted logical volume/partition from EDS: /</msg>
<msg time="2025-10-05T15:45:09.869660" level="INFO">Extracted storage allocation GB from EDS: 20</msg>
<msg time="2025-10-05T15:45:09.869680" level="INFO">Extracted recommended storage allocation GB from EDS: 20</msg>
<msg time="2025-10-05T15:45:09.869700" level="INFO">Extracted drive purpose from EDS: OS</msg>
<msg time="2025-10-05T15:45:09.869719" level="INFO">Extracted OS type from EDS: RHEL 9.6</msg>
<msg time="2025-10-05T15:45:09.869741" level="INFO">EDS configuration for alhxvdvitap01: {'ip': '172.30.16.186', 'subnet': '10.26.216.0/24', 'mask': '255.255.255.0', 'gateway': '10.26.216.4', 'cname': 'alhxvdvitap01', 'domain': 'gnscet.com', 'cpu_cores': '8', 'ram': '16', 'storage_type': 'VSAN', 'storage_total_tb': '0.465', 'drive_volume_group': 'rootvg:', 'file_system': '/dev/mapper/rootvg-rootlv', 'logical_volume_partition': '/', 'storage_allocation_gb': '20', 'recommended_storage_gb': '20', 'drive_purpose': 'OS', 'os_type': 'RHEL 9.6'}</msg>
<msg time="2025-10-05T15:45:09.869864" level="INFO">${eds_config} = {'ip': '172.30.16.186', 'subnet': '10.26.216.0/24', 'mask': '255.255.255.0', 'gateway': '10.26.216.4', 'cname': 'alhxvdvitap01', 'domain': 'gnscet.com', 'cpu_cores': '8', 'ram': '16', 'storage_type': ...</msg>
<var>${eds_config}</var>
<arg>${TARGET_HOSTNAME}</arg>
<doc>Lookup server configuration from EDS sheet based on hostname</doc>
<status status="PASS" start="2025-10-05T15:45:09.837900" elapsed="0.031989"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:09.871881" level="INFO">${TARGET_IP} = 172.30.16.186</msg>
<arg>${TARGET_IP}</arg>
<arg>${eds_config['ip']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:45:09.870096" elapsed="0.001847"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:09.872333" level="INFO">📋 Target Server: alhxvdvitap01</msg>
<arg>📋 Target Server: ${TARGET_HOSTNAME}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:09.872080" elapsed="0.000382"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:09.872796" level="INFO">📋 Target IP: 172.30.16.186</msg>
<arg>📋 Target IP: ${TARGET_IP}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:09.872608" elapsed="0.000312"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:09.873215" level="INFO">🔗 Connecting to target server: 172.30.16.186...</msg>
<arg>🔗 Connecting to target server: ${TARGET_IP}...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:09.873061" elapsed="0.000294"/>
</kw>
<kw name="Open Connection" owner="SSHLibrary">
<arg>${TARGET_IP}</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" start="2025-10-05T15:45:09.873535" elapsed="0.000222"/>
</kw>
<kw name="Login" owner="SSHLibrary">
<msg time="2025-10-05T15:45:09.874059" level="INFO">Logging into '172.30.16.186:22' as 'sac'.</msg>
<msg time="2025-10-05T15:45:11.175888" level="INFO">Read output: Welcome to Ubuntu 24.04.3 LTS (GNU/Linux 6.6.87.2-microsoft-standard-WSL2 x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/pro

 System information as of Sun Oct  5 15:44:11 CDT 2025

  System load:  0.79                Processes:             40
  Usage of /:   0.7% of 1006.85GB   Users logged in:       1
  Memory usage: 6%                  IPv4 address for eth0: 172.30.16.186
  Swap usage:   0%

 * Strictly confined Kubernetes makes edge and IoT secure. Learn how MicroK8s
   just raised the bar for easy, resilient and secure K8s cluster deployment.

   https://ubuntu.com/engage/secure-kubernetes-at-the-edge
Last login: Sun Oct  5 15:44:41 2025 from 172.30.16.186
[?2004hsac@alhxvdvitap01:~$</msg>
<arg>${SSH_USERNAME}</arg>
<arg>${SSH_PASSWORD}</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<status status="PASS" start="2025-10-05T15:45:09.873863" elapsed="1.302473"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:11.177809" level="INFO">✅ SSH connection established successfully</msg>
<arg>✅ SSH connection established successfully</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:11.176966" elapsed="0.001191"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:11.179169" level="INFO">✅ Test-22 environment initialized</msg>
<arg>✅ Test-22 environment initialized</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:11.178619" elapsed="0.000887"/>
</kw>
<doc>🏗️ Set up test environment for event log validation</doc>
<status status="PASS" start="2025-10-05T15:45:09.835279" elapsed="1.344481"/>
</kw>
<test id="s1-t1" name="Critical - Connect to Target Server" line="20">
<kw name="Log Test Start" owner="logs_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:11.183674" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:11.183153" elapsed="0.000837"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:11.192964" level="INFO">🏁 Starting Test: Critical - Connect to Target Server</msg>
<arg>🏁 Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:11.192389" elapsed="0.000839"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:11.194572" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:11.193568" elapsed="0.001249"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:45:11.181969" elapsed="0.013132"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:11.195743" level="INFO">🔍 Verifying SSH connection to target server...</msg>
<arg>🔍 Verifying SSH connection to target server...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:11.195441" elapsed="0.000556"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:11.196768" level="INFO">📋 Target: alhxvdvitap01 (172.30.16.186)</msg>
<arg>📋 Target: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:11.196301" elapsed="0.000673"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:11.207002" level="INFO">Executing command 'echo "Connection active"'.</msg>
<msg time="2025-10-05T15:45:11.219869" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:11.220223" level="INFO">${output} = Connection active</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:11.206598" elapsed="0.013670"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:11.220447" elapsed="0.000122"/>
</return>
<msg time="2025-10-05T15:45:11.220849" level="INFO">${connection_status} = Connection active</msg>
<var>${connection_status}</var>
<arg>echo "Connection active"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:11.197441" elapsed="0.023446"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${connection_status}</arg>
<arg>Connection active</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-10-05T15:45:11.221173" elapsed="0.000296"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:11.221904" level="INFO">✅ SSH connection verified and active</msg>
<arg>✅ SSH connection verified and active</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:11.221654" elapsed="0.000436"/>
</kw>
<kw name="Log Test End" owner="logs_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:11.223535" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:11.223284" elapsed="0.000435"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:11.224303" level="INFO">🏁 Completed Test: Critical - Connect to Target Server | Status: PASS</msg>
<arg>🏁 Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:11.223940" elapsed="0.000520"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:11.224892" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:11.224660" elapsed="0.000381"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:45:11.222606" elapsed="0.002540"/>
</kw>
<doc>🔗 Establish direct connection to target machine via SSH</doc>
<tag>connection</tag>
<tag>critical</tag>
<tag>infrastructure</tag>
<tag>ssh</tag>
<status status="PASS" start="2025-10-05T15:45:11.180001" elapsed="0.045231"/>
</test>
<test id="s1-t2" name="Critical - Collect System Journal Logs (journalctl)" line="33">
<kw name="Log Test Start" owner="logs_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:11.227654" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:11.227389" elapsed="0.000416"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:11.228253" level="INFO">🏁 Starting Test: Critical - Collect System Journal Logs (journalctl)</msg>
<arg>🏁 Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:11.227997" elapsed="0.000410"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:11.228837" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:11.228620" elapsed="0.000371"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:45:11.226784" elapsed="0.002315"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:11.229560" level="INFO">🔍 Collecting system journal logs...</msg>
<arg>🔍 Collecting system journal logs...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:11.229311" elapsed="0.000375"/>
</kw>
<kw name="Collect Journalctl Logs" owner="logs_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:11.232595" level="INFO">📋 Collecting journalctl logs...</msg>
<arg>📋 Collecting journalctl logs...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:11.230376" elapsed="0.002437"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:11.237832" level="INFO">Executing command 'journalctl --no-pager -n 500 2&gt;&amp;1 || echo "journalctl not available"'.</msg>
<msg time="2025-10-05T15:45:11.582456" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:11.582872" level="INFO">${output} = Oct 05 15:18:05 alhxvdvitap01 systemd-resolved[153]: Clock change detected. Flushing caches.
Oct 05 15:18:24 alhxvdvitap01 wsl-pro-service[173]: INFO Daemon: connecting to Windows Agent
Oct 05 15:18:2...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:11.237573" elapsed="0.345357"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:11.583721" elapsed="0.000093"/>
</return>
<msg time="2025-10-05T15:45:11.584003" level="INFO">${journal_all} = Oct 05 15:18:05 alhxvdvitap01 systemd-resolved[153]: Clock change detected. Flushing caches.
Oct 05 15:18:24 alhxvdvitap01 wsl-pro-service[173]: INFO Daemon: connecting to Windows Agent
Oct 05 15:18:2...</msg>
<var>${journal_all}</var>
<arg>journalctl --no-pager -n ${LOG_LINES_TO_COLLECT} 2&gt;&amp;1 || echo "journalctl not available"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:11.236829" elapsed="0.347201"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:11.584753" level="INFO">Executing command 'journalctl --no-pager -p warning -n 500 2&gt;&amp;1 || echo "Priority filter not available"'.</msg>
<msg time="2025-10-05T15:45:11.903675" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:11.903926" level="INFO">${output} = Sep 28 09:14:09 DESKTOP-933PGUE Exception: 
Sep 28 09:14:09 DESKTOP-933PGUE unknown: Operation canceled @p9io.cpp:258 (AcceptAsync)
Sep 28 09:14:09 DESKTOP-933PGUE unknown: 
Sep 28 09:14:09 DESKTOP-93...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:11.584617" elapsed="0.319354"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:11.904068" elapsed="0.000097"/>
</return>
<msg time="2025-10-05T15:45:11.904388" level="INFO">${journal_priority} = Sep 28 09:14:09 DESKTOP-933PGUE Exception: 
Sep 28 09:14:09 DESKTOP-933PGUE unknown: Operation canceled @p9io.cpp:258 (AcceptAsync)
Sep 28 09:14:09 DESKTOP-933PGUE unknown: 
Sep 28 09:14:09 DESKTOP-93...</msg>
<var>${journal_priority}</var>
<arg>journalctl --no-pager -p ${MIN_LOG_PRIORITY} -n ${LOG_LINES_TO_COLLECT} 2&gt;&amp;1 || echo "Priority filter not available"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:11.584251" elapsed="0.320173"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:11.905699" level="INFO">Executing command 'journalctl --no-pager -b 2&gt;&amp;1 | tail -500 || echo "Boot log not available"'.</msg>
<msg time="2025-10-05T15:45:12.046414" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:12.046662" level="INFO">${output} = Oct 05 15:20:07 alhxvdvitap01 python3[7754]: ansible-find Invoked with paths=['/mnt/c/Users/sacpa/Projects/robot/robotframework/tests/test11_services_validation'] patterns=['*.robot'] file_type=file r...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:11.905503" elapsed="0.141189"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:12.046792" elapsed="0.000123"/>
</return>
<msg time="2025-10-05T15:45:12.047118" level="INFO">${journal_boot} = Oct 05 15:20:07 alhxvdvitap01 python3[7754]: ansible-find Invoked with paths=['/mnt/c/Users/sacpa/Projects/robot/robotframework/tests/test11_services_validation'] patterns=['*.robot'] file_type=file r...</msg>
<var>${journal_boot}</var>
<arg>journalctl --no-pager -b 2&gt;&amp;1 | tail -${LOG_LINES_TO_COLLECT} || echo "Boot log not available"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:11.904706" elapsed="0.142438"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:12.047896" level="INFO">Executing command 'journalctl --no-pager -p err -n 500 2&gt;&amp;1 || echo "Error priority filter not available"'.</msg>
<msg time="2025-10-05T15:45:12.233641" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:12.233918" level="INFO">${output} = Sep 07 15:13:15 DESKTOP-933PGUE unknown: WSL (218) ERROR: CheckConnection: getaddrinfo() failed: -5
Sep 07 18:19:19 DESKTOP-933PGUE unknown: WSL (218) ERROR: CheckConnection: getaddrinfo() failed: -5
...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:12.047727" elapsed="0.186229"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:12.234062" elapsed="0.000065"/>
</return>
<msg time="2025-10-05T15:45:12.234345" level="INFO">${journal_errors} = Sep 07 15:13:15 DESKTOP-933PGUE unknown: WSL (218) ERROR: CheckConnection: getaddrinfo() failed: -5
Sep 07 18:19:19 DESKTOP-933PGUE unknown: WSL (218) ERROR: CheckConnection: getaddrinfo() failed: -5
...</msg>
<var>${journal_errors}</var>
<arg>journalctl --no-pager -p err -n ${LOG_LINES_TO_COLLECT} 2&gt;&amp;1 || echo "Error priority filter not available"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:12.047396" elapsed="0.186988"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.235414" level="INFO">${journal_logs} = === Journal - Recent 500 Entries ===
Oct 05 15:18:05 alhxvdvitap01 systemd-resolved[153]: Clock change detected. Flushing caches.
Oct 05 15:18:24 alhxvdvitap01 wsl-pro-service[173]: INFO Daemon: conne...</msg>
<var>${journal_logs}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Journal - Recent ${LOG_LINES_TO_COLLECT} Entries ===</arg>
<arg>${journal_all}</arg>
<arg>=== Journal - Priority ${MIN_LOG_PRIORITY} and Above ===</arg>
<arg>${journal_priority}</arg>
<arg>=== Journal - Current Boot ===</arg>
<arg>${journal_boot}</arg>
<arg>=== Journal - Error Level Only ===</arg>
<arg>${journal_errors}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:12.234717" elapsed="0.000724"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.235842" level="INFO">${JOURNAL_LOGS} = === Journal - Recent 500 Entries ===
Oct 05 15:18:05 alhxvdvitap01 systemd-resolved[153]: Clock change detected. Flushing caches.
Oct 05 15:18:24 alhxvdvitap01 wsl-pro-service[173]: INFO Daemon: conne...</msg>
<arg>${JOURNAL_LOGS}</arg>
<arg>${journal_logs}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:45:12.235598" elapsed="0.000284"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.236151" level="INFO">✅ Journalctl logs collected</msg>
<arg>✅ Journalctl logs collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.235990" elapsed="0.000278"/>
</kw>
<return>
<value>${journal_logs}</value>
<status status="PASS" start="2025-10-05T15:45:12.236331" elapsed="0.000040"/>
</return>
<msg time="2025-10-05T15:45:12.236485" level="INFO">${journal_logs} = === Journal - Recent 500 Entries ===
Oct 05 15:18:05 alhxvdvitap01 systemd-resolved[153]: Clock change detected. Flushing caches.
Oct 05 15:18:24 alhxvdvitap01 wsl-pro-service[173]: INFO Daemon: conne...</msg>
<var>${journal_logs}</var>
<doc>📋 Collect system journal logs using journalctl</doc>
<status status="PASS" start="2025-10-05T15:45:11.230001" elapsed="1.006504"/>
</kw>
<kw name="Save Journal Logs to File" owner="logs_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:45:12.237212" level="INFO">${timestamp} = 20251005_154512</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:45:12.236990" elapsed="0.000247"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.238140" level="INFO">${journal_file} = results/test22_event_logs/data/journalctl_20251005_154512.txt</msg>
<var>${journal_file}</var>
<arg>${DATA_DIR}/journalctl_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:45:12.237940" elapsed="0.000244"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.238988" level="INFO">${report} = =========================================
=== System Journal Logs (journalctl) ===
=========================================
Timestamp: 20251005_154512
Target Server: alhxvdvitap01 (172.30.16.186)
Lin...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== System Journal Logs (journalctl) ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>Lines Collected: ${LOG_LINES_TO_COLLECT}</arg>
<arg>Minimum Priority: ${MIN_LOG_PRIORITY}</arg>
<arg>${journal_logs}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:12.238291" elapsed="0.000736"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:45:12.247106" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/journalctl_20251005_154512.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/journalctl_20251005_154512.txt&lt;/a&gt;'.</msg>
<arg>${journal_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:45:12.239187" elapsed="0.008036"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.247617" level="INFO">📄 Journal logs saved to: results/test22_event_logs/data/journalctl_20251005_154512.txt</msg>
<arg>📄 Journal logs saved to: ${journal_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.247409" elapsed="0.000357"/>
</kw>
<return>
<value>${journal_file}</value>
<status status="PASS" start="2025-10-05T15:45:12.247838" elapsed="0.000056"/>
</return>
<msg time="2025-10-05T15:45:12.248047" level="INFO">${journal_file} = results/test22_event_logs/data/journalctl_20251005_154512.txt</msg>
<var>${journal_file}</var>
<arg>${journal_logs}</arg>
<doc>💾 Save journal logs to file</doc>
<status status="PASS" start="2025-10-05T15:45:12.236683" elapsed="0.011387"/>
</kw>
<kw name="File Should Exist" owner="SSHLibrary">
<msg time="2025-10-05T15:45:12.248184" level="WARN">Keyword 'File Should Exist' found both from a custom library 'SSHLibrary' and a standard library 'OperatingSystem'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'SSHLibrary.File Should Exist' or 'OperatingSystem.File Should Exist'.</msg>
<msg time="2025-10-05T15:45:12.275526" level="INFO">[chan 6] Opened sftp connection (server version 3)</msg>
<msg time="2025-10-05T15:45:12.276896" level="FAIL">File 'results/test22_event_logs/data/journalctl_20251005_154512.txt' does not exist.</msg>
<arg>${journal_file}</arg>
<doc>Fails if the given ``path`` does NOT point to an existing file.</doc>
<status status="FAIL" start="2025-10-05T15:45:12.248223" elapsed="0.037217">File 'results/test22_event_logs/data/journalctl_20251005_154512.txt' does not exist.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📄 Journal logs saved to: ${journal_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:45:12.285666" elapsed="0.000027"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>✅ System journal logs collected successfully</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:45:12.285787" elapsed="0.000015"/>
</kw>
<kw name="Log Test End" owner="logs_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.286844" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.286642" elapsed="0.000347"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.287361" level="INFO">🏁 Completed Test: Critical - Collect System Journal Logs (journalctl) | Status: FAIL</msg>
<arg>🏁 Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.287130" elapsed="0.000331"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.287717" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.287588" elapsed="0.000219"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:45:12.286135" elapsed="0.001746"/>
</kw>
<doc>📋 Collect system journal logs using journalctl</doc>
<tag>critical</tag>
<tag>journalctl</tag>
<tag>logs</tag>
<tag>systemd</tag>
<status status="FAIL" start="2025-10-05T15:45:11.225735" elapsed="1.062193">File 'results/test22_event_logs/data/journalctl_20251005_154512.txt' does not exist.</status>
</test>
<test id="s1-t3" name="Critical - Collect Boot Messages (dmesg)" line="51">
<kw name="Log Test Start" owner="logs_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.289218" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.289061" elapsed="0.000250"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.289623" level="INFO">🏁 Starting Test: Critical - Collect Boot Messages (dmesg)</msg>
<arg>🏁 Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.289455" elapsed="0.000257"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.289930" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.289823" elapsed="0.000191"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:45:12.288743" elapsed="0.001378"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.290397" level="INFO">🔍 Collecting kernel boot messages...</msg>
<arg>🔍 Collecting kernel boot messages...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.290282" elapsed="0.000311"/>
</kw>
<kw name="Collect Dmesg Output" owner="logs_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.291526" level="INFO">🚀 Collecting dmesg output...</msg>
<arg>🚀 Collecting dmesg output...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.291413" elapsed="0.000247"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:12.292583" level="INFO">Executing command 'dmesg 2&gt;&amp;1 || echo "dmesg not available"'.</msg>
<msg time="2025-10-05T15:45:12.324753" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:12.325055" level="INFO">${output} = [    0.000000] Linux version 6.6.87.2-microsoft-standard-WSL2 (root@439a258ad544) (gcc (GCC) 11.2.0, GNU ld (GNU Binutils) 2.37) #1 SMP PREEMPT_DYNAMIC Thu Jun  5 18:30:46 UTC 2025
[    0.000000] Comm...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:12.292478" elapsed="0.032611"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:12.325184" elapsed="0.000055"/>
</return>
<msg time="2025-10-05T15:45:12.325411" level="INFO">${dmesg_all} = [    0.000000] Linux version 6.6.87.2-microsoft-standard-WSL2 (root@439a258ad544) (gcc (GCC) 11.2.0, GNU ld (GNU Binutils) 2.37) #1 SMP PREEMPT_DYNAMIC Thu Jun  5 18:30:46 UTC 2025
[    0.000000] Comm...</msg>
<var>${dmesg_all}</var>
<arg>dmesg 2&gt;&amp;1 || echo "dmesg not available"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:12.292256" elapsed="0.033185"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:12.326248" level="INFO">Executing command 'dmesg --level=err,crit,alert,emerg 2&gt;&amp;1 || dmesg | grep -i "error|fail|critical" || echo "dmesg error filter not available"'.</msg>
<msg time="2025-10-05T15:45:12.377469" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:12.377886" level="INFO">${output} = [    0.367906] PCI: Fatal: No config space access function found
[    3.296026] misc dxg: dxgk: dxgkio_is_feature_enabled: Ioctl failed: -22
[    3.300988] misc dxg: dxgk: dxgkio_query_adapter_info: I...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:12.326050" elapsed="0.051895"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:12.378072" elapsed="0.000078"/>
</return>
<msg time="2025-10-05T15:45:12.378502" level="INFO">${dmesg_errors} = [    0.367906] PCI: Fatal: No config space access function found
[    3.296026] misc dxg: dxgk: dxgkio_is_feature_enabled: Ioctl failed: -22
[    3.300988] misc dxg: dxgk: dxgkio_query_adapter_info: I...</msg>
<var>${dmesg_errors}</var>
<arg>dmesg --level=err,crit,alert,emerg 2&gt;&amp;1 || dmesg | grep -i "error\|fail\|critical" || echo "dmesg error filter not available"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:12.325686" elapsed="0.052917"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:12.380040" level="INFO">Executing command 'dmesg --level=warn 2&gt;&amp;1 || dmesg | grep -i "warn" || echo "dmesg warning filter not available"'.</msg>
<msg time="2025-10-05T15:45:12.443348" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:12.443685" level="INFO">${output} = [    0.301784] Hyper-V: Disabling IBT because of Hyper-V bug
[    0.411062] PCI: System does not support PCI
[    0.614724] device-mapper: core: CONFIG_IMA_DISABLE_HTABLE is disabled. Duplicate IMA me...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:12.379805" elapsed="0.063934"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:12.443900" elapsed="0.000086"/>
</return>
<msg time="2025-10-05T15:45:12.444394" level="INFO">${dmesg_warnings} = [    0.301784] Hyper-V: Disabling IBT because of Hyper-V bug
[    0.411062] PCI: System does not support PCI
[    0.614724] device-mapper: core: CONFIG_IMA_DISABLE_HTABLE is disabled. Duplicate IMA me...</msg>
<var>${dmesg_warnings}</var>
<arg>dmesg --level=warn 2&gt;&amp;1 || dmesg | grep -i "warn" || echo "dmesg warning filter not available"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:12.379205" elapsed="0.065242"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:12.446224" level="INFO">Executing command 'dmesg -T 2&gt;&amp;1 | tail -500 || echo "dmesg timestamp format not available"'.</msg>
<msg time="2025-10-05T15:45:12.499662" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:12.499976" level="INFO">${output} = [Sun Oct  5 13:05:26 2025] Linux version 6.6.87.2-microsoft-standard-WSL2 (root@439a258ad544) (gcc (GCC) 11.2.0, GNU ld (GNU Binutils) 2.37) #1 SMP PREEMPT_DYNAMIC Thu Jun  5 18:30:46 UTC 2025
[Sun Oc...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:12.445809" elapsed="0.054215"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:12.500149" elapsed="0.000075"/>
</return>
<msg time="2025-10-05T15:45:12.500494" level="INFO">${dmesg_human} = [Sun Oct  5 13:05:26 2025] Linux version 6.6.87.2-microsoft-standard-WSL2 (root@439a258ad544) (gcc (GCC) 11.2.0, GNU ld (GNU Binutils) 2.37) #1 SMP PREEMPT_DYNAMIC Thu Jun  5 18:30:46 UTC 2025
[Sun Oc...</msg>
<var>${dmesg_human}</var>
<arg>dmesg -T 2&gt;&amp;1 | tail -${LOG_LINES_TO_COLLECT} || echo "dmesg timestamp format not available"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:12.444826" elapsed="0.055734"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.501509" level="INFO">${dmesg_output} = === dmesg - All Messages ===
[    0.000000] Linux version 6.6.87.2-microsoft-standard-WSL2 (root@439a258ad544) (gcc (GCC) 11.2.0, GNU ld (GNU Binutils) 2.37) #1 SMP PREEMPT_DYNAMIC Thu Jun  5 18:30:46...</msg>
<var>${dmesg_output}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== dmesg - All Messages ===</arg>
<arg>${dmesg_all}</arg>
<arg>=== dmesg - Errors and Critical ===</arg>
<arg>${dmesg_errors}</arg>
<arg>=== dmesg - Warnings ===</arg>
<arg>${dmesg_warnings}</arg>
<arg>=== dmesg - Recent (Human Readable) ===</arg>
<arg>${dmesg_human}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:12.500841" elapsed="0.000741"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.502205" level="INFO">${DMESG_OUTPUT} = === dmesg - All Messages ===
[    0.000000] Linux version 6.6.87.2-microsoft-standard-WSL2 (root@439a258ad544) (gcc (GCC) 11.2.0, GNU ld (GNU Binutils) 2.37) #1 SMP PREEMPT_DYNAMIC Thu Jun  5 18:30:46...</msg>
<arg>${DMESG_OUTPUT}</arg>
<arg>${dmesg_output}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:45:12.501884" elapsed="0.000389"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.503063" level="INFO">✅ dmesg output collected</msg>
<arg>✅ dmesg output collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.502554" elapsed="0.000745"/>
</kw>
<return>
<value>${dmesg_output}</value>
<status status="PASS" start="2025-10-05T15:45:12.503463" elapsed="0.000080"/>
</return>
<msg time="2025-10-05T15:45:12.503833" level="INFO">${dmesg_output} = === dmesg - All Messages ===
[    0.000000] Linux version 6.6.87.2-microsoft-standard-WSL2 (root@439a258ad544) (gcc (GCC) 11.2.0, GNU ld (GNU Binutils) 2.37) #1 SMP PREEMPT_DYNAMIC Thu Jun  5 18:30:46...</msg>
<var>${dmesg_output}</var>
<doc>🚀 Collect kernel boot messages using dmesg</doc>
<status status="PASS" start="2025-10-05T15:45:12.290959" elapsed="0.213819"/>
</kw>
<kw name="Save Dmesg to File" owner="logs_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:45:12.506273" level="INFO">${timestamp} = 20251005_154512</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:45:12.505843" elapsed="0.000481"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.507197" level="INFO">${dmesg_file} = results/test22_event_logs/data/dmesg_20251005_154512.txt</msg>
<var>${dmesg_file}</var>
<arg>${DATA_DIR}/dmesg_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:45:12.506669" elapsed="0.000602"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.508019" level="INFO">${report} = =========================================
=== Kernel Boot Messages (dmesg) ===
=========================================
Timestamp: 20251005_154512
Target Server: alhxvdvitap01 (172.30.16.186)

=== dm...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== Kernel Boot Messages (dmesg) ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>${dmesg_output}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:12.507503" elapsed="0.000558"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:45:12.517654" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/dmesg_20251005_154512.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/dmesg_20251005_154512.txt&lt;/a&gt;'.</msg>
<arg>${dmesg_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:45:12.508255" elapsed="0.009505"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.518183" level="INFO">📄 dmesg output saved to: results/test22_event_logs/data/dmesg_20251005_154512.txt</msg>
<arg>📄 dmesg output saved to: ${dmesg_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.517941" elapsed="0.000440"/>
</kw>
<return>
<value>${dmesg_file}</value>
<status status="PASS" start="2025-10-05T15:45:12.518540" elapsed="0.000058"/>
</return>
<msg time="2025-10-05T15:45:12.518787" level="INFO">${dmesg_file} = results/test22_event_logs/data/dmesg_20251005_154512.txt</msg>
<var>${dmesg_file}</var>
<arg>${dmesg_output}</arg>
<doc>💾 Save dmesg output to file</doc>
<status status="PASS" start="2025-10-05T15:45:12.505276" elapsed="0.013591"/>
</kw>
<kw name="File Should Exist" owner="SSHLibrary">
<msg time="2025-10-05T15:45:12.519072" level="WARN">Keyword 'File Should Exist' found both from a custom library 'SSHLibrary' and a standard library 'OperatingSystem'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'SSHLibrary.File Should Exist' or 'OperatingSystem.File Should Exist'.</msg>
<msg time="2025-10-05T15:45:12.536409" level="FAIL">File 'results/test22_event_logs/data/dmesg_20251005_154512.txt' does not exist.</msg>
<arg>${dmesg_file}</arg>
<doc>Fails if the given ``path`` does NOT point to an existing file.</doc>
<status status="FAIL" start="2025-10-05T15:45:12.519127" elapsed="0.021032">File 'results/test22_event_logs/data/dmesg_20251005_154512.txt' does not exist.</status>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<arg>${dmesg_output}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="NOT RUN" start="2025-10-05T15:45:12.540494" elapsed="0.000049"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📄 dmesg output saved to: ${dmesg_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:45:12.540707" elapsed="0.000033"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>✅ Kernel boot messages collected successfully</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:45:12.540916" elapsed="0.000027"/>
</kw>
<kw name="Log Test End" owner="logs_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.542364" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.542081" elapsed="0.000547"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.544046" level="INFO">🏁 Completed Test: Critical - Collect Boot Messages (dmesg) | Status: FAIL</msg>
<arg>🏁 Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.542967" elapsed="0.001294"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.544904" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.544624" elapsed="0.000518"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:45:12.541520" elapsed="0.003786"/>
</kw>
<doc>🚀 Collect kernel boot messages using dmesg</doc>
<tag>boot</tag>
<tag>critical</tag>
<tag>dmesg</tag>
<tag>kernel</tag>
<tag>logs</tag>
<status status="FAIL" start="2025-10-05T15:45:12.288216" elapsed="0.257169">File 'results/test22_event_logs/data/dmesg_20251005_154512.txt' does not exist.</status>
</test>
<test id="s1-t4" name="Critical - Collect System Log Files" line="70">
<kw name="Log Test Start" owner="logs_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.547821" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.547606" elapsed="0.000404"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.548399" level="INFO">🏁 Starting Test: Critical - Collect System Log Files</msg>
<arg>🏁 Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.548185" elapsed="0.001725"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.550591" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.550257" elapsed="0.001880"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:45:12.547234" elapsed="0.005027"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.553221" level="INFO">🔍 Collecting system log files from /var/log...</msg>
<arg>🔍 Collecting system log files from /var/log...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.553050" elapsed="0.000286"/>
</kw>
<kw name="Collect System Log Files" owner="logs_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.553929" level="INFO">📂 Collecting system log files from /var/log...</msg>
<arg>📂 Collecting system log files from /var/log...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.553811" elapsed="0.000230"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:12.554918" level="INFO">Executing command 'tail -500 /var/log/messages 2&gt;/dev/null || echo "No /var/log/messages"'.</msg>
<msg time="2025-10-05T15:45:12.567370" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:12.567566" level="INFO">${output} = No /var/log/messages</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:12.554660" elapsed="0.012929"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:12.567664" elapsed="0.000049"/>
</return>
<msg time="2025-10-05T15:45:12.567846" level="INFO">${messages} = No /var/log/messages</msg>
<var>${messages}</var>
<arg>tail -${LOG_LINES_TO_COLLECT} /var/log/messages 2&gt;/dev/null || echo "No /var/log/messages"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:12.554279" elapsed="0.013590"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:12.568616" level="INFO">Executing command 'tail -500 /var/log/syslog 2&gt;/dev/null || echo "No /var/log/syslog"'.</msg>
<msg time="2025-10-05T15:45:12.617511" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:12.617957" level="INFO">${output} = 2025-10-05T15:01:19.103982-05:00 DESKTOP-933PGUE wsl-pro-service[173]: #033[36mINFO#033[0m Reconnecting to Windows host in 60 seconds
2025-10-05T15:01:19.104033-05:00 DESKTOP-933PGUE wsl-pro-service[1...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:12.568461" elapsed="0.049556"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:12.618140" elapsed="0.000077"/>
</return>
<msg time="2025-10-05T15:45:12.618580" level="INFO">${syslog} = 2025-10-05T15:01:19.103982-05:00 DESKTOP-933PGUE wsl-pro-service[173]: #033[36mINFO#033[0m Reconnecting to Windows host in 60 seconds
2025-10-05T15:01:19.104033-05:00 DESKTOP-933PGUE wsl-pro-service[1...</msg>
<var>${syslog}</var>
<arg>tail -${LOG_LINES_TO_COLLECT} /var/log/syslog 2&gt;/dev/null || echo "No /var/log/syslog"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:12.568082" elapsed="0.050572"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:12.620196" level="INFO">Executing command 'tail -500 /var/log/secure 2&gt;/dev/null || tail -500 /var/log/auth.log 2&gt;/dev/null || echo "No secure/auth.log"'.</msg>
<msg time="2025-10-05T15:45:12.694480" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:12.694984" level="INFO">${output} = 2025-09-28T08:48:24.976178-05:00 DESKTOP-933PGUE systemd-logind[174]: New seat seat0.
2025-09-28T08:48:26.751638-05:00 DESKTOP-933PGUE login[300]: PAM unable to dlopen(pam_lastlog.so): /usr/lib/securi...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:12.619916" elapsed="0.075127"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:12.695180" elapsed="0.000085"/>
</return>
<msg time="2025-10-05T15:45:12.695514" level="INFO">${secure} = 2025-09-28T08:48:24.976178-05:00 DESKTOP-933PGUE systemd-logind[174]: New seat seat0.
2025-09-28T08:48:26.751638-05:00 DESKTOP-933PGUE login[300]: PAM unable to dlopen(pam_lastlog.so): /usr/lib/securi...</msg>
<var>${secure}</var>
<arg>tail -${LOG_LINES_TO_COLLECT} /var/log/secure 2&gt;/dev/null || tail -${LOG_LINES_TO_COLLECT} /var/log/auth.log 2&gt;/dev/null || echo "No secure/auth.log"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:12.619277" elapsed="0.076275"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:12.696889" level="INFO">Executing command 'tail -500 /var/log/cron 2&gt;/dev/null || tail -500 /var/log/cron.log 2&gt;/dev/null || echo "No cron log"'.</msg>
<msg time="2025-10-05T15:45:12.759780" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:12.760193" level="INFO">${output} = No cron log</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:12.696622" elapsed="0.063655"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:12.760414" elapsed="0.000082"/>
</return>
<msg time="2025-10-05T15:45:12.760754" level="INFO">${cron} = No cron log</msg>
<var>${cron}</var>
<arg>tail -${LOG_LINES_TO_COLLECT} /var/log/cron 2&gt;/dev/null || tail -${LOG_LINES_TO_COLLECT} /var/log/cron.log 2&gt;/dev/null || echo "No cron log"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:12.695981" elapsed="0.064817"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:12.762393" level="INFO">Executing command 'tail -500 /var/log/boot.log 2&gt;/dev/null || echo "No /var/log/boot.log"'.</msg>
<msg time="2025-10-05T15:45:12.809981" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:12.810285" level="INFO">${output} = No /var/log/boot.log</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:12.762046" elapsed="0.048278"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:12.810484" elapsed="0.000112"/>
</return>
<msg time="2025-10-05T15:45:12.810907" level="INFO">${boot} = No /var/log/boot.log</msg>
<var>${boot}</var>
<arg>tail -${LOG_LINES_TO_COLLECT} /var/log/boot.log 2&gt;/dev/null || echo "No /var/log/boot.log"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:12.761306" elapsed="0.049636"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:12.814668" level="INFO">Executing command 'tail -500 /var/log/kern.log 2&gt;/dev/null || echo "No /var/log/kern.log"'.</msg>
<msg time="2025-10-05T15:45:12.879937" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:12.880364" level="INFO">${output} = 2025-09-29T22:05:14.153276-05:00 DESKTOP-933PGUE kernel: hv_pci cb70a81e-f157-4555-9eeb-a7bd93232cad: PCI VMBus probing: Using version 0x10004
2025-09-29T22:05:14.153277-05:00 DESKTOP-933PGUE kernel: ...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:12.811843" elapsed="0.068578"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:12.881331" elapsed="0.000069"/>
</return>
<msg time="2025-10-05T15:45:12.881648" level="INFO">${kern} = 2025-09-29T22:05:14.153276-05:00 DESKTOP-933PGUE kernel: hv_pci cb70a81e-f157-4555-9eeb-a7bd93232cad: PCI VMBus probing: Using version 0x10004
2025-09-29T22:05:14.153277-05:00 DESKTOP-933PGUE kernel: ...</msg>
<var>${kern}</var>
<arg>tail -${LOG_LINES_TO_COLLECT} /var/log/kern.log 2&gt;/dev/null || echo "No /var/log/kern.log"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:12.811257" elapsed="0.070423"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:12.882667" level="INFO">Executing command 'ls -lh /var/log/*.log /var/log/messages /var/log/syslog 2&gt;/dev/null || echo "Log file listing not available"'.</msg>
<msg time="2025-10-05T15:45:12.939793" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:12.940149" level="INFO">${output} = -rw-r--r-- 1 root   root  32K Sep 28 10:17 /var/log/alternatives.log
-rw-r----- 1 syslog adm   57K Oct  5 15:45 /var/log/auth.log
-rw-r--r-- 1 root   root 116K Aug  5 11:55 /var/log/bootstrap.log
-rw-...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:12.882403" elapsed="0.057908"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:12.940506" elapsed="0.000090"/>
</return>
<msg time="2025-10-05T15:45:12.940882" level="INFO">${log_list} = -rw-r--r-- 1 root   root  32K Sep 28 10:17 /var/log/alternatives.log
-rw-r----- 1 syslog adm   57K Oct  5 15:45 /var/log/auth.log
-rw-r--r-- 1 root   root 116K Aug  5 11:55 /var/log/bootstrap.log
-rw-...</msg>
<var>${log_list}</var>
<arg>ls -lh /var/log/*.log /var/log/messages /var/log/syslog 2&gt;/dev/null || echo "Log file listing not available"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:12.882005" elapsed="0.058928"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.942222" level="INFO">${system_logs} = === /var/log Directory ===
-rw-r--r-- 1 root   root  32K Sep 28 10:17 /var/log/alternatives.log
-rw-r----- 1 syslog adm   57K Oct  5 15:45 /var/log/auth.log
-rw-r--r-- 1 root   root 116K Aug  5 11:55 ...</msg>
<var>${system_logs}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== /var/log Directory ===</arg>
<arg>${log_list}</arg>
<arg>=== /var/log/messages ===</arg>
<arg>${messages}</arg>
<arg>=== /var/log/syslog ===</arg>
<arg>${syslog}</arg>
<arg>=== /var/log/secure (auth.log) ===</arg>
<arg>${secure}</arg>
<arg>=== /var/log/cron ===</arg>
<arg>${cron}</arg>
<arg>=== /var/log/boot.log ===</arg>
<arg>${boot}</arg>
<arg>=== /var/log/kern.log ===</arg>
<arg>${kern}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:12.941279" elapsed="0.000996"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.943392" level="INFO">${SYSTEM_LOGS} = === /var/log Directory ===
-rw-r--r-- 1 root   root  32K Sep 28 10:17 /var/log/alternatives.log
-rw-r----- 1 syslog adm   57K Oct  5 15:45 /var/log/auth.log
-rw-r--r-- 1 root   root 116K Aug  5 11:55 ...</msg>
<arg>${SYSTEM_LOGS}</arg>
<arg>${system_logs}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:45:12.942948" elapsed="0.000524"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.943974" level="INFO">✅ System log files collected</msg>
<arg>✅ System log files collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.943672" elapsed="0.000516"/>
</kw>
<return>
<value>${system_logs}</value>
<status status="PASS" start="2025-10-05T15:45:12.944315" elapsed="0.000068"/>
</return>
<msg time="2025-10-05T15:45:12.944616" level="INFO">${system_logs} = === /var/log Directory ===
-rw-r--r-- 1 root   root  32K Sep 28 10:17 /var/log/alternatives.log
-rw-r----- 1 syslog adm   57K Oct  5 15:45 /var/log/auth.log
-rw-r--r-- 1 root   root 116K Aug  5 11:55 ...</msg>
<var>${system_logs}</var>
<doc>📂 Collect important system log files from /var/log</doc>
<status status="PASS" start="2025-10-05T15:45:12.553579" elapsed="0.391082"/>
</kw>
<kw name="Save System Logs to File" owner="logs_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:45:12.946388" level="INFO">${timestamp} = 20251005_154512</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:45:12.946002" elapsed="0.000465"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.947438" level="INFO">${syslog_file} = results/test22_event_logs/data/system_logs_20251005_154512.txt</msg>
<var>${syslog_file}</var>
<arg>${DATA_DIR}/system_logs_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:45:12.946870" elapsed="0.000621"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.948605" level="INFO">${report} = =========================================
=== System Log Files (/var/log) ===
=========================================
Timestamp: 20251005_154512
Target Server: alhxvdvitap01 (172.30.16.186)
Lines pe...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== System Log Files (/var/log) ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>Lines per Log: ${LOG_LINES_TO_COLLECT}</arg>
<arg>${system_logs}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:12.947698" elapsed="0.000960"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:45:12.961000" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/system_logs_20251005_154512.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/system_logs_20251005_154512.txt&lt;/a&gt;'.</msg>
<arg>${syslog_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:45:12.948925" elapsed="0.012240"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.961688" level="INFO">📄 System logs saved to: results/test22_event_logs/data/system_logs_20251005_154512.txt</msg>
<arg>📄 System logs saved to: ${syslog_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.961357" elapsed="0.000480"/>
</kw>
<return>
<value>${syslog_file}</value>
<status status="PASS" start="2025-10-05T15:45:12.961936" elapsed="0.000052"/>
</return>
<msg time="2025-10-05T15:45:12.962166" level="INFO">${syslog_file} = results/test22_event_logs/data/system_logs_20251005_154512.txt</msg>
<var>${syslog_file}</var>
<arg>${system_logs}</arg>
<doc>💾 Save system logs to file</doc>
<status status="PASS" start="2025-10-05T15:45:12.945198" elapsed="0.016999"/>
</kw>
<kw name="File Should Exist" owner="SSHLibrary">
<msg time="2025-10-05T15:45:12.962322" level="WARN">Keyword 'File Should Exist' found both from a custom library 'SSHLibrary' and a standard library 'OperatingSystem'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'SSHLibrary.File Should Exist' or 'OperatingSystem.File Should Exist'.</msg>
<msg time="2025-10-05T15:45:12.972317" level="FAIL">File 'results/test22_event_logs/data/system_logs_20251005_154512.txt' does not exist.</msg>
<arg>${syslog_file}</arg>
<doc>Fails if the given ``path`` does NOT point to an existing file.</doc>
<status status="FAIL" start="2025-10-05T15:45:12.962369" elapsed="0.013026">File 'results/test22_event_logs/data/system_logs_20251005_154512.txt' does not exist.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📄 System logs saved to: ${syslog_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:45:12.975765" elapsed="0.000059"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>✅ System log files collected successfully</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:45:12.975996" elapsed="0.000031"/>
</kw>
<kw name="Log Test End" owner="logs_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.977388" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.977155" elapsed="0.000407"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.978035" level="INFO">🏁 Completed Test: Critical - Collect System Log Files | Status: FAIL</msg>
<arg>🏁 Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.977744" elapsed="0.000436"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.978656" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.978347" elapsed="0.000465"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:45:12.976473" elapsed="0.002491"/>
</kw>
<doc>📂 Collect important system log files from /var/log</doc>
<tag>critical</tag>
<tag>logs</tag>
<tag>system</tag>
<tag>var_log</tag>
<status status="FAIL" start="2025-10-05T15:45:12.546148" elapsed="0.432904">File 'results/test22_event_logs/data/system_logs_20251005_154512.txt' does not exist.</status>
</test>
<test id="s1-t5" name="Critical - Check for Critical Errors in Journalctl" line="88">
<kw name="Log Test Start" owner="logs_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.980875" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.980698" elapsed="0.000322"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.981464" level="INFO">🏁 Starting Test: Critical - Check for Critical Errors in Journalctl</msg>
<arg>🏁 Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.981214" elapsed="0.000388"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.981954" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.981799" elapsed="0.000282"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:45:12.980354" elapsed="0.001830"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.982694" level="INFO">🔍 Searching for critical errors in journal...</msg>
<arg>🔍 Searching for critical errors in journal...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.982351" elapsed="0.000648"/>
</kw>
<kw name="Search Critical Errors in Journal" owner="logs_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.983853" level="INFO">⚠️ Searching for critical errors...</msg>
<arg>⚠️ Searching for critical errors...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.983688" elapsed="0.000269"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:12.984518" level="INFO">Executing command 'journalctl --no-pager -p emerg -n 100 2&gt;&amp;1 || echo "Emergency level search not available"'.</msg>
<msg time="2025-10-05T15:45:12.997236" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:12.997459" level="INFO">${output} = -- No entries --</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:12.984399" elapsed="0.013085"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:12.997560" elapsed="0.000049"/>
</return>
<msg time="2025-10-05T15:45:12.997852" level="INFO">${emerg_errors} = -- No entries --</msg>
<var>${emerg_errors}</var>
<arg>journalctl --no-pager -p emerg -n 100 2&gt;&amp;1 || echo "Emergency level search not available"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:12.984132" elapsed="0.013760"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:12.998945" level="INFO">Executing command 'journalctl --no-pager -p alert -n 100 2&gt;&amp;1 || echo "Alert level search not available"'.</msg>
<msg time="2025-10-05T15:45:13.063235" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:13.063481" level="INFO">${output} = Oct 05 12:31:21 alhxvdvitap01 sudo[626]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 12:31:55 alhxvdvitap01 sudo[953]:      sac : unable to resolve hos...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:12.998714" elapsed="0.064804"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:13.063597" elapsed="0.000048"/>
</return>
<msg time="2025-10-05T15:45:13.063814" level="INFO">${alert_errors} = Oct 05 12:31:21 alhxvdvitap01 sudo[626]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 12:31:55 alhxvdvitap01 sudo[953]:      sac : unable to resolve hos...</msg>
<var>${alert_errors}</var>
<arg>journalctl --no-pager -p alert -n 100 2&gt;&amp;1 || echo "Alert level search not available"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:12.998235" elapsed="0.065644"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:13.064640" level="INFO">Executing command 'journalctl --no-pager -p crit -n 100 2&gt;&amp;1 || echo "Critical level search not available"'.</msg>
<msg time="2025-10-05T15:45:13.125629" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:13.125906" level="INFO">${output} = Sep 28 08:51:05 DESKTOP-933PGUE sudo[1026]: pam_unix(sudo:auth): auth could not identify password for [sac]
-- Boot 1eee50944e4745269e3cc8421a05f8ec --
Sep 29 14:21:47 DESKTOP-933PGUE sudo[10015]: pam...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:13.064502" elapsed="0.061444"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:13.126051" elapsed="0.000064"/>
</return>
<msg time="2025-10-05T15:45:13.126315" level="INFO">${crit_errors} = Sep 28 08:51:05 DESKTOP-933PGUE sudo[1026]: pam_unix(sudo:auth): auth could not identify password for [sac]
-- Boot 1eee50944e4745269e3cc8421a05f8ec --
Sep 29 14:21:47 DESKTOP-933PGUE sudo[10015]: pam...</msg>
<var>${crit_errors}</var>
<arg>journalctl --no-pager -p crit -n 100 2&gt;&amp;1 || echo "Critical level search not available"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:13.064156" elapsed="0.062193"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:13.127491" level="INFO">Executing command 'journalctl --no-pager -n 500 | grep -i "critical|emergency|fatal|panic" || echo "No critical keywords found"'.</msg>
<msg time="2025-10-05T15:45:13.245734" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:13.246064" level="INFO">${output} = No critical keywords found</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:13.127354" elapsed="0.118755"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:13.246242" elapsed="0.000084"/>
</return>
<msg time="2025-10-05T15:45:13.246728" level="INFO">${error_keywords} = No critical keywords found</msg>
<var>${error_keywords}</var>
<arg>journalctl --no-pager -n ${LOG_LINES_TO_COLLECT} | grep -i "critical\|emergency\|fatal\|panic" || echo "No critical keywords found"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:13.126770" elapsed="0.120026"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:13.247753" level="INFO">${critical_errors} = === Emergency Level (Priority 0) ===
-- No entries --

=== Alert Level (Priority 1) ===
Oct 05 12:31:21 alhxvdvitap01 sudo[626]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in n...</msg>
<var>${critical_errors}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Emergency Level (Priority 0) ===</arg>
<arg>${emerg_errors}</arg>
<arg>=== Alert Level (Priority 1) ===</arg>
<arg>${alert_errors}</arg>
<arg>=== Critical Level (Priority 2) ===</arg>
<arg>${crit_errors}</arg>
<arg>=== Critical Keywords in Recent Logs ===</arg>
<arg>${error_keywords}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:13.247231" elapsed="0.000586"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:13.248317" level="INFO">${CRITICAL_ERRORS} = === Emergency Level (Priority 0) ===
-- No entries --

=== Alert Level (Priority 1) ===
Oct 05 12:31:21 alhxvdvitap01 sudo[626]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in n...</msg>
<arg>${CRITICAL_ERRORS}</arg>
<arg>${critical_errors}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:45:13.248032" elapsed="0.000356"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:13.248831" level="INFO">✅ Critical error search completed</msg>
<arg>✅ Critical error search completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:13.248605" elapsed="0.000382"/>
</kw>
<return>
<value>${critical_errors}</value>
<status status="PASS" start="2025-10-05T15:45:13.249067" elapsed="0.000062"/>
</return>
<msg time="2025-10-05T15:45:13.249373" level="INFO">${critical_errors} = === Emergency Level (Priority 0) ===
-- No entries --

=== Alert Level (Priority 1) ===
Oct 05 12:31:21 alhxvdvitap01 sudo[626]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in n...</msg>
<var>${critical_errors}</var>
<doc>⚠️ Search for critical and emergency level errors</doc>
<status status="PASS" start="2025-10-05T15:45:12.983282" elapsed="0.266131"/>
</kw>
<kw name="Save Critical Errors to File" owner="logs_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:45:13.250524" level="INFO">${timestamp} = 20251005_154513</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:45:13.250201" elapsed="0.000366"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:13.251078" level="INFO">${errors_file} = results/test22_event_logs/data/critical_errors_20251005_154513.txt</msg>
<var>${errors_file}</var>
<arg>${DATA_DIR}/critical_errors_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:45:13.250747" elapsed="0.000361"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:13.251598" level="INFO">${report} = =========================================
=== Critical Errors Analysis ===
=========================================
Timestamp: 20251005_154513
Target Server: alhxvdvitap01 (172.30.16.186)
Search Keyw...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== Critical Errors Analysis ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>Search Keywords: ${CRITICAL_ERROR_KEYWORDS}</arg>
<arg>${critical_errors}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:13.251218" elapsed="0.000409"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:45:13.258326" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/critical_errors_20251005_154513.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/critical_errors_20251005_154513.txt&lt;/a&gt;'.</msg>
<arg>${errors_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:45:13.251753" elapsed="0.006779"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:13.259220" level="INFO">📄 Critical errors saved to: results/test22_event_logs/data/critical_errors_20251005_154513.txt</msg>
<arg>📄 Critical errors saved to: ${errors_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:13.258881" elapsed="0.000481"/>
</kw>
<return>
<value>${errors_file}</value>
<status status="PASS" start="2025-10-05T15:45:13.259428" elapsed="0.000051"/>
</return>
<msg time="2025-10-05T15:45:13.259681" level="INFO">${errors_file} = results/test22_event_logs/data/critical_errors_20251005_154513.txt</msg>
<var>${errors_file}</var>
<arg>${critical_errors}</arg>
<doc>💾 Save critical errors to file</doc>
<status status="PASS" start="2025-10-05T15:45:13.249729" elapsed="0.009983"/>
</kw>
<kw name="Count Critical Errors" owner="logs_keywords">
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:13.261675" level="INFO">Executing command 'echo "=== Emergency Level (Priority 0) ===
-- No entries --

=== Alert Level (Priority 1) ===
Oct 05 12:31:21 alhxvdvitap01 sudo[626]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 12:31:55 alhxvdvitap01 sudo[953]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 12:32:45 alhxvdvitap01 sudo[1371]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 13:09:11 alhxvdvitap01 sudo[1844]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 13:09:34 alhxvdvitap01 sudo[1869]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 13:09:54 alhxvdvitap01 sudo[1872]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 13:10:18 alhxvdvitap01 sudo[1899]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 13:10:41 alhxvdvitap01 sudo[1924]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 13:11:01 alhxvdvitap01 sudo[1929]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 13:11:25 alhxvdvitap01 sudo[1934]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 13:11:45 alhxvdvitap01 sudo[1959]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 13:12:08 alhxvdvitap01 sudo[1962]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 14:13:59 alhxvdvitap01 sudo[4020]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 15:24:43 alhxvdvitap01 sudo[8900]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 15:25:28 alhxvdvitap01 sudo[9185]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 15:30:32 alhxvdvitap01 sudo[11090]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 15:30:53 alhxvdvitap01 sudo[11117]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 15:31:16 alhxvdvitap01 sudo[11120]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 15:31:39 alhxvdvitap01 sudo[11179]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 15:32:00 alhxvdvitap01 sudo[11205]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 15:32:22 alhxvdvitap01 sudo[11296]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 15:32:45 alhxvdvitap01 sudo[11341]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 15:33:06 alhxvdvitap01 sudo[11400]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 15:33:29 alhxvdvitap01 sudo[11403]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution

=== Critical Level (Priority 2) ===
Sep 28 08:51:05 DESKTOP-933PGUE sudo[1026]: pam_unix(sudo:auth): auth could not identify password for [sac]
-- Boot 1eee50944e4745269e3cc8421a05f8ec --
Sep 29 14:21:47 DESKTOP-933PGUE sudo[10015]: pam_unix(sudo:auth): auth could not identify password for [sac]
-- Boot c3e9f72d9501467cb833a308f82df79a --
Oct 05 12:31:21 alhxvdvitap01 sudo[626]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 12:31:55 alhxvdvitap01 sudo[953]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 12:32:45 alhxvdvitap01 sudo[1371]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 13:09:11 alhxvdvitap01 sudo[1844]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 13:09:11 alhxvdvitap01 sudo[1844]: pam_unix(sudo:auth): auth could not identify password for [sac]
Oct 05 13:09:34 alhxvdvitap01 sudo[1869]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 13:09:34 alhxvdvitap01 sudo[1869]: pam_unix(sudo:auth): auth could not identify password for [sac]
Oct 05 13:09:54 alhxvdvitap01 sudo[1872]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 13:09:54 alhxvdvitap01 sudo[1872]: pam_unix(sudo:auth): auth could not identify password for [sac]
Oct 05 13:10:18 alhxvdvitap01 sudo[1899]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 13:10:18 alhxvdvitap01 sudo[1899]: pam_unix(sudo:auth): auth could not identify password for [sac]
Oct 05 13:10:41 alhxvdvitap01 sudo[1924]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 13:10:41 alhxvdvitap01 sudo[1924]: pam_unix(sudo:auth): auth could not identify password for [sac]
Oct 05 13:11:01 alhxvdvitap01 sudo[1929]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 13:11:01 alhxvdvitap01 sudo[1929]: pam_unix(sudo:auth): auth could not identify password for [sac]
Oct 05 13:11:25 alhxvdvitap01 sudo[1934]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 13:11:25 alhxvdvitap01 sudo[1934]: pam_unix(sudo:auth): auth could not identify password for [sac]
Oct 05 13:11:45 alhxvdvitap01 sudo[1959]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 13:11:45 alhxvdvitap01 sudo[1959]: pam_unix(sudo:auth): auth could not identify password for [sac]
Oct 05 13:12:08 alhxvdvitap01 sudo[1962]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 13:12:08 alhxvdvitap01 sudo[1962]: pam_unix(sudo:auth): auth could not identify password for [sac]
Oct 05 14:13:59 alhxvdvitap01 sudo[4020]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 15:24:43 alhxvdvitap01 sudo[8900]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 15:25:28 alhxvdvitap01 sudo[9185]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 15:30:32 alhxvdvitap01 sudo[11090]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 15:30:32 alhxvdvitap01 sudo[11090]: pam_unix(sudo:auth): auth could not identify password for [sac]
Oct 05 15:30:53 alhxvdvitap01 sudo[11117]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 15:30:53 alhxvdvitap01 sudo[11117]: pam_unix(sudo:auth): auth could not identify password for [sac]
Oct 05 15:31:16 alhxvdvitap01 sudo[11120]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 15:31:16 alhxvdvitap01 sudo[11120]: pam_unix(sudo:auth): auth could not identify password for [sac]
Oct 05 15:31:39 alhxvdvitap01 sudo[11179]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 15:31:39 alhxvdvitap01 sudo[11179]: pam_unix(sudo:auth): auth could not identify password for [sac]
Oct 05 15:32:00 alhxvdvitap01 sudo[11205]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 15:32:00 alhxvdvitap01 sudo[11205]: pam_unix(sudo:auth): auth could not identify password for [sac]
Oct 05 15:32:22 alhxvdvitap01 sudo[11296]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 15:32:22 alhxvdvitap01 sudo[11296]: pam_unix(sudo:auth): auth could not identify password for [sac]
Oct 05 15:32:45 alhxvdvitap01 sudo[11341]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 15:32:45 alhxvdvitap01 sudo[11341]: pam_unix(sudo:auth): auth could not identify password for [sac]
Oct 05 15:33:06 alhxvdvitap01 sudo[11400]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 15:33:06 alhxvdvitap01 sudo[11400]: pam_unix(sudo:auth): auth could not identify password for [sac]
Oct 05 15:33:29 alhxvdvitap01 sudo[11403]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 15:33:29 alhxvdvitap01 sudo[11403]: pam_unix(sudo:auth): auth could not identify password for [sac]

=== Critical Keywords in Recent Logs ===
No critical keywords found" | grep -viE "no entries|not available|no critical" | wc -l'.</msg>
<msg time="2025-10-05T15:45:13.308783" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:13.308968" level="INFO">${output} = 77</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:13.261416" elapsed="0.047575"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:13.309063" elapsed="0.000044"/>
</return>
<msg time="2025-10-05T15:45:13.309391" level="INFO">${error_lines} = 77</msg>
<var>${error_lines}</var>
<arg>echo "${critical_errors}" | grep -viE "no entries|not available|no critical" | wc -l</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:13.260302" elapsed="0.049144"/>
</kw>
<kw name="Convert To Integer" owner="BuiltIn">
<msg time="2025-10-05T15:45:13.310189" level="INFO">${error_count} = 77</msg>
<var>${error_count}</var>
<arg>${error_lines}</arg>
<doc>Converts the given item to an integer number.</doc>
<status status="PASS" start="2025-10-05T15:45:13.309739" elapsed="0.000492"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:13.310820" level="INFO">📊 Critical error count: 77</msg>
<arg>📊 Critical error count: ${error_count}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:13.310471" elapsed="0.000511"/>
</kw>
<return>
<value>${error_count}</value>
<status status="PASS" start="2025-10-05T15:45:13.311070" elapsed="0.000038"/>
</return>
<msg time="2025-10-05T15:45:13.311230" level="INFO">${error_count} = 77</msg>
<var>${error_count}</var>
<arg>${critical_errors}</arg>
<doc>🔢 Count the number of critical errors found</doc>
<status status="PASS" start="2025-10-05T15:45:13.259966" elapsed="0.051284"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:13.311506" level="INFO">⚠️ Critical error count: 77</msg>
<arg>⚠️ Critical error count: ${error_count}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:13.311357" elapsed="0.000246"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:13.311898" level="INFO">📄 Critical errors saved to: results/test22_event_logs/data/critical_errors_20251005_154513.txt</msg>
<arg>📄 Critical errors saved to: ${errors_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:13.311731" elapsed="0.000272"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:13.312225" level="INFO">✅ Critical error validation completed</msg>
<arg>✅ Critical error validation completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:13.312125" elapsed="0.000186"/>
</kw>
<kw name="Log Test End" owner="logs_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:13.313280" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:13.313166" elapsed="0.000206"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:13.313647" level="INFO">🏁 Completed Test: Critical - Check for Critical Errors in Journalctl | Status: PASS</msg>
<arg>🏁 Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:13.313490" elapsed="0.000246"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:13.313967" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:13.313852" elapsed="0.000204"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:45:13.312547" elapsed="0.001592"/>
</kw>
<doc>⚠️ Search for critical and emergency level errors in journal</doc>
<tag>critical</tag>
<tag>errors</tag>
<tag>journalctl</tag>
<tag>validation</tag>
<status status="PASS" start="2025-10-05T15:45:12.979511" elapsed="0.334689"/>
</test>
<test id="s1-t6" name="Critical - Validate Clean Boot Sequence" line="107">
<kw name="Log Test Start" owner="logs_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:13.315620" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:13.315492" elapsed="0.000222"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:13.315965" level="INFO">🏁 Starting Test: Critical - Validate Clean Boot Sequence</msg>
<arg>🏁 Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:13.315832" elapsed="0.000220"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:13.316289" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:13.316167" elapsed="0.000203"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:45:13.315214" elapsed="0.001253"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:13.316666" level="INFO">🔍 Validating boot sequence...</msg>
<arg>🔍 Validating boot sequence...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:13.316572" elapsed="0.000178"/>
</kw>
<kw name="Analyze Boot Sequence" owner="logs_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:13.317201" level="INFO">🚀 Analyzing boot sequence...</msg>
<arg>🚀 Analyzing boot sequence...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:13.317110" elapsed="0.000175"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:13.318089" level="INFO">Executing command 'systemd-analyze time 2&gt;&amp;1 || echo "systemd-analyze not available"'.</msg>
<msg time="2025-10-05T15:45:13.365629" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:13.365916" level="INFO">${output} = Startup finished in 2.752s (userspace) 
graphical.target reached after 2.700s in userspace.</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:13.317686" elapsed="0.048267"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:13.366069" elapsed="0.000072"/>
</return>
<msg time="2025-10-05T15:45:13.366379" level="INFO">${boot_time} = Startup finished in 2.752s (userspace) 
graphical.target reached after 2.700s in userspace.</msg>
<var>${boot_time}</var>
<arg>systemd-analyze time 2&gt;&amp;1 || echo "systemd-analyze not available"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:13.317444" elapsed="0.048985"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:13.368394" level="INFO">Executing command 'systemd-analyze blame 2&gt;&amp;1 | head -30 || echo "systemd-analyze blame not available"'.</msg>
<msg time="2025-10-05T15:45:13.795087" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:13.795298" level="INFO">${output} = 1.538s landscape-client.service
 465ms snapd.seeded.service
 381ms dev-sdd.device
 334ms snapd.service
 321ms user@1000.service
 279ms wsl-pro.service
 269ms systemd-resolved.service
 198ms systemd-tm...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:13.368151" elapsed="0.427174"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:13.795406" elapsed="0.000050"/>
</return>
<msg time="2025-10-05T15:45:13.795603" level="INFO">${boot_blame} = 1.538s landscape-client.service
 465ms snapd.seeded.service
 381ms dev-sdd.device
 334ms snapd.service
 321ms user@1000.service
 279ms wsl-pro.service
 269ms systemd-resolved.service
 198ms systemd-tm...</msg>
<var>${boot_blame}</var>
<arg>systemd-analyze blame 2&gt;&amp;1 | head -30 || echo "systemd-analyze blame not available"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:13.367569" elapsed="0.428063"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:13.796348" level="INFO">Executing command 'systemd-analyze critical-chain 2&gt;&amp;1 | head -30 || echo "systemd-analyze critical-chain not available"'.</msg>
<msg time="2025-10-05T15:45:14.268884" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:14.269153" level="INFO">${output} = The time when unit became active or started is printed after the "@" character.
The time the unit took to start is printed after the "+" character.

graphical.target @2.700s
└─multi-user.target @2.695...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:13.796212" elapsed="0.472982"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:14.269367" elapsed="0.000081"/>
</return>
<msg time="2025-10-05T15:45:14.269640" level="INFO">${boot_critical} = The time when unit became active or started is printed after the "@" character.
The time the unit took to start is printed after the "+" character.

graphical.target @2.700s
└─multi-user.target @2.695...</msg>
<var>${boot_critical}</var>
<arg>systemd-analyze critical-chain 2&gt;&amp;1 | head -30 || echo "systemd-analyze critical-chain not available"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:13.795854" elapsed="0.473819"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:14.270453" level="INFO">Executing command 'journalctl --no-pager -b | head -100 2&gt;&amp;1 || echo "Boot journal not available"'.</msg>
<msg time="2025-10-05T15:45:14.325789" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:14.326063" level="INFO">${output} = Oct 05 12:06:43 DESKTOP-933PGUE kernel: Linux version 6.6.87.2-microsoft-standard-WSL2 (root@439a258ad544) (gcc (GCC) 11.2.0, GNU ld (GNU Binutils) 2.37) #1 SMP PREEMPT_DYNAMIC Thu Jun  5 18:30:46 UTC...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:14.270283" elapsed="0.055827"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:14.326224" elapsed="0.000068"/>
</return>
<msg time="2025-10-05T15:45:14.326603" level="INFO">${boot_messages} = Oct 05 12:06:43 DESKTOP-933PGUE kernel: Linux version 6.6.87.2-microsoft-standard-WSL2 (root@439a258ad544) (gcc (GCC) 11.2.0, GNU ld (GNU Binutils) 2.37) #1 SMP PREEMPT_DYNAMIC Thu Jun  5 18:30:46 UTC...</msg>
<var>${boot_messages}</var>
<arg>journalctl --no-pager -b | head -100 2&gt;&amp;1 || echo "Boot journal not available"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:14.269913" elapsed="0.056742"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:14.327597" level="INFO">Executing command 'journalctl --no-pager -b -p err 2&gt;&amp;1 || echo "Boot errors not available"'.</msg>
<msg time="2025-10-05T15:45:14.385690" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:14.385892" level="INFO">${output} = Oct 05 12:06:43 DESKTOP-933PGUE kernel: PCI: Fatal: No config space access function found
Oct 05 12:06:43 DESKTOP-933PGUE kernel: misc dxg: dxgk: dxgkio_is_feature_enabled: Ioctl failed: -22
Oct 05 12...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:14.327457" elapsed="0.058459"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:14.385994" elapsed="0.000047"/>
</return>
<msg time="2025-10-05T15:45:14.386175" level="INFO">${boot_failed} = Oct 05 12:06:43 DESKTOP-933PGUE kernel: PCI: Fatal: No config space access function found
Oct 05 12:06:43 DESKTOP-933PGUE kernel: misc dxg: dxgk: dxgkio_is_feature_enabled: Ioctl failed: -22
Oct 05 12...</msg>
<var>${boot_failed}</var>
<arg>journalctl --no-pager -b -p err 2&gt;&amp;1 || echo "Boot errors not available"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:14.327136" elapsed="0.059062"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.386784" level="INFO">${boot_analysis} = === Boot Time Analysis ===
Startup finished in 2.752s (userspace) 
graphical.target reached after 2.700s in userspace.

=== Boot Blame (Slowest Services) ===
1.538s landscape-client.service
 465ms sna...</msg>
<var>${boot_analysis}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Boot Time Analysis ===</arg>
<arg>${boot_time}</arg>
<arg>=== Boot Blame (Slowest Services) ===</arg>
<arg>${boot_blame}</arg>
<arg>=== Boot Critical Chain ===</arg>
<arg>${boot_critical}</arg>
<arg>=== Boot Messages (First 100) ===</arg>
<arg>${boot_messages}</arg>
<arg>=== Boot Errors ===</arg>
<arg>${boot_failed}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:14.386351" elapsed="0.000532"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.387259" level="INFO">✅ Boot sequence analysis completed</msg>
<arg>✅ Boot sequence analysis completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.387054" elapsed="0.000337"/>
</kw>
<return>
<value>${boot_analysis}</value>
<status status="PASS" start="2025-10-05T15:45:14.387457" elapsed="0.000048"/>
</return>
<msg time="2025-10-05T15:45:14.387674" level="INFO">${boot_analysis} = === Boot Time Analysis ===
Startup finished in 2.752s (userspace) 
graphical.target reached after 2.700s in userspace.

=== Boot Blame (Slowest Services) ===
1.538s landscape-client.service
 465ms sna...</msg>
<var>${boot_analysis}</var>
<doc>🚀 Analyze system boot sequence for errors</doc>
<status status="PASS" start="2025-10-05T15:45:13.316928" elapsed="1.070768"/>
</kw>
<kw name="Save Boot Analysis to File" owner="logs_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:45:14.388691" level="INFO">${timestamp} = 20251005_154514</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:45:14.388431" elapsed="0.000298"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.389850" level="INFO">${boot_file} = results/test22_event_logs/data/boot_analysis_20251005_154514.txt</msg>
<var>${boot_file}</var>
<arg>${DATA_DIR}/boot_analysis_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:45:14.389577" elapsed="0.000310"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.390517" level="INFO">${report} = =========================================
=== Boot Sequence Analysis ===
=========================================
Timestamp: 20251005_154514
Target Server: alhxvdvitap01 (172.30.16.186)

=== Boot Tim...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== Boot Sequence Analysis ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>${boot_analysis}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:14.390038" elapsed="0.000521"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:45:14.398407" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/boot_analysis_20251005_154514.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/boot_analysis_20251005_154514.txt&lt;/a&gt;'.</msg>
<arg>${boot_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:45:14.390744" elapsed="0.007891"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.399235" level="INFO">📄 Boot analysis saved to: results/test22_event_logs/data/boot_analysis_20251005_154514.txt</msg>
<arg>📄 Boot analysis saved to: ${boot_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.398934" elapsed="0.000427"/>
</kw>
<return>
<value>${boot_file}</value>
<status status="PASS" start="2025-10-05T15:45:14.399425" elapsed="0.000050"/>
</return>
<msg time="2025-10-05T15:45:14.399661" level="INFO">${boot_file} = results/test22_event_logs/data/boot_analysis_20251005_154514.txt</msg>
<var>${boot_file}</var>
<arg>${boot_analysis}</arg>
<doc>💾 Save boot analysis to file</doc>
<status status="PASS" start="2025-10-05T15:45:14.387884" elapsed="0.011803"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.400052" level="INFO">📄 Boot analysis saved to: results/test22_event_logs/data/boot_analysis_20251005_154514.txt</msg>
<arg>📄 Boot analysis saved to: ${boot_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.399825" elapsed="0.000322"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.400411" level="INFO">✅ Boot sequence validation completed</msg>
<arg>✅ Boot sequence validation completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.400293" elapsed="0.000214"/>
</kw>
<kw name="Log Test End" owner="logs_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.401280" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.401163" elapsed="0.000211"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.401661" level="INFO">🏁 Completed Test: Critical - Validate Clean Boot Sequence | Status: PASS</msg>
<arg>🏁 Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.401484" elapsed="0.000280"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.402006" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.401872" elapsed="0.000228"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:45:14.400822" elapsed="0.001373"/>
</kw>
<doc>🚀 Validate system boot sequence is clean without errors</doc>
<tag>boot</tag>
<tag>critical</tag>
<tag>sequence</tag>
<tag>validation</tag>
<status status="PASS" start="2025-10-05T15:45:13.314554" elapsed="1.087703"/>
</test>
<test id="s1-t7" name="Critical - Validate Service Startup Status" line="122">
<kw name="Log Test Start" owner="logs_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.404122" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.403901" elapsed="0.000333"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.404568" level="INFO">🏁 Starting Test: Critical - Validate Service Startup Status</msg>
<arg>🏁 Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.404382" elapsed="0.000296"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.404944" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.404814" elapsed="0.000233"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:45:14.403385" elapsed="0.001734"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.405381" level="INFO">🔍 Validating service startup status...</msg>
<arg>🔍 Validating service startup status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.405245" elapsed="0.000224"/>
</kw>
<kw name="Validate Service Startup Status" owner="logs_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.405973" level="INFO">🔧 Validating service startup status...</msg>
<arg>🔧 Validating service startup status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.405872" elapsed="0.000195"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:14.406635" level="INFO">Executing command 'systemctl --failed --no-pager 2&gt;&amp;1 || echo "Failed services check not available"'.</msg>
<msg time="2025-10-05T15:45:14.435008" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:14.435179" level="INFO">${output} =   UNIT LOAD ACTIVE SUB DESCRIPTION

0 loaded units listed.</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:14.406477" elapsed="0.028726"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:14.436032" elapsed="0.000106"/>
</return>
<msg time="2025-10-05T15:45:14.436493" level="INFO">${failed_services} =   UNIT LOAD ACTIVE SUB DESCRIPTION

0 loaded units listed.</msg>
<var>${failed_services}</var>
<arg>systemctl --failed --no-pager 2&gt;&amp;1 || echo "Failed services check not available"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:14.406221" elapsed="0.030333"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:14.438246" level="INFO">Executing command 'journalctl --no-pager -b | grep -i "started|stopped|failed" | tail -50 2&gt;&amp;1 || echo "Service startup logs not available"'.</msg>
<msg time="2025-10-05T15:45:14.629164" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:14.629404" level="INFO">${output} = </msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:14.437847" elapsed="0.191594"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:14.629544" elapsed="0.000061"/>
</return>
<msg time="2025-10-05T15:45:14.629822" level="INFO">${service_startup} = </msg>
<var>${service_startup}</var>
<arg>journalctl --no-pager -b | grep -i "started\|stopped\|failed" | tail -50 2&gt;&amp;1 || echo "Service startup logs not available"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:14.436998" elapsed="0.192867"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:14.630987" level="INFO">Executing command 'systemctl list-units --type=service --state=failed --no-pager 2&gt;&amp;1 || echo "Service status not available"'.</msg>
<msg time="2025-10-05T15:45:14.693824" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:14.694144" level="INFO">${output} =   UNIT LOAD ACTIVE SUB DESCRIPTION

0 loaded units listed.</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:14.630644" elapsed="0.063551"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:14.694327" elapsed="0.000082"/>
</return>
<msg time="2025-10-05T15:45:14.694766" level="INFO">${service_status} =   UNIT LOAD ACTIVE SUB DESCRIPTION

0 loaded units listed.</msg>
<var>${service_status}</var>
<arg>systemctl list-units --type=service --state=failed --no-pager 2&gt;&amp;1 || echo "Service status not available"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:14.630119" elapsed="0.064808"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.695697" level="INFO">${startup_analysis} = === Failed Services ===
  UNIT LOAD ACTIVE SUB DESCRIPTION

0 loaded units listed.

=== Service Startup/Shutdown Messages ===


=== Failed Service Units ===
  UNIT LOAD ACTIVE SUB DESCRIPTION

0 loade...</msg>
<var>${startup_analysis}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Failed Services ===</arg>
<arg>${failed_services}</arg>
<arg>=== Service Startup/Shutdown Messages ===</arg>
<arg>${service_startup}</arg>
<arg>=== Failed Service Units ===</arg>
<arg>${service_status}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:14.695331" elapsed="0.000400"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.696074" level="INFO">✅ Service startup validation completed</msg>
<arg>✅ Service startup validation completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.695892" elapsed="0.000322"/>
</kw>
<return>
<value>${startup_analysis}</value>
<status status="PASS" start="2025-10-05T15:45:14.696280" elapsed="0.000054"/>
</return>
<msg time="2025-10-05T15:45:14.696562" level="INFO">${service_startup} = === Failed Services ===
  UNIT LOAD ACTIVE SUB DESCRIPTION

0 loaded units listed.

=== Service Startup/Shutdown Messages ===


=== Failed Service Units ===
  UNIT LOAD ACTIVE SUB DESCRIPTION

0 loade...</msg>
<var>${service_startup}</var>
<doc>🔧 Validate service startup from logs</doc>
<status status="PASS" start="2025-10-05T15:45:14.405655" elapsed="0.290971"/>
</kw>
<kw name="Save Service Startup Analysis to File" owner="logs_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:45:14.698696" level="INFO">${timestamp} = 20251005_154514</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:45:14.698005" elapsed="0.000746"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.699478" level="INFO">${startup_file} = results/test22_event_logs/data/service_startup_20251005_154514.txt</msg>
<var>${startup_file}</var>
<arg>${DATA_DIR}/service_startup_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:45:14.699117" elapsed="0.000398"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.699996" level="INFO">${report} = =========================================
=== Service Startup Analysis ===
=========================================
Timestamp: 20251005_154514
Target Server: alhxvdvitap01 (172.30.16.186)

=== Failed...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== Service Startup Analysis ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>${startup_analysis}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:14.699657" elapsed="0.000368"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:45:14.777126" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/service_startup_20251005_154514.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/service_startup_20251005_154514.txt&lt;/a&gt;'.</msg>
<arg>${startup_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:45:14.700170" elapsed="0.077220"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.778389" level="INFO">📄 Service startup analysis saved to: results/test22_event_logs/data/service_startup_20251005_154514.txt</msg>
<arg>📄 Service startup analysis saved to: ${startup_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.777789" elapsed="0.000914"/>
</kw>
<return>
<value>${startup_file}</value>
<status status="PASS" start="2025-10-05T15:45:14.778941" elapsed="0.000104"/>
</return>
<msg time="2025-10-05T15:45:14.779419" level="INFO">${startup_file} = results/test22_event_logs/data/service_startup_20251005_154514.txt</msg>
<var>${startup_file}</var>
<arg>${service_startup}</arg>
<doc>💾 Save service startup analysis to file</doc>
<status status="PASS" start="2025-10-05T15:45:14.697268" elapsed="0.082211"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.780136" level="INFO">📄 Service startup analysis saved to: results/test22_event_logs/data/service_startup_20251005_154514.txt</msg>
<arg>📄 Service startup analysis saved to: ${startup_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.779764" elapsed="0.001795"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.782252" level="INFO">✅ Service startup validation completed</msg>
<arg>✅ Service startup validation completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.781935" elapsed="0.000555"/>
</kw>
<kw name="Log Test End" owner="logs_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.784257" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.783980" elapsed="0.000496"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.785188" level="INFO">🏁 Completed Test: Critical - Validate Service Startup Status | Status: PASS</msg>
<arg>🏁 Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.784792" elapsed="0.000588"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.786316" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.785641" elapsed="0.000953"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:45:14.783236" elapsed="0.003493"/>
</kw>
<doc>🔧 Verify all critical services started successfully</doc>
<tag>critical</tag>
<tag>services</tag>
<tag>startup</tag>
<tag>validation</tag>
<status status="PASS" start="2025-10-05T15:45:14.402574" elapsed="0.384294"/>
</test>
<test id="s1-t8" name="Critical - Check Log Rotation Configuration" line="137">
<kw name="Log Test Start" owner="logs_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.789750" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.789457" elapsed="0.000494"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.790543" level="INFO">🏁 Starting Test: Critical - Check Log Rotation Configuration</msg>
<arg>🏁 Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.790192" elapsed="0.000565"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.791293" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.791043" elapsed="0.000427"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:45:14.788874" elapsed="0.002720"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.792041" level="INFO">🔍 Checking log rotation configuration...</msg>
<arg>🔍 Checking log rotation configuration...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.791828" elapsed="0.000386"/>
</kw>
<kw name="Check Logrotate Configuration" owner="logs_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.793379" level="INFO">🔄 Checking logrotate configuration...</msg>
<arg>🔄 Checking logrotate configuration...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.793143" elapsed="0.000432"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:14.794720" level="INFO">Executing command 'cat /etc/logrotate.conf 2&gt;/dev/null || echo "No /etc/logrotate.conf"'.</msg>
<msg time="2025-10-05T15:45:14.819282" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:14.819564" level="INFO">${output} = # see "man logrotate" for details

# global options do not affect preceding include directives

# rotate log files weekly
weekly

# use the adm group by default, since this is the owning group
# of /v...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:14.794470" elapsed="0.025139"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:14.819727" elapsed="0.000071"/>
</return>
<msg time="2025-10-05T15:45:14.820022" level="INFO">${logrotate_conf} = # see "man logrotate" for details

# global options do not affect preceding include directives

# rotate log files weekly
weekly

# use the adm group by default, since this is the owning group
# of /v...</msg>
<var>${logrotate_conf}</var>
<arg>cat /etc/logrotate.conf 2&gt;/dev/null || echo "No /etc/logrotate.conf"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:14.793907" elapsed="0.026154"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:14.821070" level="INFO">Executing command 'ls -la /etc/logrotate.d/ 2&gt;/dev/null || echo "No /etc/logrotate.d/"'.</msg>
<msg time="2025-10-05T15:45:14.863381" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:14.863722" level="INFO">${output} = total 52
drwxr-xr-x  2 root root 4096 Sep 25 06:42 .
drwxr-xr-x 91 root root 4096 Oct  5 15:44 ..
-rw-r--r--  1 root root  120 Feb  4  2024 alternatives
-rw-r--r--  1 root root  126 Apr 22  2022 appor...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:14.820858" elapsed="0.042923"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:14.863921" elapsed="0.000143"/>
</return>
<msg time="2025-10-05T15:45:14.864433" level="INFO">${logrotate_d} = total 52
drwxr-xr-x  2 root root 4096 Sep 25 06:42 .
drwxr-xr-x 91 root root 4096 Oct  5 15:44 ..
-rw-r--r--  1 root root  120 Feb  4  2024 alternatives
-rw-r--r--  1 root root  126 Apr 22  2022 appor...</msg>
<var>${logrotate_d}</var>
<arg>ls -la /etc/logrotate.d/ 2&gt;/dev/null || echo "No /etc/logrotate.d/"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:14.820366" elapsed="0.044115"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:14.865683" level="INFO">Executing command 'cat /var/lib/logrotate/logrotate.status 2&gt;/dev/null || cat /var/lib/logrotate.status 2&gt;/dev/null || echo "No logrotate status file"'.</msg>
<msg time="2025-10-05T15:45:14.927198" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:14.927639" level="INFO">${output} = No logrotate status file</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:14.865427" elapsed="0.062289"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:14.928991" elapsed="0.000094"/>
</return>
<msg time="2025-10-05T15:45:14.929403" level="INFO">${logrotate_status} = No logrotate status file</msg>
<var>${logrotate_status}</var>
<arg>cat /var/lib/logrotate/logrotate.status 2&gt;/dev/null || cat /var/lib/logrotate.status 2&gt;/dev/null || echo "No logrotate status file"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:14.864901" elapsed="0.064548"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:14.930652" level="INFO">Executing command 'cat /etc/cron.daily/logrotate 2&gt;/dev/null || echo "No logrotate cron job"'.</msg>
<msg time="2025-10-05T15:45:14.971392" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:14.971599" level="INFO">${output} = #!/bin/sh

# skip in favour of systemd timer
if [ -d /run/systemd/system ]; then
    exit 0
fi

# this cronjob persists removals (but not purges)
if [ ! -x /usr/sbin/logrotate ]; then
    exit 0
fi

/...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:14.930389" elapsed="0.041241"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:14.971770" elapsed="0.000054"/>
</return>
<msg time="2025-10-05T15:45:14.972023" level="INFO">${logrotate_cron} = #!/bin/sh

# skip in favour of systemd timer
if [ -d /run/systemd/system ]; then
    exit 0
fi

# this cronjob persists removals (but not purges)
if [ ! -x /usr/sbin/logrotate ]; then
    exit 0
fi

/...</msg>
<var>${logrotate_cron}</var>
<arg>cat /etc/cron.daily/logrotate 2&gt;/dev/null || echo "No logrotate cron job"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:14.929836" elapsed="0.042221"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.972600" level="INFO">${logrotate_config} = === /etc/logrotate.conf ===
# see "man logrotate" for details

# global options do not affect preceding include directives

# rotate log files weekly
weekly

# use the adm group by default, since this...</msg>
<var>${logrotate_config}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== /etc/logrotate.conf ===</arg>
<arg>${logrotate_conf}</arg>
<arg>=== /etc/logrotate.d/ Directory ===</arg>
<arg>${logrotate_d}</arg>
<arg>=== Logrotate Status ===</arg>
<arg>${logrotate_status}</arg>
<arg>=== Logrotate Cron Job ===</arg>
<arg>${logrotate_cron}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:14.972250" elapsed="0.000377"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.973050" level="INFO">✅ Logrotate configuration collected</msg>
<arg>✅ Logrotate configuration collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.972796" elapsed="0.000377"/>
</kw>
<return>
<value>${logrotate_config}</value>
<status status="PASS" start="2025-10-05T15:45:14.973238" elapsed="0.000044"/>
</return>
<msg time="2025-10-05T15:45:14.973405" level="INFO">${logrotate_config} = === /etc/logrotate.conf ===
# see "man logrotate" for details

# global options do not affect preceding include directives

# rotate log files weekly
weekly

# use the adm group by default, since this...</msg>
<var>${logrotate_config}</var>
<doc>🔄 Check log rotation configuration</doc>
<status status="PASS" start="2025-10-05T15:45:14.792628" elapsed="0.180799"/>
</kw>
<kw name="Save Logrotate Config to File" owner="logs_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:45:14.974051" level="INFO">${timestamp} = 20251005_154514</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:45:14.973853" elapsed="0.000227"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.974330" level="INFO">${logrotate_file} = results/test22_event_logs/data/logrotate_config_20251005_154514.txt</msg>
<var>${logrotate_file}</var>
<arg>${DATA_DIR}/logrotate_config_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:45:14.974181" elapsed="0.000170"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.974992" level="INFO">${report} = =========================================
=== Log Rotation Configuration ===
=========================================
Timestamp: 20251005_154514
Target Server: alhxvdvitap01 (172.30.16.186)

=== /etc...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== Log Rotation Configuration ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>${logrotate_config}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:14.974434" elapsed="0.000597"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:45:14.993681" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/logrotate_config_20251005_154514.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/logrotate_config_20251005_154514.txt&lt;/a&gt;'.</msg>
<arg>${logrotate_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:45:14.975211" elapsed="0.018611"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.994353" level="INFO">📄 Logrotate configuration saved to: results/test22_event_logs/data/logrotate_config_20251005_154514.txt</msg>
<arg>📄 Logrotate configuration saved to: ${logrotate_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.994056" elapsed="0.000427"/>
</kw>
<return>
<value>${logrotate_file}</value>
<status status="PASS" start="2025-10-05T15:45:14.994619" elapsed="0.000049"/>
</return>
<msg time="2025-10-05T15:45:14.994931" level="INFO">${logrotate_file} = results/test22_event_logs/data/logrotate_config_20251005_154514.txt</msg>
<var>${logrotate_file}</var>
<arg>${logrotate_config}</arg>
<doc>💾 Save logrotate configuration to file</doc>
<status status="PASS" start="2025-10-05T15:45:14.973606" elapsed="0.021362"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.995517" level="INFO">📄 Logrotate configuration saved to: results/test22_event_logs/data/logrotate_config_20251005_154514.txt</msg>
<arg>📄 Logrotate configuration saved to: ${logrotate_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.995127" elapsed="0.000536"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.996051" level="INFO">✅ Log rotation configuration validated</msg>
<arg>✅ Log rotation configuration validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.995868" elapsed="0.000311"/>
</kw>
<kw name="Log Test End" owner="logs_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.997516" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.997300" elapsed="0.000328"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.998967" level="INFO">🏁 Completed Test: Critical - Check Log Rotation Configuration | Status: PASS</msg>
<arg>🏁 Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.998632" elapsed="0.000473"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.999481" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.999286" elapsed="0.000313"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:45:14.996578" elapsed="0.003116"/>
</kw>
<doc>🔄 Validate log rotation is properly configured</doc>
<tag>configuration</tag>
<tag>critical</tag>
<tag>logrotate</tag>
<tag>validation</tag>
<status status="PASS" start="2025-10-05T15:45:14.787839" elapsed="0.211927"/>
</test>
<test id="s1-t9" name="Normal - Analyze Repeating Error Patterns" line="152">
<kw name="Log Test Start" owner="logs_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:15.001629" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:15.001426" elapsed="0.000344"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:15.002201" level="INFO">🏁 Starting Test: Normal - Analyze Repeating Error Patterns</msg>
<arg>🏁 Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:15.001966" elapsed="0.000392"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:15.002719" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:15.002580" elapsed="0.000398"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:45:15.001004" elapsed="0.002081"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:15.003383" level="INFO">🔍 Analyzing repeating error patterns...</msg>
<arg>🔍 Analyzing repeating error patterns...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:15.003238" elapsed="0.000256"/>
</kw>
<kw name="Analyze Repeating Error Patterns" owner="logs_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:15.004265" level="INFO">🔁 Analyzing repeating error patterns...</msg>
<arg>🔁 Analyzing repeating error patterns...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:15.004112" elapsed="0.000264"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:15.005611" level="INFO">Executing command 'journalctl --no-pager -p err -n 500 | awk '{print $5" "$6" "$7}' | sort | uniq -c | sort -rn | head -20 2&gt;&amp;1 || echo "Pattern analysis not available"'.</msg>
<msg time="2025-10-05T15:45:15.083531" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:15.083783" level="INFO">${output} =     265 unknown: WSL (217)
     85 kernel: misc dxg:
     33 unknown: WSL (218)
     17 unknown: WSL (220)
     10 kernel: PCI: Fatal:
      5   
      4 unknown: WSL (7825
      2 unknown: WSL (219)
...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:15.005435" elapsed="0.078374"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:15.083887" elapsed="0.000048"/>
</return>
<msg time="2025-10-05T15:45:15.084082" level="INFO">${common_errors} =     265 unknown: WSL (217)
     85 kernel: misc dxg:
     33 unknown: WSL (218)
     17 unknown: WSL (220)
     10 kernel: PCI: Fatal:
      5   
      4 unknown: WSL (7825
      2 unknown: WSL (219)
...</msg>
<var>${common_errors}</var>
<arg>journalctl --no-pager -p err -n ${LOG_LINES_TO_COLLECT} | awk '{print $5" "$6" "$7}' | sort | uniq -c | sort -rn | head -20 2&gt;&amp;1 || echo "Pattern analysis not available"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:15.004733" elapsed="0.079373"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:15.084817" level="INFO">Executing command 'grep -i "error|fail" /var/log/messages 2&gt;/dev/null | awk '{print $5" "$6" "$7}' | sort | uniq -c | sort -rn | head -20 || echo "No messages file for pattern analysis"'.</msg>
<msg time="2025-10-05T15:45:15.127418" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:15.127723" level="INFO">${output} = </msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:15.084637" elapsed="0.043119"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:15.127863" elapsed="0.000081"/>
</return>
<msg time="2025-10-05T15:45:15.128130" level="INFO">${repeated_msgs} = </msg>
<var>${repeated_msgs}</var>
<arg>grep -i "error\|fail" /var/log/messages 2&gt;/dev/null | awk '{print $5" "$6" "$7}' | sort | uniq -c | sort -rn | head -20 || echo "No messages file for pattern analysis"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:15.084313" elapsed="0.043843"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:15.128902" level="INFO">Executing command 'journalctl --no-pager --since "24 hours ago" -p err 2&gt;&amp;1 | wc -l || echo "0"'.</msg>
<msg time="2025-10-05T15:45:15.214939" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:15.215236" level="INFO">${output} = 85</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:15.128767" elapsed="0.086508"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:15.215406" elapsed="0.000071"/>
</return>
<msg time="2025-10-05T15:45:15.215770" level="INFO">${frequency} = 85</msg>
<var>${frequency}</var>
<arg>journalctl --no-pager --since "24 hours ago" -p err 2&gt;&amp;1 | wc -l || echo "0"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:15.128395" elapsed="0.087417"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:15.216553" level="INFO">${pattern_analysis} = === Most Common Error Patterns (journalctl) ===
    265 unknown: WSL (217)
     85 kernel: misc dxg:
     33 unknown: WSL (218)
     17 unknown: WSL (220)
     10 kernel: PCI: Fatal:
      5   
      ...</msg>
<var>${pattern_analysis}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Most Common Error Patterns (journalctl) ===</arg>
<arg>${common_errors}</arg>
<arg>=== Repeated Error Messages (/var/log/messages) ===</arg>
<arg>${repeated_msgs}</arg>
<arg>=== Error Frequency (Last 24 Hours) ===</arg>
<arg>${frequency} errors in last 24 hours</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:15.216077" elapsed="0.000512"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:15.217654" level="INFO">✅ Pattern analysis completed</msg>
<arg>✅ Pattern analysis completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:15.217460" elapsed="0.000315"/>
</kw>
<return>
<value>${pattern_analysis}</value>
<status status="PASS" start="2025-10-05T15:45:15.217846" elapsed="0.000051"/>
</return>
<msg time="2025-10-05T15:45:15.218052" level="INFO">${pattern_analysis} = === Most Common Error Patterns (journalctl) ===
    265 unknown: WSL (217)
     85 kernel: misc dxg:
     33 unknown: WSL (218)
     17 unknown: WSL (220)
     10 kernel: PCI: Fatal:
      5   
      ...</msg>
<var>${pattern_analysis}</var>
<doc>🔁 Search for repeating error patterns</doc>
<status status="PASS" start="2025-10-05T15:45:15.003792" elapsed="0.214285"/>
</kw>
<kw name="Save Pattern Analysis to File" owner="logs_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:45:15.219061" level="INFO">${timestamp} = 20251005_154515</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:45:15.218749" elapsed="0.000337"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:15.219382" level="INFO">${pattern_file} = results/test22_event_logs/data/error_patterns_20251005_154515.txt</msg>
<var>${pattern_file}</var>
<arg>${DATA_DIR}/error_patterns_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:45:15.219191" elapsed="0.000216"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:15.219762" level="INFO">${report} = =========================================
=== Repeating Error Pattern Analysis ===
=========================================
Timestamp: 20251005_154515
Target Server: alhxvdvitap01 (172.30.16.186)

==...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== Repeating Error Pattern Analysis ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>${pattern_analysis}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:15.219504" elapsed="0.000281"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:45:15.225380" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/error_patterns_20251005_154515.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/error_patterns_20251005_154515.txt&lt;/a&gt;'.</msg>
<arg>${pattern_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:45:15.219892" elapsed="0.005578"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:15.225810" level="INFO">📄 Pattern analysis saved to: results/test22_event_logs/data/error_patterns_20251005_154515.txt</msg>
<arg>📄 Pattern analysis saved to: ${pattern_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:15.225613" elapsed="0.000315"/>
</kw>
<return>
<value>${pattern_file}</value>
<status status="PASS" start="2025-10-05T15:45:15.226009" elapsed="0.000053"/>
</return>
<msg time="2025-10-05T15:45:15.226194" level="INFO">${pattern_file} = results/test22_event_logs/data/error_patterns_20251005_154515.txt</msg>
<var>${pattern_file}</var>
<arg>${pattern_analysis}</arg>
<doc>💾 Save pattern analysis to file</doc>
<status status="PASS" start="2025-10-05T15:45:15.218349" elapsed="0.007869"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:15.226512" level="INFO">📄 Pattern analysis saved to: results/test22_event_logs/data/error_patterns_20251005_154515.txt</msg>
<arg>📄 Pattern analysis saved to: ${pattern_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:15.226332" elapsed="0.000302"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:15.227015" level="INFO">✅ Repeating error pattern analysis completed</msg>
<arg>✅ Repeating error pattern analysis completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:15.226780" elapsed="0.000396"/>
</kw>
<kw name="Log Test End" owner="logs_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:15.228716" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:15.228538" elapsed="0.000513"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:15.230131" level="INFO">🏁 Completed Test: Normal - Analyze Repeating Error Patterns | Status: PASS</msg>
<arg>🏁 Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:15.229390" elapsed="0.001199"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:15.231207" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:15.230720" elapsed="0.000595"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:45:15.227510" elapsed="0.003894"/>
</kw>
<doc>🔁 Search for repeating error patterns that might indicate issues</doc>
<tag>analysis</tag>
<tag>errors</tag>
<tag>normal</tag>
<tag>patterns</tag>
<status status="PASS" start="2025-10-05T15:45:15.000151" elapsed="0.231315"/>
</test>
<test id="s1-t10" name="Normal - Check Authentication Logs" line="167">
<kw name="Log Test Start" owner="logs_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:15.232885" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:15.232744" elapsed="0.000234"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:15.233407" level="INFO">🏁 Starting Test: Normal - Check Authentication Logs</msg>
<arg>🏁 Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:15.233159" elapsed="0.000359"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:15.233851" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:15.233678" elapsed="0.000294"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:45:15.232405" elapsed="0.002485"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:15.235316" level="INFO">🔍 Checking authentication logs...</msg>
<arg>🔍 Checking authentication logs...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:15.235125" elapsed="0.000313"/>
</kw>
<kw name="Collect Authentication Logs" owner="logs_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:15.236544" level="INFO">🔐 Collecting authentication logs...</msg>
<arg>🔐 Collecting authentication logs...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:15.236420" elapsed="0.000232"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:15.237370" level="INFO">Executing command 'tail -500 /var/log/secure 2&gt;/dev/null || tail -500 /var/log/auth.log 2&gt;/dev/null || echo "No auth logs"'.</msg>
<msg time="2025-10-05T15:45:15.263520" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:15.263716" level="INFO">${output} = 2025-09-28T08:48:24.976178-05:00 DESKTOP-933PGUE systemd-logind[174]: New seat seat0.
2025-09-28T08:48:26.751638-05:00 DESKTOP-933PGUE login[300]: PAM unable to dlopen(pam_lastlog.so): /usr/lib/securi...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:15.237247" elapsed="0.026495"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:15.263826" elapsed="0.000056"/>
</return>
<msg time="2025-10-05T15:45:15.264034" level="INFO">${auth_secure} = 2025-09-28T08:48:24.976178-05:00 DESKTOP-933PGUE systemd-logind[174]: New seat seat0.
2025-09-28T08:48:26.751638-05:00 DESKTOP-933PGUE login[300]: PAM unable to dlopen(pam_lastlog.so): /usr/lib/securi...</msg>
<var>${auth_secure}</var>
<arg>tail -${LOG_LINES_TO_COLLECT} /var/log/secure 2&gt;/dev/null || tail -${LOG_LINES_TO_COLLECT} /var/log/auth.log 2&gt;/dev/null || echo "No auth logs"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:15.236845" elapsed="0.027214"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:15.264722" level="INFO">Executing command 'journalctl --no-pager | grep -i "failed password|authentication failure" | tail -50 2&gt;&amp;1 || echo "No failed login entries"'.</msg>
<msg time="2025-10-05T15:45:21.215788" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:21.216078" level="INFO">${output} = </msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:15.264589" elapsed="5.951525"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:21.216229" elapsed="0.000069"/>
</return>
<msg time="2025-10-05T15:45:21.216494" level="INFO">${failed_logins} = </msg>
<var>${failed_logins}</var>
<arg>journalctl --no-pager | grep -i "failed password\|authentication failure" | tail -50 2&gt;&amp;1 || echo "No failed login entries"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:15.264279" elapsed="5.952246"/>
</kw>
<kw name="${successful_logins}= Execute Command">
<msg time="2025-10-05T15:45:21.219719" level="FAIL">No keyword with name '${successful_logins}= Execute Command' found.</msg>
<arg>journalctl --no-pager | grep -i "accepted password\|session opened" | tail -50 2&gt;&amp;1 || echo "No successful login entries"</arg>
<status status="FAIL" start="2025-10-05T15:45:21.219611" elapsed="0.000188">No keyword with name '${successful_logins}= Execute Command' found.</status>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<var>${lastlog}</var>
<arg>lastlog 2&gt;&amp;1 | head -30 || echo "lastlog not available"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="NOT RUN" start="2025-10-05T15:45:21.220148" elapsed="0.000040"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<var>${last}</var>
<arg>last | head -30 2&gt;&amp;1 || echo "last not available"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="NOT RUN" start="2025-10-05T15:45:21.220371" elapsed="0.000029"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<var>${auth_logs}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Authentication Logs (secure/auth.log) ===</arg>
<arg>${auth_secure}</arg>
<arg>=== Failed Login Attempts ===</arg>
<arg>${failed_logins}</arg>
<arg>=== Successful Logins ===</arg>
<arg>${successful_logins}</arg>
<arg>=== Last Login (lastlog) ===</arg>
<arg>${lastlog}</arg>
<arg>=== Login History (last) ===</arg>
<arg>${last}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" start="2025-10-05T15:45:21.220563" elapsed="0.000027"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>✅ Authentication logs collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:45:21.220763" elapsed="0.000024"/>
</kw>
<return>
<value>${auth_logs}</value>
<status status="NOT RUN" start="2025-10-05T15:45:21.220844" elapsed="0.000026"/>
</return>
<var>${auth_logs}</var>
<doc>🔐 Collect authentication logs</doc>
<status status="FAIL" start="2025-10-05T15:45:15.235774" elapsed="5.985252">No keyword with name '${successful_logins}= Execute Command' found.</status>
</kw>
<kw name="Save Authentication Logs to File" owner="logs_keywords">
<var>${auth_file}</var>
<arg>${auth_logs}</arg>
<doc>💾 Save authentication logs to file</doc>
<status status="NOT RUN" start="2025-10-05T15:45:21.221265" elapsed="0.000030"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📄 Authentication logs saved to: ${auth_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:45:21.221428" elapsed="0.000022"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>✅ Authentication logs collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:45:21.221570" elapsed="0.000020"/>
</kw>
<kw name="Log Test End" owner="logs_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:21.222780" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:21.222533" elapsed="0.000403"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:21.223358" level="INFO">🏁 Completed Test: Normal - Check Authentication Logs | Status: FAIL</msg>
<arg>🏁 Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:21.223087" elapsed="0.000442"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:21.223920" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:21.223738" elapsed="0.000293"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:45:21.221960" elapsed="0.002791"/>
</kw>
<doc>🔐 Review authentication logs for failed login attempts</doc>
<tag>authentication</tag>
<tag>logs</tag>
<tag>normal</tag>
<tag>security</tag>
<status status="FAIL" start="2025-10-05T15:45:15.231831" elapsed="5.992982">No keyword with name '${successful_logins}= Execute Command' found.</status>
</test>
<test id="s1-t11" name="Normal - Check Kernel Messages for Errors" line="182">
<kw name="Log Test Start" owner="logs_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:21.226228" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:21.226072" elapsed="0.000328"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:21.227079" level="INFO">🏁 Starting Test: Normal - Check Kernel Messages for Errors</msg>
<arg>🏁 Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:21.226611" elapsed="0.000904"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:21.227759" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:21.227640" elapsed="0.000205"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:45:21.225760" elapsed="0.002140"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:21.228092" level="INFO">🔍 Analyzing kernel messages for errors...</msg>
<arg>🔍 Analyzing kernel messages for errors...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:21.227997" elapsed="0.000171"/>
</kw>
<kw name="Search Kernel Errors" owner="logs_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:21.228629" level="INFO">🖥️ Searching kernel errors...</msg>
<arg>🖥️ Searching kernel errors...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:21.228535" elapsed="0.000171"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:21.229155" level="INFO">Executing command 'dmesg | grep -iE "error|fail|bug|oops|panic|segfault" 2&gt;&amp;1 || echo "No kernel errors found"'.</msg>
<msg time="2025-10-05T15:45:21.263244" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:21.263530" level="INFO">${output} = [    0.000000] Command line: initrd=\initrd.img WSL_ROOT_INIT=1 panic=-1 nr_cpus=8 hv_utils.timesync_implicit=1 console=hvc0 debug pty.legacy_count=0 WSL_ENABLE_CRASH_DUMP=1
[    0.066872] Kernel comm...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:21.229053" elapsed="0.034513"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:21.263678" elapsed="0.000070"/>
</return>
<msg time="2025-10-05T15:45:21.263940" level="INFO">${kernel_errors} = [    0.000000] Command line: initrd=\initrd.img WSL_ROOT_INIT=1 panic=-1 nr_cpus=8 hv_utils.timesync_implicit=1 console=hvc0 debug pty.legacy_count=0 WSL_ENABLE_CRASH_DUMP=1
[    0.066872] Kernel comm...</msg>
<var>${kernel_errors}</var>
<arg>dmesg | grep -iE "error|fail|bug|oops|panic|segfault" 2&gt;&amp;1 || echo "No kernel errors found"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:21.228830" elapsed="0.035176"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:21.265054" level="INFO">Executing command 'journalctl --no-pager -k | grep -iE "hardware|disk|memory|i/o error" | tail -50 2&gt;&amp;1 || echo "No hardware errors"'.</msg>
<msg time="2025-10-05T15:45:21.436865" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:21.437177" level="INFO">${output} = Oct 05 12:06:43 DESKTOP-933PGUE kernel: x86/mm: Memory block size: 128MB
Oct 05 12:06:43 DESKTOP-933PGUE kernel: VFS: Disk quotas dquot_6.6.0
Oct 05 12:06:43 DESKTOP-933PGUE kernel: Freeing initrd mem...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:21.264852" elapsed="0.172414"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:21.437393" elapsed="0.000614"/>
</return>
<msg time="2025-10-05T15:45:21.438246" level="INFO">${hardware_errors} = Oct 05 12:06:43 DESKTOP-933PGUE kernel: x86/mm: Memory block size: 128MB
Oct 05 12:06:43 DESKTOP-933PGUE kernel: VFS: Disk quotas dquot_6.6.0
Oct 05 12:06:43 DESKTOP-933PGUE kernel: Freeing initrd mem...</msg>
<var>${hardware_errors}</var>
<arg>journalctl --no-pager -k | grep -iE "hardware|disk|memory|i/o error" | tail -50 2&gt;&amp;1 || echo "No hardware errors"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:21.264362" elapsed="0.173916"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:21.439306" level="INFO">Executing command 'journalctl --no-pager | grep -i "out of memory|oom" | tail -30 2&gt;&amp;1 || echo "No OOM errors"'.</msg>
<msg time="2025-10-05T15:45:27.176038" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:27.176542" level="INFO">${output} = </msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:21.439120" elapsed="5.737480"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:27.176833" elapsed="0.001259"/>
</return>
<msg time="2025-10-05T15:45:27.178370" level="INFO">${oom_errors} = </msg>
<var>${oom_errors}</var>
<arg>journalctl --no-pager | grep -i "out of memory\|oom" | tail -30 2&gt;&amp;1 || echo "No OOM errors"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:21.438629" elapsed="5.739792"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.180094" level="INFO">${kernel_error_report} = === Kernel Errors (dmesg) ===
[    0.000000] Command line: initrd=\initrd.img WSL_ROOT_INIT=1 panic=-1 nr_cpus=8 hv_utils.timesync_implicit=1 console=hvc0 debug pty.legacy_count=0 WSL_ENABLE_CRASH_DUM...</msg>
<var>${kernel_error_report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Kernel Errors (dmesg) ===</arg>
<arg>${kernel_errors}</arg>
<arg>=== Hardware Related Errors ===</arg>
<arg>${hardware_errors}</arg>
<arg>=== Out of Memory Errors ===</arg>
<arg>${oom_errors}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:27.179287" elapsed="0.000857"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.180628" level="INFO">✅ Kernel error search completed</msg>
<arg>✅ Kernel error search completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.180374" elapsed="0.000412"/>
</kw>
<return>
<value>${kernel_error_report}</value>
<status status="PASS" start="2025-10-05T15:45:27.180843" elapsed="0.000038"/>
</return>
<msg time="2025-10-05T15:45:27.182024" level="INFO">${kernel_errors} = === Kernel Errors (dmesg) ===
[    0.000000] Command line: initrd=\initrd.img WSL_ROOT_INIT=1 panic=-1 nr_cpus=8 hv_utils.timesync_implicit=1 console=hvc0 debug pty.legacy_count=0 WSL_ENABLE_CRASH_DUM...</msg>
<var>${kernel_errors}</var>
<doc>🖥️ Search for kernel errors</doc>
<status status="PASS" start="2025-10-05T15:45:21.228319" elapsed="5.953742"/>
</kw>
<kw name="Save Kernel Errors to File" owner="logs_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:45:27.183130" level="INFO">${timestamp} = 20251005_154527</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:45:27.182824" elapsed="0.000333"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.183441" level="INFO">${kernel_file} = results/test22_event_logs/data/kernel_errors_20251005_154527.txt</msg>
<var>${kernel_file}</var>
<arg>${DATA_DIR}/kernel_errors_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:45:27.183273" elapsed="0.000189"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.183783" level="INFO">${report} = =========================================
=== Kernel Error Analysis ===
=========================================
Timestamp: 20251005_154527
Target Server: alhxvdvitap01 (172.30.16.186)

=== Kernel Er...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== Kernel Error Analysis ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>${kernel_errors}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:27.183547" elapsed="0.000257"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:45:27.189623" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/kernel_errors_20251005_154527.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/kernel_errors_20251005_154527.txt&lt;/a&gt;'.</msg>
<arg>${kernel_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:45:27.183985" elapsed="0.005737"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.190109" level="INFO">📄 Kernel errors saved to: results/test22_event_logs/data/kernel_errors_20251005_154527.txt</msg>
<arg>📄 Kernel errors saved to: ${kernel_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.189878" elapsed="0.000351"/>
</kw>
<return>
<value>${kernel_file}</value>
<status status="PASS" start="2025-10-05T15:45:27.190307" elapsed="0.000089"/>
</return>
<msg time="2025-10-05T15:45:27.190658" level="INFO">${kernel_file} = results/test22_event_logs/data/kernel_errors_20251005_154527.txt</msg>
<var>${kernel_file}</var>
<arg>${kernel_errors}</arg>
<doc>💾 Save kernel errors to file</doc>
<status status="PASS" start="2025-10-05T15:45:27.182358" elapsed="0.008327"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.191120" level="INFO">📄 Kernel errors saved to: results/test22_event_logs/data/kernel_errors_20251005_154527.txt</msg>
<arg>📄 Kernel errors saved to: ${kernel_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.190881" elapsed="0.000351"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.191693" level="INFO">✅ Kernel error analysis completed</msg>
<arg>✅ Kernel error analysis completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.191451" elapsed="0.000357"/>
</kw>
<kw name="Log Test End" owner="logs_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.192881" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.192680" elapsed="0.000319"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.193400" level="INFO">🏁 Completed Test: Normal - Check Kernel Messages for Errors | Status: PASS</msg>
<arg>🏁 Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.193160" elapsed="0.000370"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.193893" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.193698" elapsed="0.000316"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:45:27.192137" elapsed="0.001971"/>
</kw>
<doc>🖥️ Analyze kernel messages for hardware or driver errors</doc>
<tag>errors</tag>
<tag>hardware</tag>
<tag>kernel</tag>
<tag>normal</tag>
<status status="PASS" start="2025-10-05T15:45:21.225063" elapsed="5.969112"/>
</test>
<test id="s1-t12" name="Normal - Validate Disk Space for Logs" line="197">
<kw name="Log Test Start" owner="logs_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.196194" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.195955" elapsed="0.000369"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.196798" level="INFO">🏁 Starting Test: Normal - Validate Disk Space for Logs</msg>
<arg>🏁 Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.196490" elapsed="0.000454"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.197401" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.197129" elapsed="0.000414"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:45:27.195555" elapsed="0.002094"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.197977" level="INFO">🔍 Validating disk space for logs...</msg>
<arg>🔍 Validating disk space for logs...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.197793" elapsed="0.000293"/>
</kw>
<kw name="Check Log Disk Space" owner="logs_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.199020" level="INFO">💾 Checking log disk space...</msg>
<arg>💾 Checking log disk space...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.198800" elapsed="0.000343"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:27.201109" level="INFO">Executing command 'df -h /var/log 2&gt;&amp;1 || echo "df not available"'.</msg>
<msg time="2025-10-05T15:45:27.243450" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:27.243754" level="INFO">${output} = Filesystem      Size  Used Avail Use% Mounted on
/dev/sdd       1007G  7.5G  949G   1% /</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:27.200974" elapsed="0.042822"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:27.243890" elapsed="0.000059"/>
</return>
<msg time="2025-10-05T15:45:27.244124" level="INFO">${df_varlog} = Filesystem      Size  Used Avail Use% Mounted on
/dev/sdd       1007G  7.5G  949G   1% /</msg>
<var>${df_varlog}</var>
<arg>df -h /var/log 2&gt;&amp;1 || echo "df not available"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:27.200318" elapsed="0.043838"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:27.244961" level="INFO">Executing command 'du -sh /var/log/* 2&gt;/dev/null | sort -rh | head -20 || echo "du not available"'.</msg>
<msg time="2025-10-05T15:45:27.305997" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:27.306272" level="INFO">${output} = 265M	/var/log/journal
1.9M	/var/log/syslog.1
1.8M	/var/log/syslog
692K	/var/log/dpkg.log
268K	/var/log/apt
220K	/var/log/kern.log
192K	/var/log/syslog.4.gz
156K	/var/log/syslog.2.gz
136K	/var/log/sysl...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:27.244776" elapsed="0.061535"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:27.306393" elapsed="0.000092"/>
</return>
<msg time="2025-10-05T15:45:27.306690" level="INFO">${du_varlog} = 265M	/var/log/journal
1.9M	/var/log/syslog.1
1.8M	/var/log/syslog
692K	/var/log/dpkg.log
268K	/var/log/apt
220K	/var/log/kern.log
192K	/var/log/syslog.4.gz
156K	/var/log/syslog.2.gz
136K	/var/log/sysl...</msg>
<var>${du_varlog}</var>
<arg>du -sh /var/log/* 2&gt;/dev/null | sort -rh | head -20 || echo "du not available"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:27.244385" elapsed="0.062332"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:27.307756" level="INFO">Executing command 'df -i /var/log 2&gt;&amp;1 || echo "inode check not available"'.</msg>
<msg time="2025-10-05T15:45:27.356082" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:27.356385" level="INFO">${output} = Filesystem       Inodes  IUsed    IFree IUse% Mounted on
/dev/sdd       67108864 152240 66956624    1% /</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:27.307588" elapsed="0.048860"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:27.356550" elapsed="0.000062"/>
</return>
<msg time="2025-10-05T15:45:27.356792" level="INFO">${inodes} = Filesystem       Inodes  IUsed    IFree IUse% Mounted on
/dev/sdd       67108864 152240 66956624    1% /</msg>
<var>${inodes}</var>
<arg>df -i /var/log 2&gt;&amp;1 || echo "inode check not available"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:27.307152" elapsed="0.049669"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.357861" level="INFO">${disk_space} = === Disk Space for /var/log ===
Filesystem      Size  Used Avail Use% Mounted on
/dev/sdd       1007G  7.5G  949G   1% /

=== Largest Log Files/Directories ===
265M	/var/log/journal
1.9M	/var/log/sysl...</msg>
<var>${disk_space}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Disk Space for /var/log ===</arg>
<arg>${df_varlog}</arg>
<arg>=== Largest Log Files/Directories ===</arg>
<arg>${du_varlog}</arg>
<arg>=== Inode Usage ===</arg>
<arg>${inodes}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:27.357155" elapsed="0.000762"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.358632" level="INFO">💾 Disk space: === Disk Space for /var/log ===
Filesystem      Size  Used Avail Use% Mounted on
/dev/sdd       1007G  7.5G  949G   1% /

=== Largest Log Files/Directories ===
265M	/var/log/journal
1.9M	/var/log/syslog.1
1.8M	/var/log/syslog
692K	/var/log/dpkg.log
268K	/var/log/apt
220K	/var/log/kern.log
192K	/var/log/syslog.4.gz
156K	/var/log/syslog.2.gz
136K	/var/log/syslog.3.gz
116K	/var/log/bootstrap.log
72K	/var/log/dmesg
64K	/var/log/auth.log
60K	/var/log/wtmp
56K	/var/log/unattended-upgrades
44K	/var/log/kern.log.4.gz
36K	/var/log/dmesg.0
32K	/var/log/alternatives.log
24K	/var/log/dmesg.1.gz
12K	/var/log/kern.log.2.gz
12K	/var/log/dmesg.4.gz

=== Inode Usage ===
Filesystem       Inodes  IUsed    IFree IUse% Mounted on
/dev/sdd       67108864 152240 66956624    1% /</msg>
<arg>💾 Disk space: ${disk_space}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.358196" elapsed="0.000662"/>
</kw>
<return>
<value>${disk_space}</value>
<status status="PASS" start="2025-10-05T15:45:27.358959" elapsed="0.000072"/>
</return>
<msg time="2025-10-05T15:45:27.359335" level="INFO">${disk_space} = === Disk Space for /var/log ===
Filesystem      Size  Used Avail Use% Mounted on
/dev/sdd       1007G  7.5G  949G   1% /

=== Largest Log Files/Directories ===
265M	/var/log/journal
1.9M	/var/log/sysl...</msg>
<var>${disk_space}</var>
<doc>💾 Check disk space for /var/log</doc>
<status status="PASS" start="2025-10-05T15:45:27.198357" elapsed="0.161071"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.359953" level="INFO">💾 Log partition disk space: === Disk Space for /var/log ===
Filesystem      Size  Used Avail Use% Mounted on
/dev/sdd       1007G  7.5G  949G   1% /

=== Largest Log Files/Directories ===
265M	/var/log/journal
1.9M	/var/log/syslog.1
1.8M	/var/log/syslog
692K	/var/log/dpkg.log
268K	/var/log/apt
220K	/var/log/kern.log
192K	/var/log/syslog.4.gz
156K	/var/log/syslog.2.gz
136K	/var/log/syslog.3.gz
116K	/var/log/bootstrap.log
72K	/var/log/dmesg
64K	/var/log/auth.log
60K	/var/log/wtmp
56K	/var/log/unattended-upgrades
44K	/var/log/kern.log.4.gz
36K	/var/log/dmesg.0
32K	/var/log/alternatives.log
24K	/var/log/dmesg.1.gz
12K	/var/log/kern.log.2.gz
12K	/var/log/dmesg.4.gz

=== Inode Usage ===
Filesystem       Inodes  IUsed    IFree IUse% Mounted on
/dev/sdd       67108864 152240 66956624    1% /</msg>
<arg>💾 Log partition disk space: ${disk_space}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.359661" elapsed="0.000450"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.360465" level="INFO">✅ Log disk space validation completed</msg>
<arg>✅ Log disk space validation completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.360304" elapsed="0.000296"/>
</kw>
<kw name="Log Test End" owner="logs_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.362010" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.361770" elapsed="0.001633"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.364266" level="INFO">🏁 Completed Test: Normal - Validate Disk Space for Logs | Status: PASS</msg>
<arg>🏁 Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.363738" elapsed="0.000983"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.365247" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.364968" elapsed="0.000431"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:45:27.361015" elapsed="0.004482"/>
</kw>
<doc>💾 Check if sufficient disk space is available for logging</doc>
<tag>capacity</tag>
<tag>disk_space</tag>
<tag>logs</tag>
<tag>normal</tag>
<status status="PASS" start="2025-10-05T15:45:27.194649" elapsed="0.170917"/>
</test>
<test id="s1-t13" name="Normal - Check Log File Permissions" line="209">
<kw name="Log Test Start" owner="logs_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.367495" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.367338" elapsed="0.000336"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.367998" level="INFO">🏁 Starting Test: Normal - Check Log File Permissions</msg>
<arg>🏁 Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.367821" elapsed="0.000286"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.368370" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.368247" elapsed="0.000224"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:45:27.366963" elapsed="0.001628"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.369232" level="INFO">🔍 Checking log file permissions...</msg>
<arg>🔍 Checking log file permissions...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.368758" elapsed="0.000603"/>
</kw>
<kw name="Check Log File Permissions" owner="logs_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.370046" level="INFO">🔒 Checking log file permissions...</msg>
<arg>🔒 Checking log file permissions...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.369913" elapsed="0.000261"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:27.371133" level="INFO">Executing command 'ls -la /var/log/*.log /var/log/messages /var/log/secure /var/log/syslog 2&gt;/dev/null || echo "Permission check not available"'.</msg>
<msg time="2025-10-05T15:45:27.418904" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:27.419463" level="INFO">${output} = -rw-r--r-- 1 root   root   32433 Sep 28 10:17 /var/log/alternatives.log
-rw-r----- 1 syslog adm    57781 Oct  5 15:45 /var/log/auth.log
-rw-r--r-- 1 root   root  118497 Aug  5 11:55 /var/log/bootstrap...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:27.370817" elapsed="0.048738"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:27.419669" elapsed="0.000098"/>
</return>
<msg time="2025-10-05T15:45:27.420042" level="INFO">${log_perms} = -rw-r--r-- 1 root   root   32433 Sep 28 10:17 /var/log/alternatives.log
-rw-r----- 1 syslog adm    57781 Oct  5 15:45 /var/log/auth.log
-rw-r--r-- 1 root   root  118497 Aug  5 11:55 /var/log/bootstrap...</msg>
<var>${log_perms}</var>
<arg>ls -la /var/log/*.log /var/log/messages /var/log/secure /var/log/syslog 2&gt;/dev/null || echo "Permission check not available"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:27.370348" elapsed="0.049729"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:27.421870" level="INFO">Executing command 'stat -c '%n %U:%G %a' /var/log/*.log /var/log/messages /var/log/secure 2&gt;/dev/null || echo "stat not available"'.</msg>
<msg time="2025-10-05T15:45:27.474632" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:27.475058" level="INFO">${output} = /var/log/alternatives.log root:root 644
/var/log/auth.log syslog:adm 640
/var/log/bootstrap.log root:root 644
/var/log/dpkg.log root:root 644
/var/log/fontconfig.log root:root 644
/var/log/kern.log sy...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:27.421412" elapsed="0.053711"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:27.475256" elapsed="0.000079"/>
</return>
<msg time="2025-10-05T15:45:27.475706" level="INFO">${log_owners} = /var/log/alternatives.log root:root 644
/var/log/auth.log syslog:adm 640
/var/log/bootstrap.log root:root 644
/var/log/dpkg.log root:root 644
/var/log/fontconfig.log root:root 644
/var/log/kern.log sy...</msg>
<var>${log_owners}</var>
<arg>stat -c '%n %U:%G %a' /var/log/*.log /var/log/messages /var/log/secure 2&gt;/dev/null || echo "stat not available"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:27.420378" elapsed="0.055381"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.476592" level="INFO">${permissions} = === Log File Permissions (ls -la) ===
-rw-r--r-- 1 root   root   32433 Sep 28 10:17 /var/log/alternatives.log
-rw-r----- 1 syslog adm    57781 Oct  5 15:45 /var/log/auth.log
-rw-r--r-- 1 root   root  ...</msg>
<var>${permissions}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Log File Permissions (ls -la) ===</arg>
<arg>${log_perms}</arg>
<arg>=== Log File Owners and Modes (stat) ===</arg>
<arg>${log_owners}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:27.476093" elapsed="0.000568"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.477255" level="INFO">✅ Log file permissions collected</msg>
<arg>✅ Log file permissions collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.476906" elapsed="0.000630"/>
</kw>
<return>
<value>${permissions}</value>
<status status="PASS" start="2025-10-05T15:45:27.477685" elapsed="0.000139"/>
</return>
<msg time="2025-10-05T15:45:27.478244" level="INFO">${log_permissions} = === Log File Permissions (ls -la) ===
-rw-r--r-- 1 root   root   32433 Sep 28 10:17 /var/log/alternatives.log
-rw-r----- 1 syslog adm    57781 Oct  5 15:45 /var/log/auth.log
-rw-r--r-- 1 root   root  ...</msg>
<var>${log_permissions}</var>
<doc>🔒 Check log file permissions</doc>
<status status="PASS" start="2025-10-05T15:45:27.369643" elapsed="0.110749"/>
</kw>
<kw name="Save Log Permissions to File" owner="logs_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:45:27.482332" level="INFO">${timestamp} = 20251005_154527</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:45:27.481935" elapsed="0.000449"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.483375" level="INFO">${perm_file} = results/test22_event_logs/data/log_permissions_20251005_154527.txt</msg>
<var>${perm_file}</var>
<arg>${DATA_DIR}/log_permissions_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:45:27.483004" elapsed="0.000417"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.487088" level="INFO">${report} = =========================================
=== Log File Permissions ===
=========================================
Timestamp: 20251005_154527
Target Server: alhxvdvitap01 (172.30.16.186)

=== Log File P...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== Log File Permissions ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>${permissions}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:27.484249" elapsed="0.003015"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:45:27.498878" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/log_permissions_20251005_154527.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/log_permissions_20251005_154527.txt&lt;/a&gt;'.</msg>
<arg>${perm_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:45:27.487651" elapsed="0.011476"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.499915" level="INFO">📄 Log permissions saved to: results/test22_event_logs/data/log_permissions_20251005_154527.txt</msg>
<arg>📄 Log permissions saved to: ${perm_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.499485" elapsed="0.000605"/>
</kw>
<return>
<value>${perm_file}</value>
<status status="PASS" start="2025-10-05T15:45:27.500219" elapsed="0.000081"/>
</return>
<msg time="2025-10-05T15:45:27.500562" level="INFO">${perm_file} = results/test22_event_logs/data/log_permissions_20251005_154527.txt</msg>
<var>${perm_file}</var>
<arg>${log_permissions}</arg>
<doc>💾 Save log permissions to file</doc>
<status status="PASS" start="2025-10-05T15:45:27.480974" elapsed="0.019638"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.501228" level="INFO">📄 Log permissions saved to: results/test22_event_logs/data/log_permissions_20251005_154527.txt</msg>
<arg>📄 Log permissions saved to: ${perm_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.500895" elapsed="0.000478"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.501751" level="INFO">✅ Log file permissions validated</msg>
<arg>✅ Log file permissions validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.501568" elapsed="0.000309"/>
</kw>
<kw name="Log Test End" owner="logs_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.503075" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.502880" elapsed="0.000321"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.503641" level="INFO">🏁 Completed Test: Normal - Check Log File Permissions | Status: PASS</msg>
<arg>🏁 Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.503405" elapsed="0.000376"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.504163" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.503958" elapsed="0.000323"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:45:27.502291" elapsed="0.002087"/>
</kw>
<doc>🔒 Verify log files have correct permissions</doc>
<tag>logs</tag>
<tag>normal</tag>
<tag>permissions</tag>
<tag>security</tag>
<status status="PASS" start="2025-10-05T15:45:27.365922" elapsed="0.138520"/>
</test>
<test id="s1-t14" name="Normal - Check SELinux Denial Logs" line="224">
<kw name="Log Test Start" owner="logs_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.506618" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.506407" elapsed="0.000313"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.508956" level="INFO">🏁 Starting Test: Normal - Check SELinux Denial Logs</msg>
<arg>🏁 Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.508352" elapsed="0.000743"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.509373" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.509253" elapsed="0.000215"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:45:27.506127" elapsed="0.003436"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.509819" level="INFO">🔍 Checking SELinux denial logs...</msg>
<arg>🔍 Checking SELinux denial logs...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.509689" elapsed="0.000232"/>
</kw>
<kw name="Check SELinux Denials" owner="logs_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.510422" level="INFO">🔒 Checking SELinux denials...</msg>
<arg>🔒 Checking SELinux denials...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.510326" elapsed="0.000198"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:27.511894" level="INFO">Executing command 'getenforce 2&gt;&amp;1 || echo "SELinux not available"'.</msg>
<msg time="2025-10-05T15:45:27.524005" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:27.524169" level="INFO">${output} = bash: line 1: getenforce: command not found
SELinux not available</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:27.511748" elapsed="0.012447"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:27.524265" elapsed="0.000048"/>
</return>
<msg time="2025-10-05T15:45:27.524457" level="INFO">${selinux_status} = bash: line 1: getenforce: command not found
SELinux not available</msg>
<var>${selinux_status}</var>
<arg>getenforce 2&gt;&amp;1 || echo "SELinux not available"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:27.510750" elapsed="0.013731"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:27.525454" level="INFO">Executing command 'ausearch -m avc -ts recent 2&gt;&amp;1 | tail -100 || grep -i "denied" /var/log/audit/audit.log 2&gt;/dev/null | tail -50 || echo "No SELinux denials found"'.</msg>
<msg time="2025-10-05T15:45:27.571828" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:27.572083" level="INFO">${output} = bash: line 1: ausearch: command not found</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:27.525056" elapsed="0.047069"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:27.572230" elapsed="0.000064"/>
</return>
<msg time="2025-10-05T15:45:27.572612" level="INFO">${audit_denials} = bash: line 1: ausearch: command not found</msg>
<var>${audit_denials}</var>
<arg>ausearch -m avc -ts recent 2&gt;&amp;1 | tail -100 || grep -i "denied" /var/log/audit/audit.log 2&gt;/dev/null | tail -50 || echo "No SELinux denials found"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:27.524686" elapsed="0.047968"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:27.573712" level="INFO">Executing command 'sealert -a /var/log/audit/audit.log 2&gt;&amp;1 | head -50 || echo "sealert not available"'.</msg>
<msg time="2025-10-05T15:45:27.623913" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:27.624304" level="INFO">${output} = bash: line 1: sealert: command not found</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:27.573424" elapsed="0.050941"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:27.624485" elapsed="0.000073"/>
</return>
<msg time="2025-10-05T15:45:27.624790" level="INFO">${sealert} = bash: line 1: sealert: command not found</msg>
<var>${sealert}</var>
<arg>sealert -a /var/log/audit/audit.log 2&gt;&amp;1 | head -50 || echo "sealert not available"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:27.572964" elapsed="0.051866"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.626088" level="INFO">${selinux_denials} = === SELinux Status ===
bash: line 1: getenforce: command not found
SELinux not available

=== Audit Denials (ausearch) ===
bash: line 1: ausearch: command not found

=== SELinux Alerts (sealert) ===
b...</msg>
<var>${selinux_denials}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== SELinux Status ===</arg>
<arg>${selinux_status}</arg>
<arg>=== Audit Denials (ausearch) ===</arg>
<arg>${audit_denials}</arg>
<arg>=== SELinux Alerts (sealert) ===</arg>
<arg>${sealert}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:27.625074" elapsed="0.001069"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.626936" level="INFO">✅ SELinux denial check completed</msg>
<arg>✅ SELinux denial check completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.626520" elapsed="0.000682"/>
</kw>
<return>
<value>${selinux_denials}</value>
<status status="PASS" start="2025-10-05T15:45:27.627336" elapsed="0.000084"/>
</return>
<msg time="2025-10-05T15:45:27.627719" level="INFO">${selinux_denials} = === SELinux Status ===
bash: line 1: getenforce: command not found
SELinux not available

=== Audit Denials (ausearch) ===
bash: line 1: ausearch: command not found

=== SELinux Alerts (sealert) ===
b...</msg>
<var>${selinux_denials}</var>
<doc>🔒 Check for SELinux denials</doc>
<status status="PASS" start="2025-10-05T15:45:27.510105" elapsed="0.117660"/>
</kw>
<kw name="Save SELinux Denials to File" owner="logs_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:45:27.629032" level="INFO">${timestamp} = 20251005_154527</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:45:27.628592" elapsed="0.000499"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.629629" level="INFO">${selinux_file} = results/test22_event_logs/data/selinux_denials_20251005_154527.txt</msg>
<var>${selinux_file}</var>
<arg>${DATA_DIR}/selinux_denials_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:45:27.629311" elapsed="0.000383"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.630617" level="INFO">${report} = =========================================
=== SELinux Denials ===
=========================================
Timestamp: 20251005_154527
Target Server: alhxvdvitap01 (172.30.16.186)

=== SELinux Status ...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== SELinux Denials ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>${selinux_denials}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:27.629962" elapsed="0.000710"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:45:27.644404" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/selinux_denials_20251005_154527.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/selinux_denials_20251005_154527.txt&lt;/a&gt;'.</msg>
<arg>${selinux_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:45:27.631104" elapsed="0.013466"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.645389" level="INFO">📄 SELinux denials saved to: results/test22_event_logs/data/selinux_denials_20251005_154527.txt</msg>
<arg>📄 SELinux denials saved to: ${selinux_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.644924" elapsed="0.000965"/>
</kw>
<return>
<value>${selinux_file}</value>
<status status="PASS" start="2025-10-05T15:45:27.646042" elapsed="0.000085"/>
</return>
<msg time="2025-10-05T15:45:27.646374" level="INFO">${selinux_file} = results/test22_event_logs/data/selinux_denials_20251005_154527.txt</msg>
<var>${selinux_file}</var>
<arg>${selinux_denials}</arg>
<doc>💾 Save SELinux denials to file</doc>
<status status="PASS" start="2025-10-05T15:45:27.628107" elapsed="0.019119"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.648060" level="INFO">📄 SELinux denials saved to: results/test22_event_logs/data/selinux_denials_20251005_154527.txt</msg>
<arg>📄 SELinux denials saved to: ${selinux_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.647660" elapsed="0.000580"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.648715" level="INFO">✅ SELinux denial check completed</msg>
<arg>✅ SELinux denial check completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.648499" elapsed="0.000361"/>
</kw>
<kw name="Log Test End" owner="logs_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.649994" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.649810" elapsed="0.000340"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.650753" level="INFO">🏁 Completed Test: Normal - Check SELinux Denial Logs | Status: PASS</msg>
<arg>🏁 Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.650341" elapsed="0.000621"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.651377" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.651175" elapsed="0.000343"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:45:27.649241" elapsed="0.002415"/>
</kw>
<doc>🔒 Check for SELinux denials in logs</doc>
<tag>audit</tag>
<tag>normal</tag>
<tag>security</tag>
<tag>selinux</tag>
<status status="PASS" start="2025-10-05T15:45:27.504797" elapsed="0.146947"/>
</test>
<test id="s1-t15" name="Normal - Check Application Specific Logs" line="239">
<kw name="Log Test Start" owner="logs_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.654213" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.653914" elapsed="0.000456"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.654975" level="INFO">🏁 Starting Test: Normal - Check Application Specific Logs</msg>
<arg>🏁 Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.654667" elapsed="0.000495"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.655453" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.655313" elapsed="0.000257"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:45:27.653384" elapsed="0.002284"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.655921" level="INFO">🔍 Checking application-specific logs...</msg>
<arg>🔍 Checking application-specific logs...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.655796" elapsed="0.000298"/>
</kw>
<kw name="Collect Application Logs" owner="logs_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.656816" level="INFO">📱 Collecting application logs...</msg>
<arg>📱 Collecting application logs...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.656673" elapsed="0.000274"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:27.657830" level="INFO">Executing command 'tail -500 /var/log/httpd/error_log 2&gt;/dev/null || tail -500 /var/log/apache2/error.log 2&gt;/dev/null || echo "No httpd logs"'.</msg>
<msg time="2025-10-05T15:45:27.675173" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:27.675419" level="INFO">${output} = No httpd logs</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:27.657678" elapsed="0.017768"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:27.675556" elapsed="0.000059"/>
</return>
<msg time="2025-10-05T15:45:27.675770" level="INFO">${httpd_logs} = No httpd logs</msg>
<var>${httpd_logs}</var>
<arg>tail -${LOG_LINES_TO_COLLECT} /var/log/httpd/error_log 2&gt;/dev/null || tail -${LOG_LINES_TO_COLLECT} /var/log/apache2/error.log 2&gt;/dev/null || echo "No httpd logs"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:27.657173" elapsed="0.018620"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:27.676580" level="INFO">Executing command 'tail -500 /var/log/nginx/error.log 2&gt;/dev/null || echo "No nginx logs"'.</msg>
<msg time="2025-10-05T15:45:27.723337" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:27.723592" level="INFO">${output} = No nginx logs</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:27.676422" elapsed="0.047204"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:27.723715" elapsed="0.000079"/>
</return>
<msg time="2025-10-05T15:45:27.723962" level="INFO">${nginx_logs} = No nginx logs</msg>
<var>${nginx_logs}</var>
<arg>tail -${LOG_LINES_TO_COLLECT} /var/log/nginx/error.log 2&gt;/dev/null || echo "No nginx logs"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:27.676048" elapsed="0.047940"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:27.725255" level="INFO">Executing command 'tail -500 /var/log/mysql/error.log 2&gt;/dev/null || tail -500 /var/log/postgresql/*.log 2&gt;/dev/null || echo "No database logs"'.</msg>
<msg time="2025-10-05T15:45:27.777051" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:27.777393" level="INFO">${output} = No database logs</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:27.724945" elapsed="0.052485"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:27.777523" elapsed="0.000061"/>
</return>
<msg time="2025-10-05T15:45:27.778637" level="INFO">${db_logs} = No database logs</msg>
<var>${db_logs}</var>
<arg>tail -${LOG_LINES_TO_COLLECT} /var/log/mysql/error.log 2&gt;/dev/null || tail -${LOG_LINES_TO_COLLECT} /var/log/postgresql/*.log 2&gt;/dev/null || echo "No database logs"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:27.724226" elapsed="0.054462"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:27.780013" level="INFO">Executing command 'ls -la /var/log/ 2&gt;/dev/null | grep -vE "lastlog|wtmp|btmp" || echo "Log directory listing not available"'.</msg>
<msg time="2025-10-05T15:45:27.843400" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:27.843618" level="INFO">${output} = total 5716
drwxrwxr-x   8 root      syslog             4096 Oct  5 12:18 .
drwxr-xr-x  13 root      root               4096 Aug 20 17:20 ..
lrwxrwxrwx   1 root      root                 39 Aug  5 11:5...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:27.779720" elapsed="0.063932"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:27.843769" elapsed="0.000055"/>
</return>
<msg time="2025-10-05T15:45:27.843978" level="INFO">${app_list} = total 5716
drwxrwxr-x   8 root      syslog             4096 Oct  5 12:18 .
drwxr-xr-x  13 root      root               4096 Aug 20 17:20 ..
lrwxrwxrwx   1 root      root                 39 Aug  5 11:5...</msg>
<var>${app_list}</var>
<arg>ls -la /var/log/ 2&gt;/dev/null | grep -vE "lastlog|wtmp|btmp" || echo "Log directory listing not available"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:27.779167" elapsed="0.064834"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.844490" level="INFO">${app_logs} = === Application Log Directory ===
total 5716
drwxrwxr-x   8 root      syslog             4096 Oct  5 12:18 .
drwxr-xr-x  13 root      root               4096 Aug 20 17:20 ..
lrwxrwxrwx   1 root      r...</msg>
<var>${app_logs}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Application Log Directory ===</arg>
<arg>${app_list}</arg>
<arg>=== HTTPD/Apache Logs ===</arg>
<arg>${httpd_logs}</arg>
<arg>=== Nginx Logs ===</arg>
<arg>${nginx_logs}</arg>
<arg>=== Database Logs ===</arg>
<arg>${db_logs}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:27.844174" elapsed="0.000342"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.844853" level="INFO">✅ Application logs collected</msg>
<arg>✅ Application logs collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.844642" elapsed="0.000346"/>
</kw>
<return>
<value>${app_logs}</value>
<status status="PASS" start="2025-10-05T15:45:27.845178" elapsed="0.000057"/>
</return>
<msg time="2025-10-05T15:45:27.845434" level="INFO">${app_logs} = === Application Log Directory ===
total 5716
drwxrwxr-x   8 root      syslog             4096 Oct  5 12:18 .
drwxr-xr-x  13 root      root               4096 Aug 20 17:20 ..
lrwxrwxrwx   1 root      r...</msg>
<var>${app_logs}</var>
<doc>📱 Collect application-specific logs</doc>
<status status="PASS" start="2025-10-05T15:45:27.656379" elapsed="0.189092"/>
</kw>
<kw name="Save Application Logs to File" owner="logs_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:45:27.846367" level="INFO">${timestamp} = 20251005_154527</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:45:27.846085" elapsed="0.000311"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.846934" level="INFO">${app_file} = results/test22_event_logs/data/application_logs_20251005_154527.txt</msg>
<var>${app_file}</var>
<arg>${DATA_DIR}/application_logs_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:45:27.846588" elapsed="0.000410"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.847534" level="INFO">${report} = =========================================
=== Application Logs ===
=========================================
Timestamp: 20251005_154527
Target Server: alhxvdvitap01 (172.30.16.186)

=== Application Lo...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== Application Logs ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>${app_logs}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:27.847148" elapsed="0.000420"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:45:27.857413" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/application_logs_20251005_154527.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/application_logs_20251005_154527.txt&lt;/a&gt;'.</msg>
<arg>${app_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:45:27.847735" elapsed="0.009838"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.858061" level="INFO">📄 Application logs saved to: results/test22_event_logs/data/application_logs_20251005_154527.txt</msg>
<arg>📄 Application logs saved to: ${app_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.857795" elapsed="0.000403"/>
</kw>
<return>
<value>${app_file}</value>
<status status="PASS" start="2025-10-05T15:45:27.858263" elapsed="0.000052"/>
</return>
<msg time="2025-10-05T15:45:27.858637" level="INFO">${app_file} = results/test22_event_logs/data/application_logs_20251005_154527.txt</msg>
<var>${app_file}</var>
<arg>${app_logs}</arg>
<doc>💾 Save application logs to file</doc>
<status status="PASS" start="2025-10-05T15:45:27.845761" elapsed="0.012939"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.859274" level="INFO">📄 Application logs saved to: results/test22_event_logs/data/application_logs_20251005_154527.txt</msg>
<arg>📄 Application logs saved to: ${app_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.859035" elapsed="0.000347"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.859649" level="INFO">✅ Application log collection completed</msg>
<arg>✅ Application log collection completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.859503" elapsed="0.000239"/>
</kw>
<kw name="Log Test End" owner="logs_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.861089" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.860933" elapsed="0.000271"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.861632" level="INFO">🏁 Completed Test: Normal - Check Application Specific Logs | Status: PASS</msg>
<arg>🏁 Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.861394" elapsed="0.000954"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.862805" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.862581" elapsed="0.000419"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:45:27.860010" elapsed="0.003075"/>
</kw>
<doc>📱 Collect and validate application-specific logs</doc>
<tag>applications</tag>
<tag>logs</tag>
<tag>normal</tag>
<tag>validation</tag>
<status status="PASS" start="2025-10-05T15:45:27.652578" elapsed="0.210590"/>
</test>
<test id="s1-t16" name="Normal - Validate Rsyslog Configuration" line="254">
<kw name="Log Test Start" owner="logs_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.866074" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.865470" elapsed="0.000768"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.866726" level="INFO">🏁 Starting Test: Normal - Validate Rsyslog Configuration</msg>
<arg>🏁 Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.866471" elapsed="0.000482"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.867211" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.867089" elapsed="0.000211"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:45:27.864405" elapsed="0.002989"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.867624" level="INFO">🔍 Validating rsyslog configuration...</msg>
<arg>🔍 Validating rsyslog configuration...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.867515" elapsed="0.000183"/>
</kw>
<kw name="Check Rsyslog Configuration" owner="logs_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.930390" level="INFO">📡 Checking rsyslog configuration...</msg>
<arg>📡 Checking rsyslog configuration...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.930169" elapsed="0.000395"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:27.931247" level="INFO">Executing command 'cat /etc/rsyslog.conf 2&gt;/dev/null || echo "No /etc/rsyslog.conf"'.</msg>
<msg time="2025-10-05T15:45:27.953703" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:27.954502" level="INFO">${output} = # /etc/rsyslog.conf configuration file for rsyslog
#
# For more information install rsyslog-doc and see
# /usr/share/doc/rsyslog-doc/html/configuration/index.html
#
# Default logging rules can be foun...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:27.931121" elapsed="0.023494"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:27.955085" elapsed="0.000083"/>
</return>
<msg time="2025-10-05T15:45:27.955411" level="INFO">${rsyslog_conf} = # /etc/rsyslog.conf configuration file for rsyslog
#
# For more information install rsyslog-doc and see
# /usr/share/doc/rsyslog-doc/html/configuration/index.html
#
# Default logging rules can be foun...</msg>
<var>${rsyslog_conf}</var>
<arg>cat /etc/rsyslog.conf 2&gt;/dev/null || echo "No /etc/rsyslog.conf"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:27.930779" elapsed="0.024676"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:27.956138" level="INFO">Executing command 'ls -la /etc/rsyslog.d/ 2&gt;/dev/null || echo "No /etc/rsyslog.d/"'.</msg>
<msg time="2025-10-05T15:45:28.014968" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:28.015514" level="INFO">${output} = total 16
drwxr-xr-x  2 root root 4096 Aug  5 11:57 .
drwxr-xr-x 91 root root 4096 Oct  5 15:44 ..
-rw-r--r--  1 root root  255 Jun 24 16:14 21-cloudinit.conf
-rw-r--r--  1 root root 1124 Mar 21  2024 ...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:27.955992" elapsed="0.059612"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:28.015739" elapsed="0.000077"/>
</return>
<msg time="2025-10-05T15:45:28.016134" level="INFO">${rsyslog_d} = total 16
drwxr-xr-x  2 root root 4096 Aug  5 11:57 .
drwxr-xr-x 91 root root 4096 Oct  5 15:44 ..
-rw-r--r--  1 root root  255 Jun 24 16:14 21-cloudinit.conf
-rw-r--r--  1 root root 1124 Mar 21  2024 ...</msg>
<var>${rsyslog_d}</var>
<arg>ls -la /etc/rsyslog.d/ 2&gt;/dev/null || echo "No /etc/rsyslog.d/"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:27.955688" elapsed="0.060494"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:28.017371" level="INFO">Executing command 'systemctl status rsyslog 2&gt;&amp;1 || service rsyslog status 2&gt;&amp;1 || echo "rsyslog status not available"'.</msg>
<msg time="2025-10-05T15:45:28.091329" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:28.091574" level="INFO">${output} = ● rsyslog.service - System Logging Service
     Loaded: loaded (/usr/lib/systemd/system/rsyslog.service; enabled; preset: enabled)
     Active: active (running) since Sun 2025-10-05 12:18:17 CDT; 3h 2...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:28.017139" elapsed="0.074478"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:28.091718" elapsed="0.000065"/>
</return>
<msg time="2025-10-05T15:45:28.092022" level="INFO">${rsyslog_status} = ● rsyslog.service - System Logging Service
     Loaded: loaded (/usr/lib/systemd/system/rsyslog.service; enabled; preset: enabled)
     Active: active (running) since Sun 2025-10-05 12:18:17 CDT; 3h 2...</msg>
<var>${rsyslog_status}</var>
<arg>systemctl status rsyslog 2&gt;&amp;1 || service rsyslog status 2&gt;&amp;1 || echo "rsyslog status not available"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:28.016632" elapsed="0.075445"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:28.093040" level="INFO">Executing command 'cat /etc/syslog-ng/syslog-ng.conf 2&gt;/dev/null || echo "No syslog-ng configuration"'.</msg>
<msg time="2025-10-05T15:45:28.147236" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:28.148088" level="INFO">${output} = No syslog-ng configuration</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:28.092835" elapsed="0.055301"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:28.148270" elapsed="0.000062"/>
</return>
<msg time="2025-10-05T15:45:28.148538" level="INFO">${syslog_ng} = No syslog-ng configuration</msg>
<var>${syslog_ng}</var>
<arg>cat /etc/syslog-ng/syslog-ng.conf 2&gt;/dev/null || echo "No syslog-ng configuration"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:28.092362" elapsed="0.056211"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.149118" level="INFO">${rsyslog_config} = === /etc/rsyslog.conf ===
# /etc/rsyslog.conf configuration file for rsyslog
#
# For more information install rsyslog-doc and see
# /usr/share/doc/rsyslog-doc/html/configuration/index.html
#
# Default...</msg>
<var>${rsyslog_config}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== /etc/rsyslog.conf ===</arg>
<arg>${rsyslog_conf}</arg>
<arg>=== /etc/rsyslog.d/ Directory ===</arg>
<arg>${rsyslog_d}</arg>
<arg>=== Rsyslog Service Status ===</arg>
<arg>${rsyslog_status}</arg>
<arg>=== Syslog-NG Configuration (if present) ===</arg>
<arg>${syslog_ng}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:28.148772" elapsed="0.000371"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.149375" level="INFO">✅ Rsyslog configuration collected</msg>
<arg>✅ Rsyslog configuration collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:28.149263" elapsed="0.000200"/>
</kw>
<return>
<value>${rsyslog_config}</value>
<status status="PASS" start="2025-10-05T15:45:28.149503" elapsed="0.000026"/>
</return>
<msg time="2025-10-05T15:45:28.149636" level="INFO">${rsyslog_config} = === /etc/rsyslog.conf ===
# /etc/rsyslog.conf configuration file for rsyslog
#
# For more information install rsyslog-doc and see
# /usr/share/doc/rsyslog-doc/html/configuration/index.html
#
# Default...</msg>
<var>${rsyslog_config}</var>
<doc>📡 Check rsyslog configuration</doc>
<status status="PASS" start="2025-10-05T15:45:27.867879" elapsed="0.281777"/>
</kw>
<kw name="Save Rsyslog Config to File" owner="logs_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:45:28.150186" level="INFO">${timestamp} = 20251005_154528</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:45:28.150049" elapsed="0.000156"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.150404" level="INFO">${rsyslog_file} = results/test22_event_logs/data/rsyslog_config_20251005_154528.txt</msg>
<var>${rsyslog_file}</var>
<arg>${DATA_DIR}/rsyslog_config_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:45:28.150284" elapsed="0.000137"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.151046" level="INFO">${report} = =========================================
=== Rsyslog Configuration ===
=========================================
Timestamp: 20251005_154528
Target Server: alhxvdvitap01 (172.30.16.186)

=== /etc/rsys...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== Rsyslog Configuration ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>${rsyslog_config}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:28.150613" elapsed="0.000465"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:45:28.158220" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/rsyslog_config_20251005_154528.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/rsyslog_config_20251005_154528.txt&lt;/a&gt;'.</msg>
<arg>${rsyslog_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:45:28.151235" elapsed="0.007141"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.159137" level="INFO">📄 Rsyslog configuration saved to: results/test22_event_logs/data/rsyslog_config_20251005_154528.txt</msg>
<arg>📄 Rsyslog configuration saved to: ${rsyslog_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:28.158624" elapsed="0.000629"/>
</kw>
<return>
<value>${rsyslog_file}</value>
<status status="PASS" start="2025-10-05T15:45:28.159327" elapsed="0.000049"/>
</return>
<msg time="2025-10-05T15:45:28.159519" level="INFO">${rsyslog_file} = results/test22_event_logs/data/rsyslog_config_20251005_154528.txt</msg>
<var>${rsyslog_file}</var>
<arg>${rsyslog_config}</arg>
<doc>💾 Save rsyslog configuration to file</doc>
<status status="PASS" start="2025-10-05T15:45:28.149836" elapsed="0.009713"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.159844" level="INFO">📄 Rsyslog configuration saved to: results/test22_event_logs/data/rsyslog_config_20251005_154528.txt</msg>
<arg>📄 Rsyslog configuration saved to: ${rsyslog_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:28.159666" elapsed="0.000263"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.160162" level="INFO">✅ Rsyslog configuration validated</msg>
<arg>✅ Rsyslog configuration validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:28.160051" elapsed="0.000205"/>
</kw>
<kw name="Log Test End" owner="logs_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.161150" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:28.161011" elapsed="0.000241"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.161600" level="INFO">🏁 Completed Test: Normal - Validate Rsyslog Configuration | Status: PASS</msg>
<arg>🏁 Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:28.161389" elapsed="0.000308"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.161989" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:28.161833" elapsed="0.000266"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:45:28.160623" elapsed="0.001558"/>
</kw>
<doc>📡 Verify rsyslog is properly configured</doc>
<tag>configuration</tag>
<tag>logging</tag>
<tag>normal</tag>
<tag>rsyslog</tag>
<status status="PASS" start="2025-10-05T15:45:27.863526" elapsed="0.298702"/>
</test>
<test id="s1-t17" name="Normal - Check Log Size and Growth Rate" line="269">
<kw name="Log Test Start" owner="logs_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.164837" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:28.164179" elapsed="0.000980"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.165965" level="INFO">🏁 Starting Test: Normal - Check Log Size and Growth Rate</msg>
<arg>🏁 Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:28.165468" elapsed="0.000916"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.167299" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:28.166772" elapsed="0.000745"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:45:28.163788" elapsed="0.003829"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.167873" level="INFO">🔍 Analyzing log file sizes and growth rates...</msg>
<arg>🔍 Analyzing log file sizes and growth rates...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:28.167765" elapsed="0.000195"/>
</kw>
<kw name="Analyze Log Sizes and Growth" owner="logs_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.168424" level="INFO">📈 Analyzing log sizes and growth...</msg>
<arg>📈 Analyzing log sizes and growth...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:28.168335" elapsed="0.000171"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:28.168988" level="INFO">Executing command 'du -sh /var/log/* 2&gt;/dev/null | sort -rh | head -20 || echo "Log size analysis not available"'.</msg>
<msg time="2025-10-05T15:45:28.194722" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:28.195126" level="INFO">${output} = 265M	/var/log/journal
1.9M	/var/log/syslog.1
1.8M	/var/log/syslog
692K	/var/log/dpkg.log
268K	/var/log/apt
220K	/var/log/kern.log
192K	/var/log/syslog.4.gz
156K	/var/log/syslog.2.gz
136K	/var/log/sysl...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:28.168891" elapsed="0.026268"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:28.195240" elapsed="0.000050"/>
</return>
<msg time="2025-10-05T15:45:28.195435" level="INFO">${log_sizes} = 265M	/var/log/journal
1.9M	/var/log/syslog.1
1.8M	/var/log/syslog
692K	/var/log/dpkg.log
268K	/var/log/apt
220K	/var/log/kern.log
192K	/var/log/syslog.4.gz
156K	/var/log/syslog.2.gz
136K	/var/log/sysl...</msg>
<var>${log_sizes}</var>
<arg>du -sh /var/log/* 2&gt;/dev/null | sort -rh | head -20 || echo "Log size analysis not available"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:28.168659" elapsed="0.026811"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:28.196181" level="INFO">Executing command 'du -sh /var/log 2&gt;&amp;1 || echo "Total size not available"'.</msg>
<msg time="2025-10-05T15:45:28.243562" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:28.243790" level="INFO">${output} = du: cannot read directory '/var/log/private': Permission denied
271M	/var/log
Total size not available</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:28.196028" elapsed="0.047803"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:28.243942" elapsed="0.000076"/>
</return>
<msg time="2025-10-05T15:45:28.244299" level="INFO">${total_log_size} = du: cannot read directory '/var/log/private': Permission denied
271M	/var/log
Total size not available</msg>
<var>${total_log_size}</var>
<arg>du -sh /var/log 2&gt;&amp;1 || echo "Total size not available"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:28.195734" elapsed="0.048603"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:28.245473" level="INFO">Executing command 'find /var/log -type f -printf '%T+ %p
' 2&gt;/dev/null | sort | head -10 || echo "Oldest log search not available"'.</msg>
<msg time="2025-10-05T15:45:28.296594" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:28.296881" level="INFO">${output} = 2025-08-05+11:55:29.0709635820 /var/log/faillog
2025-08-05+11:55:53.9919859160 /var/log/bootstrap.log
2025-08-05+11:57:31.9290298770 /var/log/landscape/sysinfo.log
2025-08-20+17:20:56.0306179780 /var/...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:28.245251" elapsed="0.051678"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:28.297091" elapsed="0.000093"/>
</return>
<msg time="2025-10-05T15:45:28.297417" level="INFO">${oldest_logs} = 2025-08-05+11:55:29.0709635820 /var/log/faillog
2025-08-05+11:55:53.9919859160 /var/log/bootstrap.log
2025-08-05+11:57:31.9290298770 /var/log/landscape/sysinfo.log
2025-08-20+17:20:56.0306179780 /var/...</msg>
<var>${oldest_logs}</var>
<arg>find /var/log -type f -printf '%T+ %p\n' 2&gt;/dev/null | sort | head -10 || echo "Oldest log search not available"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:28.244660" elapsed="0.052799"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:28.298547" level="INFO">Executing command 'find /var/log -type f -printf '%T+ %p
' 2&gt;/dev/null | sort -r | head -10 || echo "Newest log search not available"'.</msg>
<msg time="2025-10-05T15:45:28.352459" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:28.352693" level="INFO">${output} = 2025-10-05+15:45:10.5283229340 /var/log/journal/e92ae856753b432cbc76262e53dea82e/system.journal
2025-10-05+15:45:10.1683229470 /var/log/wtmp
2025-10-05+15:45:10.1683229470 /var/log/lastlog
2025-10-05+...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:28.298277" elapsed="0.054447"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:28.352812" elapsed="0.000054"/>
</return>
<msg time="2025-10-05T15:45:28.353080" level="INFO">${newest_logs} = 2025-10-05+15:45:10.5283229340 /var/log/journal/e92ae856753b432cbc76262e53dea82e/system.journal
2025-10-05+15:45:10.1683229470 /var/log/wtmp
2025-10-05+15:45:10.1683229470 /var/log/lastlog
2025-10-05+...</msg>
<var>${newest_logs}</var>
<arg>find /var/log -type f -printf '%T+ %p\n' 2&gt;/dev/null | sort -r | head -10 || echo "Newest log search not available"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:28.297802" elapsed="0.055310"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.354801" level="INFO">${log_size_analysis} = === Largest Log Files/Directories ===
265M	/var/log/journal
1.9M	/var/log/syslog.1
1.8M	/var/log/syslog
692K	/var/log/dpkg.log
268K	/var/log/apt
220K	/var/log/kern.log
192K	/var/log/syslog.4.gz
156K	/...</msg>
<var>${log_size_analysis}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Largest Log Files/Directories ===</arg>
<arg>${log_sizes}</arg>
<arg>=== Total /var/log Size ===</arg>
<arg>${total_log_size}</arg>
<arg>=== Oldest Log Files ===</arg>
<arg>${oldest_logs}</arg>
<arg>=== Newest Log Files ===</arg>
<arg>${newest_logs}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:28.354248" elapsed="0.000660"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.355454" level="INFO">✅ Log size analysis completed</msg>
<arg>✅ Log size analysis completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:28.355193" elapsed="0.000891"/>
</kw>
<return>
<value>${log_size_analysis}</value>
<status status="PASS" start="2025-10-05T15:45:28.356181" elapsed="0.000067"/>
</return>
<msg time="2025-10-05T15:45:28.356519" level="INFO">${log_size_analysis} = === Largest Log Files/Directories ===
265M	/var/log/journal
1.9M	/var/log/syslog.1
1.8M	/var/log/syslog
692K	/var/log/dpkg.log
268K	/var/log/apt
220K	/var/log/kern.log
192K	/var/log/syslog.4.gz
156K	/...</msg>
<var>${log_size_analysis}</var>
<doc>📈 Analyze log file sizes and growth rates</doc>
<status status="PASS" start="2025-10-05T15:45:28.168136" elapsed="0.188428"/>
</kw>
<kw name="Save Log Size Analysis to File" owner="logs_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:45:28.357870" level="INFO">${timestamp} = 20251005_154528</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:45:28.357497" elapsed="0.000418"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.358401" level="INFO">${size_file} = results/test22_event_logs/data/log_size_analysis_20251005_154528.txt</msg>
<var>${size_file}</var>
<arg>${DATA_DIR}/log_size_analysis_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:45:28.358100" elapsed="0.000358"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.359735" level="INFO">${report} = =========================================
=== Log Size Analysis ===
=========================================
Timestamp: 20251005_154528
Target Server: alhxvdvitap01 (172.30.16.186)

=== Largest Log F...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== Log Size Analysis ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>${log_size_analysis}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:28.358739" elapsed="0.001089"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:45:28.369033" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/log_size_analysis_20251005_154528.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/log_size_analysis_20251005_154528.txt&lt;/a&gt;'.</msg>
<arg>${size_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:45:28.360234" elapsed="0.008983"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.369739" level="INFO">📄 Log size analysis saved to: results/test22_event_logs/data/log_size_analysis_20251005_154528.txt</msg>
<arg>📄 Log size analysis saved to: ${size_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:28.369456" elapsed="0.000426"/>
</kw>
<return>
<value>${size_file}</value>
<status status="PASS" start="2025-10-05T15:45:28.369952" elapsed="0.000051"/>
</return>
<msg time="2025-10-05T15:45:28.370181" level="INFO">${size_file} = results/test22_event_logs/data/log_size_analysis_20251005_154528.txt</msg>
<var>${size_file}</var>
<arg>${log_size_analysis}</arg>
<doc>💾 Save log size analysis to file</doc>
<status status="PASS" start="2025-10-05T15:45:28.356942" elapsed="0.013278"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.370892" level="INFO">📄 Log size analysis saved to: results/test22_event_logs/data/log_size_analysis_20251005_154528.txt</msg>
<arg>📄 Log size analysis saved to: ${size_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:28.370475" elapsed="0.000566"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.371452" level="INFO">✅ Log size analysis completed</msg>
<arg>✅ Log size analysis completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:28.371249" elapsed="0.000338"/>
</kw>
<kw name="Log Test End" owner="logs_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.372719" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:28.372511" elapsed="0.000359"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.373346" level="INFO">🏁 Completed Test: Normal - Check Log Size and Growth Rate | Status: PASS</msg>
<arg>🏁 Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:28.373040" elapsed="0.000472"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.374016" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:28.373753" elapsed="0.000445"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:45:28.371900" elapsed="0.002451"/>
</kw>
<doc>📈 Analyze log file sizes and growth rates</doc>
<tag>growth</tag>
<tag>log_size</tag>
<tag>monitoring</tag>
<tag>normal</tag>
<status status="PASS" start="2025-10-05T15:45:28.163151" elapsed="0.211298"/>
</test>
<test id="s1-t18" name="Normal - Check System Uptime and Reboot History" line="284">
<kw name="Log Test Start" owner="logs_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.376074" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:28.375889" elapsed="0.000297"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.376500" level="INFO">🏁 Starting Test: Normal - Check System Uptime and Reboot History</msg>
<arg>🏁 Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:28.376333" elapsed="0.000268"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.377514" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:28.377363" elapsed="0.000252"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:45:28.375593" elapsed="0.002086"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.377908" level="INFO">🔍 Checking system uptime and reboot history...</msg>
<arg>🔍 Checking system uptime and reboot history...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:28.377793" elapsed="0.000199"/>
</kw>
<kw name="Check Uptime and Reboot History" owner="logs_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.378716" level="INFO">⏱️ Checking uptime and reboot history...</msg>
<arg>⏱️ Checking uptime and reboot history...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:28.378387" elapsed="0.000552"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:28.379649" level="INFO">Executing command 'uptime 2&gt;&amp;1 || echo "uptime not available"'.</msg>
<msg time="2025-10-05T15:45:28.418889" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:28.419337" level="INFO">${output} =  15:45:28 up  2:40,  2 users,  load average: 1.02, 0.50, 0.41</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:28.379519" elapsed="0.039889"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:28.419593" elapsed="0.000103"/>
</return>
<msg time="2025-10-05T15:45:28.420022" level="INFO">${uptime} =  15:45:28 up  2:40,  2 users,  load average: 1.02, 0.50, 0.41</msg>
<var>${uptime}</var>
<arg>uptime 2&gt;&amp;1 || echo "uptime not available"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:28.379172" elapsed="0.040954"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:28.421635" level="INFO">Executing command 'last reboot | head -20 2&gt;&amp;1 || echo "last reboot not available"'.</msg>
<msg time="2025-10-05T15:45:28.492675" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:28.493000" level="INFO">${output} = reboot   system boot  6.6.87.2-microso Sun Oct  5 12:18   still running
reboot   system boot  6.6.87.2-microso Sun Oct  5 12:06   still running
reboot   system boot  6.6.87.2-microso Mon Sep 29 22:06 ...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:28.421309" elapsed="0.071738"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:28.493146" elapsed="0.000063"/>
</return>
<msg time="2025-10-05T15:45:28.493404" level="INFO">${last_reboot} = reboot   system boot  6.6.87.2-microso Sun Oct  5 12:18   still running
reboot   system boot  6.6.87.2-microso Sun Oct  5 12:06   still running
reboot   system boot  6.6.87.2-microso Mon Sep 29 22:06 ...</msg>
<var>${last_reboot}</var>
<arg>last reboot | head -20 2&gt;&amp;1 || echo "last reboot not available"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:28.420595" elapsed="0.072845"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:28.494933" level="INFO">Executing command 'who -b 2&gt;&amp;1 || echo "who -b not available"'.</msg>
<msg time="2025-10-05T15:45:28.546018" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:28.546347" level="INFO">${output} =          system boot  2025-10-05 12:18</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:28.494121" elapsed="0.052283"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:28.546521" elapsed="0.000106"/>
</return>
<msg time="2025-10-05T15:45:28.546934" level="INFO">${who_boot} =          system boot  2025-10-05 12:18</msg>
<var>${who_boot}</var>
<arg>who -b 2&gt;&amp;1 || echo "who -b not available"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:28.493708" elapsed="0.053304"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:28.548091" level="INFO">Executing command 'journalctl --list-boots 2&gt;&amp;1 | head -20 || echo "Boot list not available"'.</msg>
<msg time="2025-10-05T15:45:31.752184" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:31.752407" level="INFO">${output} = IDX BOOT ID                          FIRST ENTRY                 LAST ENTRY
 -8 c9febcdebe354d36953259d448b8d22f Wed 2025-08-20 17:20:55 CDT Wed 2025-08-20 18:34:34 CDT
 -7 756707ee465642eca24996deda1...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:28.547887" elapsed="3.204601"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:31.752715" elapsed="0.000057"/>
</return>
<msg time="2025-10-05T15:45:31.752956" level="INFO">${reboot_history} = IDX BOOT ID                          FIRST ENTRY                 LAST ENTRY
 -8 c9febcdebe354d36953259d448b8d22f Wed 2025-08-20 17:20:55 CDT Wed 2025-08-20 18:34:34 CDT
 -7 756707ee465642eca24996deda1...</msg>
<var>${reboot_history}</var>
<arg>journalctl --list-boots 2&gt;&amp;1 | head -20 || echo "Boot list not available"</arg>
<doc>🔧 Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:28.547344" elapsed="3.205643"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.753761" level="INFO">${uptime_analysis} = === Current Uptime ===
 15:45:28 up  2:40,  2 users,  load average: 1.02, 0.50, 0.41

=== Last Boot Time ===
         system boot  2025-10-05 12:18

=== Reboot History (last reboot) ===
reboot   syste...</msg>
<var>${uptime_analysis}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Current Uptime ===</arg>
<arg>${uptime}</arg>
<arg>=== Last Boot Time ===</arg>
<arg>${who_boot}</arg>
<arg>=== Reboot History (last reboot) ===</arg>
<arg>${last_reboot}</arg>
<arg>=== Boot List (journalctl) ===</arg>
<arg>${reboot_history}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:31.753187" elapsed="0.000622"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.754249" level="INFO">✅ Uptime and reboot history collected</msg>
<arg>✅ Uptime and reboot history collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.754028" elapsed="0.000402"/>
</kw>
<return>
<value>${uptime_analysis}</value>
<status status="PASS" start="2025-10-05T15:45:31.754514" elapsed="0.000056"/>
</return>
<msg time="2025-10-05T15:45:31.754788" level="INFO">${uptime_analysis} = === Current Uptime ===
 15:45:28 up  2:40,  2 users,  load average: 1.02, 0.50, 0.41

=== Last Boot Time ===
         system boot  2025-10-05 12:18

=== Reboot History (last reboot) ===
reboot   syste...</msg>
<var>${uptime_analysis}</var>
<doc>⏱️ Check system uptime and reboot history</doc>
<status status="PASS" start="2025-10-05T15:45:28.378173" elapsed="3.377449"/>
</kw>
<kw name="Save Uptime Analysis to File" owner="logs_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:45:31.756786" level="INFO">${timestamp} = 20251005_154531</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:45:31.756426" elapsed="0.000404"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.757284" level="INFO">${uptime_file} = results/test22_event_logs/data/uptime_analysis_20251005_154531.txt</msg>
<var>${uptime_file}</var>
<arg>${DATA_DIR}/uptime_analysis_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:45:31.757022" elapsed="0.000297"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.757931" level="INFO">${report} = =========================================
=== Uptime and Reboot History ===
=========================================
Timestamp: 20251005_154531
Target Server: alhxvdvitap01 (172.30.16.186)

=== Curre...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== Uptime and Reboot History ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>${uptime_analysis}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:31.757465" elapsed="0.000507"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:45:31.768186" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/uptime_analysis_20251005_154531.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/uptime_analysis_20251005_154531.txt&lt;/a&gt;'.</msg>
<arg>${uptime_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:45:31.758195" elapsed="0.010126"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.768921" level="INFO">📄 Uptime analysis saved to: results/test22_event_logs/data/uptime_analysis_20251005_154531.txt</msg>
<arg>📄 Uptime analysis saved to: ${uptime_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.768624" elapsed="0.000420"/>
</kw>
<return>
<value>${uptime_file}</value>
<status status="PASS" start="2025-10-05T15:45:31.769118" elapsed="0.000044"/>
</return>
<msg time="2025-10-05T15:45:31.769350" level="INFO">${uptime_file} = results/test22_event_logs/data/uptime_analysis_20251005_154531.txt</msg>
<var>${uptime_file}</var>
<arg>${uptime_analysis}</arg>
<doc>💾 Save uptime analysis to file</doc>
<status status="PASS" start="2025-10-05T15:45:31.755980" elapsed="0.013396"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.769831" level="INFO">📄 Uptime analysis saved to: results/test22_event_logs/data/uptime_analysis_20251005_154531.txt</msg>
<arg>📄 Uptime analysis saved to: ${uptime_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.769559" elapsed="0.000422"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.770367" level="INFO">✅ Uptime and reboot history checked</msg>
<arg>✅ Uptime and reboot history checked</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.770206" elapsed="0.000285"/>
</kw>
<kw name="Log Test End" owner="logs_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.771682" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.771460" elapsed="0.000376"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.772352" level="INFO">🏁 Completed Test: Normal - Check System Uptime and Reboot History | Status: PASS</msg>
<arg>🏁 Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.772012" elapsed="0.000502"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.772890" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.772724" elapsed="0.000273"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:45:31.770871" elapsed="0.002219"/>
</kw>
<doc>⏱️ Check system uptime and analyze reboot history</doc>
<tag>normal</tag>
<tag>reboot</tag>
<tag>stability</tag>
<tag>uptime</tag>
<status status="PASS" start="2025-10-05T15:45:28.374894" elapsed="3.398241"/>
</test>
<test id="s1-t19" name="Normal - Comprehensive Log Health Summary" line="299">
<kw name="Log Test Start" owner="logs_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.774777" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.774631" elapsed="0.000252"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.775180" level="INFO">🏁 Starting Test: Normal - Comprehensive Log Health Summary</msg>
<arg>🏁 Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.775007" elapsed="0.000263"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.775512" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.775391" elapsed="0.000218"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:45:31.774243" elapsed="0.001474"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.775973" level="INFO">🔍 Generating comprehensive log health summary...</msg>
<arg>🔍 Generating comprehensive log health summary...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.775864" elapsed="0.000196"/>
</kw>
<kw name="Validate All Log Health Metrics" owner="logs_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.776643" level="INFO">📊 Validating all log health metrics...</msg>
<arg>📊 Validating all log health metrics...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.776473" elapsed="0.000305"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.777898" level="INFO">✅ All log health data collected and validated</msg>
<arg>✅ All log health data collected and validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.777752" elapsed="0.000253"/>
</kw>
<doc>📊 Validate all log health metrics</doc>
<status status="PASS" start="2025-10-05T15:45:31.776253" elapsed="0.001824"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.778312" level="INFO">📊 Comprehensive log health summary:</msg>
<arg>📊 Comprehensive log health summary:</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.778196" elapsed="0.000206"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.778625" level="INFO">📊 - Journal Logs: Collected ✅</msg>
<arg>📊 - Journal Logs: Collected ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.778509" elapsed="0.000193"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.778914" level="INFO">📊 - Boot Messages: Collected ✅</msg>
<arg>📊 - Boot Messages: Collected ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.778800" elapsed="0.000187"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.779189" level="INFO">📊 - System Logs: Collected ✅</msg>
<arg>📊 - System Logs: Collected ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.779081" elapsed="0.000198"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.779478" level="INFO">📊 - Critical Errors: Validated ✅</msg>
<arg>📊 - Critical Errors: Validated ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.779384" elapsed="0.000168"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.780029" level="INFO">📊 - Boot Sequence: Validated ✅</msg>
<arg>📊 - Boot Sequence: Validated ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.779645" elapsed="0.000476"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.780373" level="INFO">📊 - Service Startup: Validated ✅</msg>
<arg>📊 - Service Startup: Validated ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.780241" elapsed="0.000216"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.780954" level="INFO">📊 - Log Rotation: Validated ✅</msg>
<arg>📊 - Log Rotation: Validated ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.780788" elapsed="0.000253"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.781268" level="INFO">📊 - Error Patterns: Analyzed ✅</msg>
<arg>📊 - Error Patterns: Analyzed ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.781171" elapsed="0.000181"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.781598" level="INFO">✅ Comprehensive log health validation: COMPLETED</msg>
<arg>✅ Comprehensive log health validation: COMPLETED</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.781503" elapsed="0.000173"/>
</kw>
<kw name="Log Test End" owner="logs_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.782360" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.782250" elapsed="0.000201"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.782767" level="INFO">🏁 Completed Test: Normal - Comprehensive Log Health Summary | Status: PASS</msg>
<arg>🏁 Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.782584" elapsed="0.000269"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.783090" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.782951" elapsed="0.000216"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:45:31.781913" elapsed="0.001311"/>
</kw>
<doc>📊 Generate comprehensive summary of log health analysis</doc>
<tag>compliance</tag>
<tag>comprehensive</tag>
<tag>normal</tag>
<tag>summary</tag>
<status status="PASS" start="2025-10-05T15:45:31.773459" elapsed="0.009801"/>
</test>
<kw name="Close All SSH Connections" owner="logs_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.784310" level="INFO">🔌 Closing SSH connections...</msg>
<arg>🔌 Closing SSH connections...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.784197" elapsed="0.000202"/>
</kw>
<kw name="Close All Connections" owner="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" start="2025-10-05T15:45:31.784556" elapsed="0.000512"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.785352" level="INFO">✅ SSH connections closed</msg>
<arg>✅ SSH connections closed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.785240" elapsed="0.000198"/>
</kw>
<doc>🔌 Close all SSH connections</doc>
<status status="PASS" start="2025-10-05T15:45:31.783924" elapsed="0.001573"/>
</kw>
<doc>📋 Event Logs &amp; Critical Error Validation Test Suite - Test-22
🔍 Process: Find hostname in EDS → SSH to server → Collect system logs → Validate no critical errors
✅ Validates: No critical errors in logs, clean boot sequence, successful service starts, proper log rotation
📊 Documents: journalctl output, dmesg, /var/log files, error patterns, boot messages, service status
⚠️ Focus: System health validation through comprehensive log analysis</doc>
<status status="FAIL" start="2025-10-05T15:44:58.553154" elapsed="33.232374"/>
</suite>
<statistics>
<total>
<stat pass="15" fail="4" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">analysis</stat>
<stat pass="1" fail="0" skip="0">applications</stat>
<stat pass="1" fail="0" skip="0">audit</stat>
<stat pass="0" fail="1" skip="0">authentication</stat>
<stat pass="1" fail="1" skip="0">boot</stat>
<stat pass="1" fail="0" skip="0">capacity</stat>
<stat pass="1" fail="0" skip="0">compliance</stat>
<stat pass="1" fail="0" skip="0">comprehensive</stat>
<stat pass="2" fail="0" skip="0">configuration</stat>
<stat pass="1" fail="0" skip="0">connection</stat>
<stat pass="5" fail="3" skip="0">critical</stat>
<stat pass="1" fail="0" skip="0">disk_space</stat>
<stat pass="0" fail="1" skip="0">dmesg</stat>
<stat pass="3" fail="0" skip="0">errors</stat>
<stat pass="1" fail="0" skip="0">growth</stat>
<stat pass="1" fail="0" skip="0">hardware</stat>
<stat pass="1" fail="0" skip="0">infrastructure</stat>
<stat pass="1" fail="1" skip="0">journalctl</stat>
<stat pass="1" fail="1" skip="0">kernel</stat>
<stat pass="1" fail="0" skip="0">logging</stat>
<stat pass="1" fail="0" skip="0">logrotate</stat>
<stat pass="3" fail="4" skip="0">logs</stat>
<stat pass="1" fail="0" skip="0">log_size</stat>
<stat pass="1" fail="0" skip="0">monitoring</stat>
<stat pass="10" fail="1" skip="0">normal</stat>
<stat pass="1" fail="0" skip="0">patterns</stat>
<stat pass="1" fail="0" skip="0">permissions</stat>
<stat pass="1" fail="0" skip="0">reboot</stat>
<stat pass="1" fail="0" skip="0">rsyslog</stat>
<stat pass="2" fail="1" skip="0">security</stat>
<stat pass="1" fail="0" skip="0">selinux</stat>
<stat pass="1" fail="0" skip="0">sequence</stat>
<stat pass="1" fail="0" skip="0">services</stat>
<stat pass="1" fail="0" skip="0">ssh</stat>
<stat pass="1" fail="0" skip="0">stability</stat>
<stat pass="1" fail="0" skip="0">startup</stat>
<stat pass="1" fail="0" skip="0">summary</stat>
<stat pass="0" fail="1" skip="0">system</stat>
<stat pass="0" fail="1" skip="0">systemd</stat>
<stat pass="1" fail="0" skip="0">uptime</stat>
<stat pass="5" fail="0" skip="0">validation</stat>
<stat pass="0" fail="1" skip="0">var_log</stat>
</tag>
<suite>
<stat name="Event Logs" id="s1" pass="15" fail="4" skip="0">Event Logs</stat>
</suite>
</statistics>
<errors>
<msg time="2025-10-05T15:45:12.248184" level="WARN">Keyword 'File Should Exist' found both from a custom library 'SSHLibrary' and a standard library 'OperatingSystem'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'SSHLibrary.File Should Exist' or 'OperatingSystem.File Should Exist'.</msg>
<msg time="2025-10-05T15:45:12.519072" level="WARN">Keyword 'File Should Exist' found both from a custom library 'SSHLibrary' and a standard library 'OperatingSystem'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'SSHLibrary.File Should Exist' or 'OperatingSystem.File Should Exist'.</msg>
<msg time="2025-10-05T15:45:12.962322" level="WARN">Keyword 'File Should Exist' found both from a custom library 'SSHLibrary' and a standard library 'OperatingSystem'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'SSHLibrary.File Should Exist' or 'OperatingSystem.File Should Exist'.</msg>
</errors>
</robot>
