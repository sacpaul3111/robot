<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 7.3.2 (Python 3.12.3 on linux)" generated="2025-10-05T15:50:51.128908" rpa="false" schemaversion="5">
<suite id="s1" name="Services Validation &amp; Mail Configuration &amp; Patch Management &amp; Tanium Agent &amp; Event Logs &amp; Network Validation &amp; Vm Validation &amp; Disk Space Validation &amp; Time Configuration Validation">
<suite id="s1-s1" name="Services Validation" source="/mnt/c/Users/sacpa/Projects/robot/robotframework/tests/test11_services_validation/services_validation.robot">
<kw name="Initialize Services Test Environment" owner="services_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:03.726577" level="INFO">üöÄ Initializing Test-11: Services Validation Environment...</msg>
<arg>üöÄ Initializing Test-11: Services Validation Environment...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:03.726305" elapsed="0.000424"/>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2025-10-05T15:43:03.728284" level="INFO" html="true">Directory '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test11_services_validation/data"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test11_services_validation/data&lt;/a&gt;' already exists.</msg>
<arg>${DATA_DIR}</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2025-10-05T15:43:03.726886" elapsed="0.001493"/>
</kw>
<kw name="Lookup Server Config" owner="EDSLookup">
<msg time="2025-10-05T15:43:03.773378" level="INFO">Found matching row for hostname 'alhxvdvitap01'</msg>
<msg time="2025-10-05T15:43:03.773706" level="INFO">Extracted IP from EDS: 172.30.16.186</msg>
<msg time="2025-10-05T15:43:03.773764" level="INFO">Extracted subnet from EDS: 10.26.216.0/24</msg>
<msg time="2025-10-05T15:43:03.773798" level="INFO">Extracted mask from EDS: 255.255.255.0</msg>
<msg time="2025-10-05T15:43:03.773826" level="INFO">Extracted gateway from EDS: 10.26.216.4</msg>
<msg time="2025-10-05T15:43:03.773853" level="INFO">Extracted CNAME from EDS: alhxvdvitap01</msg>
<msg time="2025-10-05T15:43:03.773877" level="INFO">Extracted domain from EDS: gnscet.com</msg>
<msg time="2025-10-05T15:43:03.773907" level="INFO">Extracted CPU cores from EDS: 8</msg>
<msg time="2025-10-05T15:43:03.773934" level="INFO">Extracted RAM from EDS: 16</msg>
<msg time="2025-10-05T15:43:03.773959" level="INFO">Extracted storage type from EDS: VSAN</msg>
<msg time="2025-10-05T15:43:03.774000" level="INFO">Extracted storage total TB from EDS: 0.465</msg>
<msg time="2025-10-05T15:43:03.774025" level="INFO">Extracted drive/volume group from EDS: rootvg:</msg>
<msg time="2025-10-05T15:43:03.774050" level="INFO">Extracted file system from EDS: /dev/mapper/rootvg-rootlv</msg>
<msg time="2025-10-05T15:43:03.774074" level="INFO">Extracted logical volume/partition from EDS: /</msg>
<msg time="2025-10-05T15:43:03.774098" level="INFO">Extracted storage allocation GB from EDS: 20</msg>
<msg time="2025-10-05T15:43:03.774121" level="INFO">Extracted recommended storage allocation GB from EDS: 20</msg>
<msg time="2025-10-05T15:43:03.774143" level="INFO">Extracted drive purpose from EDS: OS</msg>
<msg time="2025-10-05T15:43:03.774165" level="INFO">Extracted OS type from EDS: RHEL 9.6</msg>
<msg time="2025-10-05T15:43:03.774190" level="INFO">EDS configuration for alhxvdvitap01: {'ip': '172.30.16.186', 'subnet': '10.26.216.0/24', 'mask': '255.255.255.0', 'gateway': '10.26.216.4', 'cname': 'alhxvdvitap01', 'domain': 'gnscet.com', 'cpu_cores': '8', 'ram': '16', 'storage_type': 'VSAN', 'storage_total_tb': '0.465', 'drive_volume_group': 'rootvg:', 'file_system': '/dev/mapper/rootvg-rootlv', 'logical_volume_partition': '/', 'storage_allocation_gb': '20', 'recommended_storage_gb': '20', 'drive_purpose': 'OS', 'os_type': 'RHEL 9.6'}</msg>
<msg time="2025-10-05T15:43:03.774334" level="INFO">${eds_config} = {'ip': '172.30.16.186', 'subnet': '10.26.216.0/24', 'mask': '255.255.255.0', 'gateway': '10.26.216.4', 'cname': 'alhxvdvitap01', 'domain': 'gnscet.com', 'cpu_cores': '8', 'ram': '16', 'storage_type': ...</msg>
<var>${eds_config}</var>
<arg>${TARGET_HOSTNAME}</arg>
<doc>Lookup server configuration from EDS sheet based on hostname</doc>
<status status="PASS" start="2025-10-05T15:43:03.728597" elapsed="0.045764"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:43:03.775576" level="INFO">${TARGET_IP} = 172.30.16.186</msg>
<arg>${TARGET_IP}</arg>
<arg>${eds_config['ip']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:43:03.774698" elapsed="0.000975"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:03.776185" level="INFO">üìã Target Server: alhxvdvitap01</msg>
<arg>üìã Target Server: ${TARGET_HOSTNAME}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:03.775882" elapsed="0.000468"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:03.777154" level="INFO">üìã Target IP: 172.30.16.186</msg>
<arg>üìã Target IP: ${TARGET_IP}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:03.776877" elapsed="0.000404"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:03.777676" level="INFO">üîó Connecting to target server: 172.30.16.186...</msg>
<arg>üîó Connecting to target server: ${TARGET_IP}...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:03.777446" elapsed="0.000336"/>
</kw>
<kw name="Open Connection" owner="SSHLibrary">
<arg>${TARGET_IP}</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" start="2025-10-05T15:43:03.777927" elapsed="0.000232"/>
</kw>
<kw name="Login" owner="SSHLibrary">
<msg time="2025-10-05T15:43:03.778509" level="INFO">Logging into '172.30.16.186:22' as 'sac'.</msg>
<msg time="2025-10-05T15:43:05.841494" level="INFO">Read output: Welcome to Ubuntu 24.04.3 LTS (GNU/Linux 6.6.87.2-microsoft-standard-WSL2 x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/pro

 System information as of Sun Oct  5 15:43:04 CDT 2025

  System load:  0.48                Processes:             36
  Usage of /:   0.7% of 1006.85GB   Users logged in:       1
  Memory usage: 7%                  IPv4 address for eth0: 172.30.16.186
  Swap usage:   0%

 * Strictly confined Kubernetes makes edge and IoT secure. Learn how MicroK8s
   just raised the bar for easy, resilient and secure K8s cluster deployment.

   https://ubuntu.com/engage/secure-kubernetes-at-the-edge
Last login: Sun Oct  5 15:33:59 2025 from 172.30.16.186
[?2004hsac@alhxvdvitap01:~$</msg>
<arg>${SSH_USERNAME}</arg>
<arg>${SSH_PASSWORD}</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<status status="PASS" start="2025-10-05T15:43:03.778268" elapsed="2.063770"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:05.843204" level="INFO">‚úÖ SSH connection established successfully</msg>
<arg>‚úÖ SSH connection established successfully</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:05.842685" elapsed="0.000827"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:05.844487" level="INFO">‚úÖ Test-11 environment initialized</msg>
<arg>‚úÖ Test-11 environment initialized</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:05.844121" elapsed="0.000698"/>
</kw>
<doc>üèóÔ∏è Set up test environment for services validation</doc>
<status status="PASS" start="2025-10-05T15:43:03.725290" elapsed="2.119846"/>
</kw>
<test id="s1-s1-t1" name="Critical - Connect to Target Server" line="20">
<kw name="Log Test Start" owner="services_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:05.848930" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:05.848353" elapsed="0.000901"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:05.851353" level="INFO">üèÅ Starting Test: Critical - Connect to Target Server</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:05.851055" elapsed="0.000642"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:05.853222" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:05.852473" elapsed="0.000953"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:43:05.847270" elapsed="0.006518"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:05.854264" level="INFO">üîç Verifying SSH connection to target server...</msg>
<arg>üîç Verifying SSH connection to target server...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:05.854049" elapsed="0.000396"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:05.855549" level="INFO">üìã Target: alhxvdvitap01 (172.30.16.186)</msg>
<arg>üìã Target: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:05.855019" elapsed="0.000742"/>
</kw>
<kw name="Execute Command" owner="services_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:43:05.856981" level="INFO">Executing command 'echo "Connection active"'.</msg>
<msg time="2025-10-05T15:43:05.870897" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:43:05.871122" level="INFO">${output} = Connection active</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:43:05.856768" elapsed="0.014386"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:43:05.871238" elapsed="0.000070"/>
</return>
<msg time="2025-10-05T15:43:05.871484" level="INFO">${connection_status} = Connection active</msg>
<var>${connection_status}</var>
<arg>echo "Connection active"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:43:05.856248" elapsed="0.015264"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${connection_status}</arg>
<arg>Connection active</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-10-05T15:43:05.871693" elapsed="0.000222"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:05.872246" level="INFO">‚úÖ SSH connection verified and active</msg>
<arg>‚úÖ SSH connection verified and active</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:05.872090" elapsed="0.000266"/>
</kw>
<kw name="Log Test End" owner="services_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:05.873505" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:05.873284" elapsed="0.000362"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:05.874019" level="INFO">üèÅ Completed Test: Critical - Connect to Target Server | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:05.873786" elapsed="0.000341"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:05.874393" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:05.874252" elapsed="0.000236"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:43:05.872649" elapsed="0.001907"/>
</kw>
<doc>üîó Establish direct connection to target machine via SSH</doc>
<tag>connection</tag>
<tag>critical</tag>
<tag>infrastructure</tag>
<tag>ssh</tag>
<status status="PASS" start="2025-10-05T15:43:05.845596" elapsed="0.029012"/>
</test>
<test id="s1-s1-t2" name="Critical - List All Running Services" line="33">
<kw name="Log Test Start" owner="services_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:05.876350" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:05.875838" elapsed="0.000630"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:05.876775" level="INFO">üèÅ Starting Test: Critical - List All Running Services</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:05.876598" elapsed="0.000265"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:05.877062" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:05.876963" elapsed="0.000173"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:43:05.875460" elapsed="0.001731"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:05.877377" level="INFO">üîç Collecting complete service list from server...</msg>
<arg>üîç Collecting complete service list from server...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:05.877288" elapsed="0.000168"/>
</kw>
<kw name="Collect All Services Status" owner="services_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:05.877939" level="INFO">üìã Executing systemctl to collect all services...</msg>
<arg>üìã Executing systemctl to collect all services...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:05.877824" elapsed="0.000197"/>
</kw>
<kw name="Execute Command" owner="services_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:43:05.878489" level="INFO">Executing command 'systemctl list-units --type=service --all --no-pager --no-legend'.</msg>
<msg time="2025-10-05T15:43:05.941047" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:43:05.941607" level="INFO">${output} =   apparmor.service                         loaded    inactive dead    Load AppArmor profiles
  apport-autoreport.service                loaded    inactive dead    Process error reports when automatic ...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:43:05.878378" elapsed="0.063864"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:43:05.942527" elapsed="0.000118"/>
</return>
<msg time="2025-10-05T15:43:05.943095" level="INFO">${all_services} =   apparmor.service                         loaded    inactive dead    Load AppArmor profiles
  apport-autoreport.service                loaded    inactive dead    Process error reports when automatic ...</msg>
<var>${all_services}</var>
<arg>systemctl list-units --type=service --all --no-pager --no-legend</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:43:05.878165" elapsed="0.064988"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:43:05.943993" level="INFO">${ALL_SERVICES_OUTPUT} =   apparmor.service                         loaded    inactive dead    Load AppArmor profiles
  apport-autoreport.service                loaded    inactive dead    Process error reports when automatic ...</msg>
<arg>${ALL_SERVICES_OUTPUT}</arg>
<arg>${all_services}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:43:05.943536" elapsed="0.000542"/>
</kw>
<kw name="Execute Command" owner="services_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:43:05.944750" level="INFO">Executing command 'systemctl list-unit-files --type=service --state=enabled --no-pager --no-legend'.</msg>
<msg time="2025-10-05T15:43:06.669528" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:43:06.669768" level="INFO">${output} = apparmor.service                       enabled enabled
apport.service                         enabled enabled
cloud-config.service                   enabled enabled
cloud-final.service                ...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:43:05.944601" elapsed="0.725199"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:43:06.669892" elapsed="0.000055"/>
</return>
<msg time="2025-10-05T15:43:06.670119" level="INFO">${enabled_services} = apparmor.service                       enabled enabled
apport.service                         enabled enabled
cloud-config.service                   enabled enabled
cloud-final.service                ...</msg>
<var>${enabled_services}</var>
<arg>systemctl list-unit-files --type=service --state=enabled --no-pager --no-legend</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:43:05.944312" elapsed="0.725839"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:43:06.670705" level="INFO">${ENABLED_SERVICES_OUTPUT} = apparmor.service                       enabled enabled
apport.service                         enabled enabled
cloud-config.service                   enabled enabled
cloud-final.service                ...</msg>
<arg>${ENABLED_SERVICES_OUTPUT}</arg>
<arg>${enabled_services}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:43:06.670391" elapsed="0.000369"/>
</kw>
<kw name="Execute Command" owner="services_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:43:06.672231" level="INFO">Executing command 'systemctl list-units --type=service --state=active --no-pager --no-legend'.</msg>
<msg time="2025-10-05T15:43:06.726481" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:43:06.726674" level="INFO">${output} =   console-getty.service                    loaded active running Console Getty
  console-setup.service                    loaded active exited  Set console font and keymap
  cron.service              ...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:43:06.672023" elapsed="0.054678"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:43:06.726768" elapsed="0.000095"/>
</return>
<msg time="2025-10-05T15:43:06.727028" level="INFO">${active_services} =   console-getty.service                    loaded active running Console Getty
  console-setup.service                    loaded active exited  Set console font and keymap
  cron.service              ...</msg>
<var>${active_services}</var>
<arg>systemctl list-units --type=service --state=active --no-pager --no-legend</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:43:06.671074" elapsed="0.055978"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:43:06.727410" level="INFO">${ACTIVE_SERVICES_OUTPUT} =   console-getty.service                    loaded active running Console Getty
  console-setup.service                    loaded active exited  Set console font and keymap
  cron.service              ...</msg>
<arg>${ACTIVE_SERVICES_OUTPUT}</arg>
<arg>${active_services}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:43:06.727208" elapsed="0.000280"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:06.728005" level="INFO">‚úÖ All services data collected</msg>
<arg>‚úÖ All services data collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:06.727684" elapsed="0.000463"/>
</kw>
<doc>üìã Execute systemctl to collect all services and their status</doc>
<status status="PASS" start="2025-10-05T15:43:05.877633" elapsed="0.850602"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-10-05T15:43:06.728459" level="INFO">Length is 11941.</msg>
<arg>${ALL_SERVICES_OUTPUT}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-10-05T15:43:06.728341" elapsed="0.000155"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-10-05T15:43:06.728894" level="INFO">Length is 1649.</msg>
<arg>${ENABLED_SERVICES_OUTPUT}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-10-05T15:43:06.728751" elapsed="0.000193"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:06.729966" level="INFO">üìã Total services collected: 14 entries</msg>
<arg>üìã Total services collected: ${ALL_SERVICES_OUTPUT.count('‚óè')} entries</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:06.729180" elapsed="0.000894"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:06.730381" level="INFO">‚úÖ Service list collected successfully</msg>
<arg>‚úÖ Service list collected successfully</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:06.730240" elapsed="0.000234"/>
</kw>
<kw name="Log Test End" owner="services_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:06.731126" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:06.731021" elapsed="0.000205"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:06.731646" level="INFO">üèÅ Completed Test: Critical - List All Running Services | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:06.731370" elapsed="0.000391"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:06.733023" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:06.732781" elapsed="0.000357"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:43:06.730729" elapsed="0.002486"/>
</kw>
<doc>üìã Execute systemctl to list all services and their current status</doc>
<tag>critical</tag>
<tag>data_collection</tag>
<tag>services</tag>
<tag>systemctl</tag>
<status status="PASS" start="2025-10-05T15:43:05.874905" elapsed="0.858359"/>
</test>
<test id="s1-s1-t3" name="Critical - Document Service Status to File" line="49">
<kw name="Log Test Start" owner="services_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:06.734625" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:06.734473" elapsed="0.000254"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:06.735006" level="INFO">üèÅ Starting Test: Critical - Document Service Status to File</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:06.734847" elapsed="0.000259"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:06.735337" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:06.735222" elapsed="0.000203"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:43:06.734173" elapsed="0.001325"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:06.735728" level="INFO">üîç Saving service status documentation...</msg>
<arg>üîç Saving service status documentation...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:06.735612" elapsed="0.000269"/>
</kw>
<kw name="Save Services Status to File" owner="services_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:06.736530" level="INFO">üíæ Saving service status to file...</msg>
<arg>üíæ Saving service status to file...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:06.736405" elapsed="0.000231"/>
</kw>
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:43:06.736991" level="INFO">${timestamp} = 20251005_154306</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:43:06.736763" elapsed="0.000257"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:43:06.737314" level="INFO">${service_file} = results/test11_services_validation/data/services_status_20251005_154306.txt</msg>
<var>${service_file}</var>
<arg>${DATA_DIR}/services_status_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:43:06.737130" elapsed="0.000210"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:43:06.738331" level="INFO">${service_report} = =========================================
=== Services Status Report ===
=========================================
Timestamp: 20251005_154306
Target Server: alhxvdvitap01 (172.30.16.186)

============...</msg>
<var>${service_report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== Services Status Report ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>=========================================</arg>
<arg>=== ALL SERVICES (systemctl list-units --type=service --all) ===</arg>
<arg>=========================================</arg>
<arg>${ALL_SERVICES_OUTPUT}</arg>
<arg>=========================================</arg>
<arg>=== ENABLED SERVICES (systemctl list-unit-files --state=enabled) ===</arg>
<arg>=========================================</arg>
<arg>${ENABLED_SERVICES_OUTPUT}</arg>
<arg>=========================================</arg>
<arg>=== ACTIVE/RUNNING SERVICES (systemctl list-units --state=active) ===</arg>
<arg>=========================================</arg>
<arg>${ACTIVE_SERVICES_OUTPUT}</arg>
<arg>=========================================</arg>
<arg>=== REQUIRED SERVICES CHECK ===</arg>
<arg>=========================================</arg>
<arg>Required services that must be ENABLED:</arg>
<arg>- autofs</arg>
<arg>- sshd</arg>
<arg>- sssd</arg>
<arg>- chronyd</arg>
<arg>- ntpd</arg>
<arg>- syslog (rsyslog/syslog-ng)</arg>
<arg>Services that must be DISABLED:</arg>
<arg>- iptables</arg>
<arg>- selinux (check with getenforce command)</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:43:06.737441" elapsed="0.001033"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:43:06.745139" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test11_services_validation/data/services_status_20251005_154306.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test11_services_validation/data/services_status_20251005_154306.txt&lt;/a&gt;'.</msg>
<arg>${service_file}</arg>
<arg>${service_report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:43:06.738803" elapsed="0.006442"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:06.745644" level="INFO">üìÑ Service status saved to: results/test11_services_validation/data/services_status_20251005_154306.txt</msg>
<arg>üìÑ Service status saved to: ${service_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:06.745408" elapsed="0.000362"/>
</kw>
<return>
<value>${service_file}</value>
<status status="PASS" start="2025-10-05T15:43:06.745859" elapsed="0.000052"/>
</return>
<msg time="2025-10-05T15:43:06.746072" level="INFO">${service_file} = results/test11_services_validation/data/services_status_20251005_154306.txt</msg>
<var>${service_file}</var>
<doc>üíæ Save complete service status to file for compliance review</doc>
<status status="PASS" start="2025-10-05T15:43:06.736162" elapsed="0.009935"/>
</kw>
<kw name="File Should Exist" owner="SSHLibrary">
<msg time="2025-10-05T15:43:06.746209" level="WARN">Keyword 'File Should Exist' found both from a custom library 'SSHLibrary' and a standard library 'OperatingSystem'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'SSHLibrary.File Should Exist' or 'OperatingSystem.File Should Exist'.</msg>
<msg time="2025-10-05T15:43:06.772098" level="INFO">[chan 5] Opened sftp connection (server version 3)</msg>
<msg time="2025-10-05T15:43:06.774074" level="FAIL">File 'results/test11_services_validation/data/services_status_20251005_154306.txt' does not exist.</msg>
<arg>${service_file}</arg>
<doc>Fails if the given ``path`` does NOT point to an existing file.</doc>
<status status="FAIL" start="2025-10-05T15:43:06.746248" elapsed="0.035175">File 'results/test11_services_validation/data/services_status_20251005_154306.txt' does not exist.</status>
</kw>
<kw name="Get File Size" owner="services_keywords">
<var>${file_size}</var>
<arg>${service_file}</arg>
<doc>üìè Get size of a file in bytes</doc>
<status status="NOT RUN" start="2025-10-05T15:43:06.783563" elapsed="0.000044"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${file_size} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="NOT RUN" start="2025-10-05T15:43:06.783797" elapsed="0.000023"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>üìÑ Service status saved to: ${service_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:43:06.783945" elapsed="0.000020"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>üìÑ File size: ${file_size} bytes</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:43:06.784122" elapsed="0.000021"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>‚úÖ Service documentation saved successfully</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:43:06.784234" elapsed="0.000016"/>
</kw>
<kw name="Log Test End" owner="services_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:06.785466" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:06.785315" elapsed="0.000276"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:06.785899" level="INFO">üèÅ Completed Test: Critical - Document Service Status to File | Status: FAIL</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:06.785713" elapsed="0.000284"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:06.786250" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:06.786127" elapsed="0.000204"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:43:06.784563" elapsed="0.001828"/>
</kw>
<doc>üíæ Save complete service list output to file for compliance review</doc>
<tag>compliance</tag>
<tag>critical</tag>
<tag>documentation</tag>
<tag>file_output</tag>
<status status="FAIL" start="2025-10-05T15:43:06.733565" elapsed="0.052866">File 'results/test11_services_validation/data/services_status_20251005_154306.txt' does not exist.</status>
</test>
<test id="s1-s1-t4" name="Critical - Validate Required Services Enabled" line="67">
<kw name="Log Test Start" owner="services_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:06.787489" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:06.787360" elapsed="0.000228"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:06.787825" level="INFO">üèÅ Starting Test: Critical - Validate Required Services Enabled</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:06.787681" elapsed="0.000221"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:06.788094" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:06.787996" elapsed="0.000178"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:43:06.787137" elapsed="0.001089"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:06.788405" level="INFO">üîç Validating required services are enabled...</msg>
<arg>üîç Validating required services are enabled...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:06.788317" elapsed="0.000165"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:06.788697" level="INFO">üìã Required services: ['autofs', 'sshd', 'sssd', 'chronyd', 'ntpd', 'syslog']</msg>
<arg>üìã Required services: ${REQUIRED_SERVICES_ENABLED}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:06.788569" elapsed="0.000202"/>
</kw>
<kw name="Validate Required Services Are Enabled" owner="services_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:06.789243" level="INFO">‚úÖ Validating required services are enabled...</msg>
<arg>‚úÖ Validating required services are enabled...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:06.789157" elapsed="0.000161"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-05T15:43:06.790229" level="INFO">${validation_results} = {}</msg>
<var>${validation_results}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-05T15:43:06.789422" elapsed="0.000861"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:06.791005" level="INFO">üîç Checking service: autofs</msg>
<arg>üîç Checking service: ${service}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:06.790737" elapsed="0.000503"/>
</kw>
<kw name="Check Service Is Enabled" owner="services_keywords">
<kw name="Execute Command" owner="services_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:43:06.793251" level="INFO">Executing command 'systemctl is-enabled autofs 2&gt;/dev/null || echo "not-found"'.</msg>
<msg time="2025-10-05T15:43:06.820521" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:43:06.820894" level="INFO">${output} = not-found
not-found</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:43:06.792909" elapsed="0.028036"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:43:06.821146" elapsed="0.000099"/>
</return>
<msg time="2025-10-05T15:43:06.821576" level="INFO">${status1} = not-found
not-found</msg>
<var>${status1}</var>
<arg>systemctl is-enabled ${service_name} 2&gt;/dev/null || echo "not-found"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:43:06.792531" elapsed="0.029109"/>
</kw>
<kw name="Return From Keyword If" owner="BuiltIn">
<msg time="2025-10-05T15:43:06.822919" level="FAIL">Evaluating expression "'not-found\nnot-found' == 'enabled'" failed: SyntaxError: unterminated string literal (detected at line 1) (&lt;string&gt;, line 1)</msg>
<arg>'${status1}' == 'enabled'</arg>
<arg>enabled</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="FAIL" start="2025-10-05T15:43:06.822364" elapsed="0.001031">Evaluating expression "'not-found\nnot-found' == 'enabled'" failed: SyntaxError: unterminated string literal (detected at line 1) (&lt;string&gt;, line 1)</status>
</kw>
<kw name="Execute Command" owner="services_keywords">
<var>${status2}</var>
<arg>systemctl is-enabled ${service_name}.service 2&gt;/dev/null || echo "not-found"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="NOT RUN" start="2025-10-05T15:43:06.824633" elapsed="0.000043"/>
</kw>
<kw name="Return From Keyword If" owner="BuiltIn">
<arg>'${status2}' == 'enabled'</arg>
<arg>enabled</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" start="2025-10-05T15:43:06.824848" elapsed="0.000027"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${is_syslog}</var>
<arg>'${service_name}' == 'syslog'</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2025-10-05T15:43:06.825025" elapsed="0.000026"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${is_syslog}</arg>
<arg>Return From Keyword If</arg>
<arg>${True}</arg>
<arg>${${Check Syslog Service}}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2025-10-05T15:43:06.825246" elapsed="0.000043"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${is_chronyd}</var>
<arg>'${service_name}' == 'chronyd'</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2025-10-05T15:43:06.825540" elapsed="0.000041"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<var>${status_chrony}</var>
<arg>${is_chronyd}</arg>
<arg>Execute Command</arg>
<arg>systemctl is-enabled chrony 2&gt;/dev/null || echo "not-found"</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2025-10-05T15:43:06.825884" elapsed="0.000050"/>
</kw>
<kw name="Return From Keyword If" owner="BuiltIn">
<arg>'${status_chrony}' == 'enabled'</arg>
<arg>enabled</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" start="2025-10-05T15:43:06.826106" elapsed="0.000024"/>
</kw>
<return>
<value>not-enabled</value>
<status status="NOT RUN" start="2025-10-05T15:43:06.826190" elapsed="0.000020"/>
</return>
<var>${is_enabled}</var>
<arg>${service}</arg>
<doc>üîç Check if a specific service is enabled (handles multiple service name variations)</doc>
<status status="FAIL" start="2025-10-05T15:43:06.791705" elapsed="0.034828">Evaluating expression "'not-found\nnot-found' == 'enabled'" failed: SyntaxError: unterminated string literal (detected at line 1) (&lt;string&gt;, line 1)</status>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${validation_results}</arg>
<arg>${service}=${is_enabled}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" start="2025-10-05T15:43:06.826945" elapsed="0.000058"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${is_enabled}' == 'enabled'</arg>
<arg>Log</arg>
<arg>‚úÖ ${service}: ENABLED</arg>
<arg>console=yes</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>‚ö†Ô∏è ${service}: NOT ENABLED or NOT FOUND</arg>
<arg>console=yes</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2025-10-05T15:43:06.827212" elapsed="0.000024"/>
</kw>
<var name="${service}">autofs</var>
<status status="FAIL" start="2025-10-05T15:43:06.790637" elapsed="0.036696">Evaluating expression "'not-found\nnot-found' == 'enabled'" failed: SyntaxError: unterminated string literal (detected at line 1) (&lt;string&gt;, line 1)</status>
</iter>
<var>${service}</var>
<value>@{REQUIRED_SERVICES_ENABLED}</value>
<status status="FAIL" start="2025-10-05T15:43:06.790443" elapsed="0.036995">Evaluating expression "'not-found\nnot-found' == 'enabled'" failed: SyntaxError: unterminated string literal (detected at line 1) (&lt;string&gt;, line 1)</status>
</for>
<return>
<value>${validation_results}</value>
<status status="NOT RUN" start="2025-10-05T15:43:06.827579" elapsed="0.000020"/>
</return>
<var>${validation_results}</var>
<doc>‚úÖ Validate that required services are enabled on the system</doc>
<status status="FAIL" start="2025-10-05T15:43:06.788959" elapsed="0.038849">Evaluating expression "'not-found\nnot-found' == 'enabled'" failed: SyntaxError: unterminated string literal (detected at line 1) (&lt;string&gt;, line 1)</status>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>üìä Required services validation:</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:43:06.827958" elapsed="0.000046"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Get From Dictionary" owner="Collections">
<var>${status}</var>
<arg>${validation_results}</arg>
<arg>${service}</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-10-05T15:43:06.828256" elapsed="0.000354"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>üìä - ${service}: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:43:06.828779" elapsed="0.000031"/>
</kw>
<var name="${service}"/>
<status status="NOT RUN" start="2025-10-05T15:43:06.828142" elapsed="0.000721"/>
</iter>
<var>${service}</var>
<value>@{REQUIRED_SERVICES_ENABLED}</value>
<status status="NOT RUN" start="2025-10-05T15:43:06.828065" elapsed="0.000840"/>
</for>
<kw name="Log" owner="BuiltIn">
<arg>‚úÖ Required services validation completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:43:06.829029" elapsed="0.000020"/>
</kw>
<kw name="Log Test End" owner="services_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:06.830334" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:06.830073" elapsed="0.000473"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:06.831043" level="INFO">üèÅ Completed Test: Critical - Validate Required Services Enabled | Status: FAIL</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:06.830734" elapsed="0.000473"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:06.831891" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:06.831413" elapsed="0.000637"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:43:06.829425" elapsed="0.002736"/>
</kw>
<doc>‚úÖ Verify required services (autofs, sshd, sssd, chronyd, ntpd, syslog) are enabled</doc>
<tag>critical</tag>
<tag>enabled</tag>
<tag>services</tag>
<tag>validation</tag>
<status status="FAIL" start="2025-10-05T15:43:06.786681" elapsed="0.045538">Evaluating expression "'not-found\nnot-found' == 'enabled'" failed: SyntaxError: unterminated string literal (detected at line 1) (&lt;string&gt;, line 1)</status>
</test>
<test id="s1-s1-t5" name="Critical - Validate Unnecessary Services Disabled" line="85">
<kw name="Log Test Start" owner="services_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:06.834528" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:06.833487" elapsed="0.001146"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:06.834926" level="INFO">üèÅ Starting Test: Critical - Validate Unnecessary Services Disabled</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:06.834766" elapsed="0.000256"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:06.835257" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:06.835133" elapsed="0.000212"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:43:06.833108" elapsed="0.002319"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:06.835697" level="INFO">üîç Validating unnecessary services are disabled...</msg>
<arg>üîç Validating unnecessary services are disabled...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:06.835566" elapsed="0.000310"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:06.836147" level="INFO">üìã Services to check: ['iptables', 'selinux']</msg>
<arg>üìã Services to check: ${REQUIRED_SERVICES_DISABLED}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:06.835984" elapsed="0.000254"/>
</kw>
<kw name="Validate Unnecessary Services Are Disabled" owner="services_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:06.836827" level="INFO">‚ùå Validating unnecessary services are disabled...</msg>
<arg>‚ùå Validating unnecessary services are disabled...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:06.836711" elapsed="0.000217"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-05T15:43:06.837235" level="INFO">${validation_results} = {}</msg>
<var>${validation_results}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-05T15:43:06.837063" elapsed="0.000220"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:06.838326" level="INFO">üîç Checking service: iptables</msg>
<arg>üîç Checking service: ${service}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:06.838029" elapsed="0.000490"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-05T15:43:06.839175" level="INFO">${is_selinux} = False</msg>
<var>${is_selinux}</var>
<arg>'${service}' == 'selinux'</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-05T15:43:06.838788" elapsed="0.000411"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Check Service Is Disabled" owner="services_keywords">
<kw name="Execute Command" owner="services_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:43:06.841561" level="INFO">Executing command 'systemctl is-enabled iptables 2&gt;/dev/null || echo "disabled"'.</msg>
<msg time="2025-10-05T15:43:06.878408" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:43:06.878717" level="INFO">${output} = not-found
disabled</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:43:06.841439" elapsed="0.037335"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:43:06.878901" elapsed="0.000078"/>
</return>
<msg time="2025-10-05T15:43:06.879312" level="INFO">${is_enabled} = not-found
disabled</msg>
<var>${is_enabled}</var>
<arg>systemctl is-enabled ${service_name} 2&gt;/dev/null || echo "disabled"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:43:06.841116" elapsed="0.038250"/>
</kw>
<kw name="Execute Command" owner="services_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:43:06.880764" level="INFO">Executing command 'systemctl is-active iptables 2&gt;/dev/null || echo "inactive"'.</msg>
<msg time="2025-10-05T15:43:06.934718" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:43:06.935059" level="INFO">${output} = inactive
inactive</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:43:06.880520" elapsed="0.054616"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:43:06.935257" elapsed="0.000068"/>
</return>
<msg time="2025-10-05T15:43:06.935629" level="INFO">${is_active} = inactive
inactive</msg>
<var>${is_active}</var>
<arg>systemctl is-active ${service_name} 2&gt;/dev/null || echo "inactive"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:43:06.879900" elapsed="0.055776"/>
</kw>
<kw name="Set Variable If" owner="BuiltIn">
<msg time="2025-10-05T15:43:06.936694" level="FAIL">Evaluating expression "'not-found\ndisabled' in ['disabled', 'masked'] and 'inactive\ninactive' == 'inactive'" failed: SyntaxError: unterminated string literal (detected at line 1) (&lt;string&gt;, line 1)</msg>
<var>${status}</var>
<arg>'${is_enabled}' in ['disabled', 'masked'] and '${is_active}' == 'inactive'</arg>
<arg>disabled</arg>
<arg>ELSE</arg>
<arg>active-or-enabled</arg>
<doc>Sets variable based on the given condition.</doc>
<status status="FAIL" start="2025-10-05T15:43:06.936029" elapsed="0.000912">Evaluating expression "'not-found\ndisabled' in ['disabled', 'masked'] and 'inactive\ninactive' == 'inactive'" failed: SyntaxError: unterminated string literal (detected at line 1) (&lt;string&gt;, line 1)</status>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${results_dict}</arg>
<arg>${service_name}=${status}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" start="2025-10-05T15:43:06.937287" elapsed="0.000501"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${status}' == 'disabled'</arg>
<arg>Log</arg>
<arg>‚úÖ ${service_name}: DISABLED</arg>
<arg>console=yes</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>‚ö†Ô∏è ${service_name}: ACTIVE or ENABLED (enabled=${is_enabled}, active=${is_active})</arg>
<arg>console=yes</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2025-10-05T15:43:06.938179" elapsed="0.000052"/>
</kw>
<arg>${service}</arg>
<arg>${validation_results}</arg>
<doc>üîç Check if a service is disabled or inactive</doc>
<status status="FAIL" start="2025-10-05T15:43:06.840650" elapsed="0.097842">Evaluating expression "'not-found\ndisabled' in ['disabled', 'masked'] and 'inactive\ninactive' == 'inactive'" failed: SyntaxError: unterminated string literal (detected at line 1) (&lt;string&gt;, line 1)</status>
</kw>
<arg>${is_selinux}</arg>
<arg>Check SELinux Status</arg>
<arg>${validation_results}</arg>
<arg>ELSE</arg>
<arg>Check Service Is Disabled</arg>
<arg>${service}</arg>
<arg>${validation_results}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="FAIL" start="2025-10-05T15:43:06.839851" elapsed="0.098754">Evaluating expression "'not-found\ndisabled' in ['disabled', 'masked'] and 'inactive\ninactive' == 'inactive'" failed: SyntaxError: unterminated string literal (detected at line 1) (&lt;string&gt;, line 1)</status>
</kw>
<var name="${service}">iptables</var>
<status status="FAIL" start="2025-10-05T15:43:06.837805" elapsed="0.102057">Evaluating expression "'not-found\ndisabled' in ['disabled', 'masked'] and 'inactive\ninactive' == 'inactive'" failed: SyntaxError: unterminated string literal (detected at line 1) (&lt;string&gt;, line 1)</status>
</iter>
<var>${service}</var>
<value>@{REQUIRED_SERVICES_DISABLED}</value>
<status status="FAIL" start="2025-10-05T15:43:06.837452" elapsed="0.102601">Evaluating expression "'not-found\ndisabled' in ['disabled', 'masked'] and 'inactive\ninactive' == 'inactive'" failed: SyntaxError: unterminated string literal (detected at line 1) (&lt;string&gt;, line 1)</status>
</for>
<return>
<value>${validation_results}</value>
<status status="NOT RUN" start="2025-10-05T15:43:06.940218" elapsed="0.000046"/>
</return>
<var>${validation_results}</var>
<doc>‚ùå Validate that unnecessary services are disabled</doc>
<status status="FAIL" start="2025-10-05T15:43:06.836505" elapsed="0.103950">Evaluating expression "'not-found\ndisabled' in ['disabled', 'masked'] and 'inactive\ninactive' == 'inactive'" failed: SyntaxError: unterminated string literal (detected at line 1) (&lt;string&gt;, line 1)</status>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>üìä Unnecessary services validation:</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:43:06.940795" elapsed="0.000059"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Get From Dictionary" owner="Collections">
<var>${status}</var>
<arg>${validation_results}</arg>
<arg>${service}</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-10-05T15:43:06.941364" elapsed="0.000060"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>üìä - ${service}: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:43:06.941701" elapsed="0.000043"/>
</kw>
<var name="${service}"/>
<status status="NOT RUN" start="2025-10-05T15:43:06.941143" elapsed="0.000681"/>
</iter>
<var>${service}</var>
<value>@{REQUIRED_SERVICES_DISABLED}</value>
<status status="NOT RUN" start="2025-10-05T15:43:06.940985" elapsed="0.000897"/>
</for>
<kw name="Log" owner="BuiltIn">
<arg>‚úÖ Unnecessary services validation completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:43:06.942157" elapsed="0.000037"/>
</kw>
<kw name="Log Test End" owner="services_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:06.943370" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:06.943183" elapsed="0.000379"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:06.944080" level="INFO">üèÅ Completed Test: Critical - Validate Unnecessary Services Disabled | Status: FAIL</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:06.943828" elapsed="0.000384"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:06.944559" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:06.944367" elapsed="0.000321"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:43:06.942750" elapsed="0.002045"/>
</kw>
<doc>‚ùå Verify unnecessary services (iptables, selinux) are disabled</doc>
<tag>critical</tag>
<tag>disabled</tag>
<tag>security</tag>
<tag>services</tag>
<tag>validation</tag>
<status status="FAIL" start="2025-10-05T15:43:06.832525" elapsed="0.112347">Evaluating expression "'not-found\ndisabled' in ['disabled', 'masked'] and 'inactive\ninactive' == 'inactive'" failed: SyntaxError: unterminated string literal (detected at line 1) (&lt;string&gt;, line 1)</status>
</test>
<test id="s1-s1-t6" name="Normal - Service Dependency Analysis" line="103">
<kw name="Log Test Start" owner="services_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:06.946448" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:06.946293" elapsed="0.000260"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:06.946897" level="INFO">üèÅ Starting Test: Normal - Service Dependency Analysis</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:06.946711" elapsed="0.000293"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:06.947294" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:06.947141" elapsed="0.000269"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:43:06.945990" elapsed="0.001638"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:06.948328" level="INFO">üîç Analyzing service dependencies...</msg>
<arg>üîç Analyzing service dependencies...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:06.948156" elapsed="0.000337"/>
</kw>
<kw name="Execute Command" owner="services_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:43:06.949334" level="INFO">Executing command 'systemctl list-dependencies sshd.service | head -20'.</msg>
<msg time="2025-10-05T15:43:06.981927" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:43:06.982134" level="INFO">${output} = sshd.service</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:43:06.949157" elapsed="0.033003"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:43:06.982242" elapsed="0.000051"/>
</return>
<msg time="2025-10-05T15:43:06.982445" level="INFO">${sshd_deps} = sshd.service</msg>
<var>${sshd_deps}</var>
<arg>systemctl list-dependencies sshd.service | head -20</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:43:06.948764" elapsed="0.033703"/>
</kw>
<kw name="Execute Command" owner="services_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:43:06.983525" level="INFO">Executing command 'systemctl list-dependencies chronyd.service 2&gt;/dev/null | head -20 || echo "chronyd not found"'.</msg>
<msg time="2025-10-05T15:43:07.048678" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:43:07.048956" level="INFO">${output} = chronyd.service</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:43:06.983177" elapsed="0.067057"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:43:07.050618" elapsed="0.000121"/>
</return>
<msg time="2025-10-05T15:43:07.051151" level="INFO">${chronyd_deps} = chronyd.service</msg>
<var>${chronyd_deps}</var>
<arg>systemctl list-dependencies chronyd.service 2&gt;/dev/null | head -20 || echo "chronyd not found"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:43:06.982694" elapsed="0.068511"/>
</kw>
<kw name="Execute Command" owner="services_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:43:07.052682" level="INFO">Executing command 'systemctl list-dependencies sssd.service 2&gt;/dev/null | head -20 || echo "sssd not found"'.</msg>
<msg time="2025-10-05T15:43:07.121075" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:43:07.121304" level="INFO">${output} = sssd.service</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:43:07.052408" elapsed="0.068927"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:43:07.121418" elapsed="0.000047"/>
</return>
<msg time="2025-10-05T15:43:07.121752" level="INFO">${sssd_deps} = sssd.service</msg>
<var>${sssd_deps}</var>
<arg>systemctl list-dependencies sssd.service 2&gt;/dev/null | head -20 || echo "sssd not found"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:43:07.051673" elapsed="0.070126"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:07.122406" level="INFO">üìä SSHD Dependencies: sshd.service</msg>
<arg>üìä SSHD Dependencies: ${sshd_deps}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:07.122067" elapsed="0.000520"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:07.123095" level="INFO">üìä Chronyd Dependencies: chronyd.service</msg>
<arg>üìä Chronyd Dependencies: ${chronyd_deps}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:07.122813" elapsed="0.000437"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:07.123868" level="INFO">üìä SSSD Dependencies: sssd.service</msg>
<arg>üìä SSSD Dependencies: ${sssd_deps}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:07.123489" elapsed="0.000551"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:07.124524" level="INFO">‚ÑπÔ∏è Service dependency analysis completed</msg>
<arg>‚ÑπÔ∏è Service dependency analysis completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:07.124263" elapsed="0.000413"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:07.125097" level="INFO">‚úÖ Service dependency analysis: INFORMATIONAL</msg>
<arg>‚úÖ Service dependency analysis: INFORMATIONAL</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:07.124887" elapsed="0.000358"/>
</kw>
<kw name="Log Test End" owner="services_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:07.126689" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:07.126420" elapsed="0.000466"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:07.128293" level="INFO">üèÅ Completed Test: Normal - Service Dependency Analysis | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:07.127178" elapsed="0.001254"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:07.129076" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:07.128611" elapsed="0.000586"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:43:07.125666" elapsed="0.003635"/>
</kw>
<doc>üîó Analyze service dependencies and relationships</doc>
<tag>analysis</tag>
<tag>dependencies</tag>
<tag>normal</tag>
<tag>services</tag>
<status status="PASS" start="2025-10-05T15:43:06.945345" elapsed="0.184006"/>
</test>
<test id="s1-s1-t7" name="Normal - Failed Services Report" line="121">
<kw name="Log Test Start" owner="services_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:07.130820" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:07.130625" elapsed="0.000318"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:07.131276" level="INFO">üèÅ Starting Test: Normal - Failed Services Report</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:07.131100" elapsed="0.000293"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:07.132035" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:07.131639" elapsed="0.000503"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:43:07.130314" elapsed="0.001903"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:07.132419" level="INFO">üîç Checking for failed services...</msg>
<arg>üîç Checking for failed services...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:07.132322" elapsed="0.000188"/>
</kw>
<kw name="Execute Command" owner="services_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:43:07.133123" level="INFO">Executing command 'systemctl --failed --no-pager --no-legend'.</msg>
<msg time="2025-10-05T15:43:07.182918" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:43:07.183203" level="INFO">${output} = </msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:43:07.132986" elapsed="0.050258"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:43:07.183375" elapsed="0.000097"/>
</return>
<msg time="2025-10-05T15:43:07.183861" level="INFO">${failed_services} = </msg>
<var>${failed_services}</var>
<arg>systemctl --failed --no-pager --no-legend</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:43:07.132704" elapsed="0.051216"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:07.186576" level="INFO">‚úÖ No failed services detected</msg>
<arg>‚úÖ No failed services detected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:07.186159" elapsed="0.000661"/>
</kw>
<arg>'${failed_services}' == ''</arg>
<arg>Log</arg>
<arg>‚úÖ No failed services detected</arg>
<arg>console=yes</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>‚ö†Ô∏è Failed services detected:\n${failed_services}</arg>
<arg>console=yes</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-05T15:43:07.185291" elapsed="0.001690"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${failed_services}' != ''</arg>
<arg>Save Failed Services Report</arg>
<arg>${failed_services}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-05T15:43:07.187398" elapsed="0.000463"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:07.188379" level="INFO">‚ÑπÔ∏è Failed services check completed</msg>
<arg>‚ÑπÔ∏è Failed services check completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:07.188060" elapsed="0.000571"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:07.188997" level="INFO">‚úÖ Failed services report: INFORMATIONAL</msg>
<arg>‚úÖ Failed services report: INFORMATIONAL</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:07.188826" elapsed="0.000301"/>
</kw>
<kw name="Log Test End" owner="services_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:07.190233" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:07.190011" elapsed="0.000378"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:07.190858" level="INFO">üèÅ Completed Test: Normal - Failed Services Report | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:07.190613" elapsed="0.000401"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:07.191390" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:07.191163" elapsed="0.000377"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:43:07.189519" elapsed="0.002155"/>
</kw>
<doc>‚ö†Ô∏è Identify and report any failed services on the system</doc>
<tag>failed</tag>
<tag>monitoring</tag>
<tag>normal</tag>
<tag>troubleshooting</tag>
<status status="PASS" start="2025-10-05T15:43:07.129706" elapsed="0.062099"/>
</test>
<test id="s1-s1-t8" name="Normal - Service Startup Time Analysis" line="139">
<kw name="Log Test Start" owner="services_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:07.193689" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:07.193531" elapsed="0.000273"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:07.194191" level="INFO">üèÅ Starting Test: Normal - Service Startup Time Analysis</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:07.194008" elapsed="0.000285"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:07.194554" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:07.194415" elapsed="0.000230"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:43:07.193136" elapsed="0.001575"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:07.194973" level="INFO">üîç Analyzing service startup times...</msg>
<arg>üîç Analyzing service startup times...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:07.194854" elapsed="0.000237"/>
</kw>
<kw name="Execute Command" owner="services_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:43:07.195925" level="INFO">Executing command 'systemd-analyze time 2&gt;/dev/null || echo "systemd-analyze not available"'.</msg>
<msg time="2025-10-05T15:43:07.249885" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:43:07.250106" level="INFO">${output} = Startup finished in 2.752s (userspace) 
graphical.target reached after 2.700s in userspace.</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:43:07.195707" elapsed="0.054433"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:43:07.250224" elapsed="0.000065"/>
</return>
<msg time="2025-10-05T15:43:07.250501" level="INFO">${boot_time} = Startup finished in 2.752s (userspace) 
graphical.target reached after 2.700s in userspace.</msg>
<var>${boot_time}</var>
<arg>systemd-analyze time 2&gt;/dev/null || echo "systemd-analyze not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:43:07.195330" elapsed="0.055201"/>
</kw>
<kw name="Execute Command" owner="services_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:43:07.251259" level="INFO">Executing command 'systemd-analyze blame 2&gt;/dev/null | head -20 || echo "systemd-analyze not available"'.</msg>
<msg time="2025-10-05T15:43:11.198287" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:43:11.198672" level="INFO">${output} = 1.538s landscape-client.service
 465ms snapd.seeded.service
 381ms dev-sdd.device
 334ms snapd.service
 321ms user@1000.service
 279ms wsl-pro.service
 269ms systemd-resolved.service
 198ms systemd-tm...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:43:07.251113" elapsed="3.947605"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:43:11.198843" elapsed="0.000077"/>
</return>
<msg time="2025-10-05T15:43:11.199179" level="INFO">${slow_services} = 1.538s landscape-client.service
 465ms snapd.seeded.service
 381ms dev-sdd.device
 334ms snapd.service
 321ms user@1000.service
 279ms wsl-pro.service
 269ms systemd-resolved.service
 198ms systemd-tm...</msg>
<var>${slow_services}</var>
<arg>systemd-analyze blame 2&gt;/dev/null | head -20 || echo "systemd-analyze not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:43:07.250768" elapsed="3.948450"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:11.207354" level="INFO">‚è±Ô∏è Boot Time Analysis: Startup finished in 2.752s (userspace) 
graphical.target reached after 2.700s in userspace.</msg>
<arg>‚è±Ô∏è Boot Time Analysis: ${boot_time}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:11.199545" elapsed="0.008043"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:11.208402" level="INFO">üìä Slowest Services:
1.538s landscape-client.service
 465ms snapd.seeded.service
 381ms dev-sdd.device
 334ms snapd.service
 321ms user@1000.service
 279ms wsl-pro.service
 269ms systemd-resolved.service
 198ms systemd-tmpfiles-clean.service
 152ms systemd-udev-trigger.service
 134ms systemd-timesyncd.service
 123ms rsyslog.service
 120ms systemd-journal-flush.service
 112ms systemd-udevd.service
  90ms systemd-tmpfiles-setup.service
  85ms keyboard-setup.service
  82ms systemd-logind.service
  80ms polkit.service
  70ms systemd-journald.service
  68ms e2scrub_reap.service
  52ms dbus.service</msg>
<arg>üìä Slowest Services:\n${slow_services}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:11.207954" elapsed="0.000636"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:11.209547" level="INFO">‚ÑπÔ∏è Service startup time analysis completed</msg>
<arg>‚ÑπÔ∏è Service startup time analysis completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:11.208863" elapsed="0.000854"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:11.210217" level="INFO">‚úÖ Service startup analysis: INFORMATIONAL</msg>
<arg>‚úÖ Service startup analysis: INFORMATIONAL</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:11.209969" elapsed="0.000444"/>
</kw>
<kw name="Log Test End" owner="services_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:11.211503" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:11.211328" elapsed="0.000312"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:11.212045" level="INFO">üèÅ Completed Test: Normal - Service Startup Time Analysis | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:11.211804" elapsed="0.000358"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:11.212501" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:11.212327" elapsed="0.000287"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:43:11.210814" elapsed="0.001914"/>
</kw>
<doc>‚è±Ô∏è Analyze system boot time and service startup performance</doc>
<tag>boot</tag>
<tag>normal</tag>
<tag>performance</tag>
<tag>timing</tag>
<status status="PASS" start="2025-10-05T15:43:07.192384" elapsed="4.020407"/>
</test>
<test id="s1-s1-t9" name="Normal - Security Services Status" line="155">
<kw name="Log Test Start" owner="services_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:11.214527" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:11.214290" elapsed="0.000387"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:11.215068" level="INFO">üèÅ Starting Test: Normal - Security Services Status</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:11.214848" elapsed="0.009410"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:11.224950" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:11.224601" elapsed="0.014624"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:43:11.213879" elapsed="0.025579"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:11.240068" level="INFO">üîç Checking security services status...</msg>
<arg>üîç Checking security services status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:11.239755" elapsed="0.000510"/>
</kw>
<kw name="Execute Command" owner="services_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:43:11.241432" level="INFO">Executing command 'getenforce 2&gt;/dev/null || echo "SELinux not available"'.</msg>
<msg time="2025-10-05T15:43:11.254379" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:43:11.254642" level="INFO">${output} = SELinux not available</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:43:11.241217" elapsed="0.013475"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:43:11.254802" elapsed="0.000070"/>
</return>
<msg time="2025-10-05T15:43:11.255120" level="INFO">${selinux_status} = SELinux not available</msg>
<var>${selinux_status}</var>
<arg>getenforce 2&gt;/dev/null || echo "SELinux not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:43:11.240659" elapsed="0.014505"/>
</kw>
<kw name="Execute Command" owner="services_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:43:11.256265" level="INFO">Executing command 'systemctl is-active iptables 2&gt;/dev/null || echo "inactive"'.</msg>
<msg time="2025-10-05T15:43:11.303025" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:43:11.303247" level="INFO">${output} = inactive
inactive</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:43:11.256036" elapsed="0.047240"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:43:11.303360" elapsed="0.000051"/>
</return>
<msg time="2025-10-05T15:43:11.303566" level="INFO">${iptables_status} = inactive
inactive</msg>
<var>${iptables_status}</var>
<arg>systemctl is-active iptables 2&gt;/dev/null || echo "inactive"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:43:11.255506" elapsed="0.048083"/>
</kw>
<kw name="Execute Command" owner="services_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:43:11.304249" level="INFO">Executing command 'systemctl is-active firewalld 2&gt;/dev/null || echo "inactive"'.</msg>
<msg time="2025-10-05T15:43:11.373114" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:43:11.373423" level="INFO">${output} = inactive
inactive</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:43:11.304114" elapsed="0.082621"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:43:11.386905" elapsed="0.000084"/>
</return>
<msg time="2025-10-05T15:43:11.387277" level="INFO">${firewalld_status} = inactive
inactive</msg>
<var>${firewalld_status}</var>
<arg>systemctl is-active firewalld 2&gt;/dev/null || echo "inactive"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:43:11.303812" elapsed="0.083507"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:11.387887" level="INFO">üîí SELinux Status: SELinux not available</msg>
<arg>üîí SELinux Status: ${selinux_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:11.387569" elapsed="0.000493"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:11.388552" level="INFO">üîí iptables Status: inactive
inactive</msg>
<arg>üîí iptables Status: ${iptables_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:11.388272" elapsed="0.000411"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:11.389067" level="INFO">üîí firewalld Status: inactive
inactive</msg>
<arg>üîí firewalld Status: ${firewalld_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:11.388854" elapsed="0.000332"/>
</kw>
<kw name="Should Contain Any" owner="BuiltIn">
<arg>${selinux_status}</arg>
<arg>Disabled</arg>
<arg>Permissive</arg>
<arg>not available</arg>
<arg>‚ö†Ô∏è SELinux should be disabled but shows: ${selinux_status}</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" start="2025-10-05T15:43:11.389353" elapsed="0.000263"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:11.389949" level="INFO">‚ÑπÔ∏è Security services status check completed</msg>
<arg>‚ÑπÔ∏è Security services status check completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:11.389774" elapsed="0.000291"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:11.390496" level="INFO">‚úÖ Security services status: DOCUMENTED</msg>
<arg>‚úÖ Security services status: DOCUMENTED</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:11.390282" elapsed="0.000325"/>
</kw>
<kw name="Log Test End" owner="services_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:11.391519" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:11.391363" elapsed="0.000275"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:11.392083" level="INFO">üèÅ Completed Test: Normal - Security Services Status | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:11.391828" elapsed="0.000445"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:11.392644" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:11.392449" elapsed="0.000319"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:43:11.390923" elapsed="0.001940"/>
</kw>
<doc>üîí Check status of security-related services and configurations</doc>
<tag>firewall</tag>
<tag>normal</tag>
<tag>security</tag>
<tag>selinux</tag>
<status status="PASS" start="2025-10-05T15:43:11.213145" elapsed="0.179785"/>
</test>
<kw name="Close All SSH Connections" owner="services_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:11.403878" level="INFO">üîå Closing SSH connections...</msg>
<arg>üîå Closing SSH connections...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:11.403560" elapsed="0.000550"/>
</kw>
<kw name="Close All Connections" owner="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" start="2025-10-05T15:43:11.404354" elapsed="0.001151"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:11.405917" level="INFO">‚úÖ SSH connections closed</msg>
<arg>‚úÖ SSH connections closed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:11.405704" elapsed="0.000351"/>
</kw>
<doc>üîå Close all SSH connections</doc>
<status status="PASS" start="2025-10-05T15:43:11.402554" elapsed="0.003615"/>
</kw>
<doc>‚öôÔ∏è Services Validation Test Suite - Test-11
üîç Process: Find hostname in EDS ‚Üí SSH to server ‚Üí Collect service status data ‚Üí Document all running services
‚úÖ Validates: Required services (autofs, sshd, sssd, chronyd, ntpd, syslog) are enabled
‚ùå Validates: Unnecessary services (iptables, selinux) are disabled
üìä Documents complete service list for manual compliance review</doc>
<status status="FAIL" start="2025-10-05T15:42:49.281326" elapsed="22.124900"/>
</suite>
<suite id="s1-s2" name="Mail Configuration" source="/mnt/c/Users/sacpa/Projects/robot/robotframework/tests/test17_mail_configuration/mail_configuration.robot">
<kw name="Initialize Mail Test Environment" owner="mail_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:33.340680" level="INFO">üöÄ Initializing Test-17: Mail Configuration Validation Environment...</msg>
<arg>üöÄ Initializing Test-17: Mail Configuration Validation Environment...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:33.340435" elapsed="0.000392"/>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2025-10-05T15:43:33.342184" level="INFO" html="true">Directory '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test17_mail_configuration/data"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test17_mail_configuration/data&lt;/a&gt;' already exists.</msg>
<arg>${DATA_DIR}</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2025-10-05T15:43:33.340993" elapsed="0.001288"/>
</kw>
<kw name="Lookup Server Config" owner="EDSLookup">
<msg time="2025-10-05T15:43:33.381416" level="INFO">Found matching row for hostname 'alhxvdvitap01'</msg>
<msg time="2025-10-05T15:43:33.381811" level="INFO">Extracted IP from EDS: 172.30.16.186</msg>
<msg time="2025-10-05T15:43:33.381896" level="INFO">Extracted subnet from EDS: 10.26.216.0/24</msg>
<msg time="2025-10-05T15:43:33.381957" level="INFO">Extracted mask from EDS: 255.255.255.0</msg>
<msg time="2025-10-05T15:43:33.382002" level="INFO">Extracted gateway from EDS: 10.26.216.4</msg>
<msg time="2025-10-05T15:43:33.382044" level="INFO">Extracted CNAME from EDS: alhxvdvitap01</msg>
<msg time="2025-10-05T15:43:33.382086" level="INFO">Extracted domain from EDS: gnscet.com</msg>
<msg time="2025-10-05T15:43:33.382132" level="INFO">Extracted CPU cores from EDS: 8</msg>
<msg time="2025-10-05T15:43:33.382172" level="INFO">Extracted RAM from EDS: 16</msg>
<msg time="2025-10-05T15:43:33.382220" level="INFO">Extracted storage type from EDS: VSAN</msg>
<msg time="2025-10-05T15:43:33.382281" level="INFO">Extracted storage total TB from EDS: 0.465</msg>
<msg time="2025-10-05T15:43:33.382331" level="INFO">Extracted drive/volume group from EDS: rootvg:</msg>
<msg time="2025-10-05T15:43:33.382390" level="INFO">Extracted file system from EDS: /dev/mapper/rootvg-rootlv</msg>
<msg time="2025-10-05T15:43:33.382428" level="INFO">Extracted logical volume/partition from EDS: /</msg>
<msg time="2025-10-05T15:43:33.382466" level="INFO">Extracted storage allocation GB from EDS: 20</msg>
<msg time="2025-10-05T15:43:33.382504" level="INFO">Extracted recommended storage allocation GB from EDS: 20</msg>
<msg time="2025-10-05T15:43:33.382539" level="INFO">Extracted drive purpose from EDS: OS</msg>
<msg time="2025-10-05T15:43:33.382612" level="INFO">Extracted OS type from EDS: RHEL 9.6</msg>
<msg time="2025-10-05T15:43:33.382675" level="INFO">EDS configuration for alhxvdvitap01: {'ip': '172.30.16.186', 'subnet': '10.26.216.0/24', 'mask': '255.255.255.0', 'gateway': '10.26.216.4', 'cname': 'alhxvdvitap01', 'domain': 'gnscet.com', 'cpu_cores': '8', 'ram': '16', 'storage_type': 'VSAN', 'storage_total_tb': '0.465', 'drive_volume_group': 'rootvg:', 'file_system': '/dev/mapper/rootvg-rootlv', 'logical_volume_partition': '/', 'storage_allocation_gb': '20', 'recommended_storage_gb': '20', 'drive_purpose': 'OS', 'os_type': 'RHEL 9.6'}</msg>
<msg time="2025-10-05T15:43:33.382909" level="INFO">${eds_config} = {'ip': '172.30.16.186', 'subnet': '10.26.216.0/24', 'mask': '255.255.255.0', 'gateway': '10.26.216.4', 'cname': 'alhxvdvitap01', 'domain': 'gnscet.com', 'cpu_cores': '8', 'ram': '16', 'storage_type': ...</msg>
<var>${eds_config}</var>
<arg>${TARGET_HOSTNAME}</arg>
<doc>Lookup server configuration from EDS sheet based on hostname</doc>
<status status="PASS" start="2025-10-05T15:43:33.342727" elapsed="0.040223"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:43:33.384699" level="INFO">${TARGET_IP} = 172.30.16.186</msg>
<arg>${TARGET_IP}</arg>
<arg>${eds_config['ip']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:43:33.383285" elapsed="0.001481"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:33.385140" level="INFO">üìã Target Server: alhxvdvitap01</msg>
<arg>üìã Target Server: ${TARGET_HOSTNAME}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:33.384920" elapsed="0.000340"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:33.385589" level="INFO">üìã Target IP: 172.30.16.186</msg>
<arg>üìã Target IP: ${TARGET_IP}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:33.385384" elapsed="0.000296"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:33.385956" level="INFO">üîó Connecting to target server: 172.30.16.186...</msg>
<arg>üîó Connecting to target server: ${TARGET_IP}...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:33.385791" elapsed="0.000255"/>
</kw>
<kw name="Open Connection" owner="SSHLibrary">
<arg>${TARGET_IP}</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" start="2025-10-05T15:43:33.386162" elapsed="0.000230"/>
</kw>
<kw name="Login" owner="SSHLibrary">
<msg time="2025-10-05T15:43:33.386661" level="INFO">Logging into '172.30.16.186:22' as 'sac'.</msg>
<msg time="2025-10-05T15:43:34.682720" level="INFO">Read output: Welcome to Ubuntu 24.04.3 LTS (GNU/Linux 6.6.87.2-microsoft-standard-WSL2 x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/pro

 System information as of Sun Oct  5 15:43:04 CDT 2025

  System load:  0.48                Processes:             36
  Usage of /:   0.7% of 1006.85GB   Users logged in:       1
  Memory usage: 7%                  IPv4 address for eth0: 172.30.16.186
  Swap usage:   0%

 * Strictly confined Kubernetes makes edge and IoT secure. Learn how MicroK8s
   just raised the bar for easy, resilient and secure K8s cluster deployment.

   https://ubuntu.com/engage/secure-kubernetes-at-the-edge
Last login: Sun Oct  5 15:43:04 2025 from 172.30.16.186
[?2004hsac@alhxvdvitap01:~$</msg>
<arg>${SSH_USERNAME}</arg>
<arg>${SSH_PASSWORD}</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<status status="PASS" start="2025-10-05T15:43:33.386487" elapsed="1.296528"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:34.683951" level="INFO">‚úÖ SSH connection established successfully</msg>
<arg>‚úÖ SSH connection established successfully</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:34.683469" elapsed="0.001115"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:34.685590" level="INFO">‚úÖ Test-17 environment initialized</msg>
<arg>‚úÖ Test-17 environment initialized</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:34.685171" elapsed="0.000777"/>
</kw>
<doc>üèóÔ∏è Set up test environment for mail configuration validation</doc>
<status status="PASS" start="2025-10-05T15:43:33.339146" elapsed="1.347068"/>
</kw>
<test id="s1-s2-t1" name="Critical - Connect to Target Server" line="20">
<kw name="Log Test Start" owner="mail_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:34.689678" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:34.689263" elapsed="0.002050"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:34.692287" level="INFO">üèÅ Starting Test: Critical - Connect to Target Server</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:34.691793" elapsed="0.000754"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:34.693836" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:34.692917" elapsed="0.001160"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:43:34.688585" elapsed="0.005903"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:34.695168" level="INFO">üîç Verifying SSH connection to target server...</msg>
<arg>üîç Verifying SSH connection to target server...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:34.694856" elapsed="0.000556"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:34.696195" level="INFO">üìã Target: alhxvdvitap01 (172.30.16.186)</msg>
<arg>üìã Target: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:34.695676" elapsed="0.000728"/>
</kw>
<kw name="Execute Command" owner="mail_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:43:34.697517" level="INFO">Executing command 'echo "Connection active"'.</msg>
<msg time="2025-10-05T15:43:34.711797" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:43:34.712150" level="INFO">${output} = Connection active</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:43:34.697283" elapsed="0.014914"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:43:34.712341" elapsed="0.000183"/>
</return>
<msg time="2025-10-05T15:43:34.712882" level="INFO">${connection_status} = Connection active</msg>
<var>${connection_status}</var>
<arg>echo "Connection active"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:43:34.696749" elapsed="0.016176"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${connection_status}</arg>
<arg>Connection active</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-10-05T15:43:34.713214" elapsed="0.000297"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:34.713919" level="INFO">‚úÖ SSH connection verified and active</msg>
<arg>‚úÖ SSH connection verified and active</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:34.713699" elapsed="0.000423"/>
</kw>
<kw name="Log Test End" owner="mail_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:34.715340" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:34.715136" elapsed="0.000334"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:34.715899" level="INFO">üèÅ Completed Test: Critical - Connect to Target Server | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:34.715628" elapsed="0.000339"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:34.716284" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:34.716122" elapsed="0.000226"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:43:34.714627" elapsed="0.001787"/>
</kw>
<doc>üîó Establish direct connection to target machine via SSH</doc>
<tag>connection</tag>
<tag>critical</tag>
<tag>infrastructure</tag>
<tag>ssh</tag>
<status status="PASS" start="2025-10-05T15:43:34.686503" elapsed="0.029966"/>
</test>
<test id="s1-s2-t2" name="Critical - Collect DNS MX Records" line="33">
<kw name="Log Test Start" owner="mail_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:34.718536" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:34.718289" elapsed="0.000353"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:34.718954" level="INFO">üèÅ Starting Test: Critical - Collect DNS MX Records</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:34.718772" elapsed="0.000247"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:34.719241" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:34.719129" elapsed="0.000201"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:43:34.717354" elapsed="0.002039"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:34.719612" level="INFO">üîç Collecting DNS MX records for mail domain...</msg>
<arg>üîç Collecting DNS MX records for mail domain...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:34.719508" elapsed="0.000204"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:34.719982" level="INFO">üìã Expected SMTP Relay: mail.domain.com</msg>
<arg>üìã Expected SMTP Relay: ${EXPECTED_SMTP_RELAY}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:34.719828" elapsed="0.000244"/>
</kw>
<kw name="Collect MX Records" owner="mail_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:34.720686" level="INFO">üåê Executing nslookup for MX records...</msg>
<arg>üåê Executing nslookup for MX records...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:34.720520" elapsed="0.000267"/>
</kw>
<kw name="Execute Command" owner="mail_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:43:34.721382" level="INFO">Executing command 'echo "mail.domain.com" | awk -F. '{print $(NF-1)"."$NF}''.</msg>
<msg time="2025-10-05T15:43:34.789574" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:43:34.790725" level="INFO">${output} = domain.com</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:43:34.721252" elapsed="0.069517"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:43:34.790860" elapsed="0.000133"/>
</return>
<msg time="2025-10-05T15:43:34.791425" level="INFO">${domain} = domain.com</msg>
<var>${domain}</var>
<arg>echo "${EXPECTED_SMTP_RELAY}" | awk -F. '{print $(NF-1)"."$NF}'</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:43:34.720954" elapsed="0.070512"/>
</kw>
<kw name="Execute Command" owner="mail_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:43:34.792664" level="INFO">Executing command 'nslookup -query=mx domain.com 2&gt;/dev/null || echo "nslookup failed"'.</msg>
<msg time="2025-10-05T15:43:34.835165" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:43:34.835387" level="INFO">${output} = nslookup failed</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:43:34.792434" elapsed="0.042978"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:43:34.835489" elapsed="0.000046"/>
</return>
<msg time="2025-10-05T15:43:34.835672" level="INFO">${mx_nslookup} = nslookup failed</msg>
<var>${mx_nslookup}</var>
<arg>nslookup -query=mx ${domain} 2&gt;/dev/null || echo "nslookup failed"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:43:34.791812" elapsed="0.043881"/>
</kw>
<kw name="Execute Command" owner="mail_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:43:34.836490" level="INFO">Executing command 'dig domain.com MX +short 2&gt;/dev/null || echo "dig not available"'.</msg>
<msg time="2025-10-05T15:43:34.884052" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:43:34.884771" level="INFO">${output} = dig not available</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:43:34.836360" elapsed="0.048482"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:43:34.884931" elapsed="0.000057"/>
</return>
<msg time="2025-10-05T15:43:34.885189" level="INFO">${mx_dig} = dig not available</msg>
<var>${mx_dig}</var>
<arg>dig ${domain} MX +short 2&gt;/dev/null || echo "dig not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:43:34.835938" elapsed="0.049285"/>
</kw>
<kw name="Execute Command" owner="mail_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:43:34.886055" level="INFO">Executing command 'host -t MX domain.com 2&gt;/dev/null || echo "host not available"'.</msg>
<msg time="2025-10-05T15:43:34.935421" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:43:34.935653" level="INFO">${output} = host not available</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:43:34.885911" elapsed="0.049772"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:43:34.935767" elapsed="0.000050"/>
</return>
<msg time="2025-10-05T15:43:34.935968" level="INFO">${mx_host} = host not available</msg>
<var>${mx_host}</var>
<arg>host -t MX ${domain} 2&gt;/dev/null || echo "host not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:43:34.885481" elapsed="0.050512"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:43:34.936467" level="INFO">${mx_records} = === nslookup MX ===
nslookup failed

=== dig MX ===
dig not available

=== host MX ===
host not available</msg>
<var>${mx_records}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== nslookup MX ===</arg>
<arg>${mx_nslookup}</arg>
<arg>=== dig MX ===</arg>
<arg>${mx_dig}</arg>
<arg>=== host MX ===</arg>
<arg>${mx_host}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:43:34.936170" elapsed="0.000323"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:43:34.936905" level="INFO">${MX_RECORDS_OUTPUT} = === nslookup MX ===
nslookup failed

=== dig MX ===
dig not available

=== host MX ===
host not available</msg>
<arg>${MX_RECORDS_OUTPUT}</arg>
<arg>${mx_records}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:43:34.936652" elapsed="0.000301"/>
</kw>
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:43:34.937273" level="INFO">${timestamp} = 20251005_154334</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:43:34.937066" elapsed="0.000230"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:43:34.937611" level="INFO">${mx_file} = results/test17_mail_configuration/data/mx_records_20251005_154334.txt</msg>
<var>${mx_file}</var>
<arg>${DATA_DIR}/mx_records_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:43:34.937425" elapsed="0.000209"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:43:34.946661" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test17_mail_configuration/data/mx_records_20251005_154334.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test17_mail_configuration/data/mx_records_20251005_154334.txt&lt;/a&gt;'.</msg>
<arg>${mx_file}</arg>
<arg>${mx_records}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:43:34.937725" elapsed="0.009128"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:34.947403" level="INFO">üìÑ MX records saved to: results/test17_mail_configuration/data/mx_records_20251005_154334.txt</msg>
<arg>üìÑ MX records saved to: ${mx_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:34.947066" elapsed="0.000495"/>
</kw>
<return>
<value>${mx_records}</value>
<status status="PASS" start="2025-10-05T15:43:34.947691" elapsed="0.000122"/>
</return>
<msg time="2025-10-05T15:43:34.948110" level="INFO">${mx_records} = === nslookup MX ===
nslookup failed

=== dig MX ===
dig not available

=== host MX ===
host not available</msg>
<var>${mx_records}</var>
<doc>üåê Execute nslookup to collect MX records for mail domain</doc>
<status status="PASS" start="2025-10-05T15:43:34.720290" elapsed="0.227865"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-10-05T15:43:34.948830" level="INFO">Length is 105.</msg>
<arg>${mx_records}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-10-05T15:43:34.948475" elapsed="0.000444"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:34.949478" level="INFO">üåê MX Records: === nslookup MX ===
nslookup failed

=== dig MX ===
dig not available

=== host MX ===
host not available</msg>
<arg>üåê MX Records: ${mx_records}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:34.949167" elapsed="0.000495"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:34.950241" level="INFO">‚úÖ DNS MX records collected successfully</msg>
<arg>‚úÖ DNS MX records collected successfully</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:34.949898" elapsed="0.000560"/>
</kw>
<kw name="Log Test End" owner="mail_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:34.951909" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:34.951782" elapsed="0.000230"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:34.952298" level="INFO">üèÅ Completed Test: Critical - Collect DNS MX Records | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:34.952126" elapsed="0.000255"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:34.952606" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:34.952479" elapsed="0.000213"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:43:34.951434" elapsed="0.001317"/>
</kw>
<doc>üåê Execute nslookup to collect MX records for mail domain</doc>
<tag>critical</tag>
<tag>dns</tag>
<tag>mail</tag>
<tag>mx_records</tag>
<status status="PASS" start="2025-10-05T15:43:34.716769" elapsed="0.236026"/>
</test>
<test id="s1-s2-t3" name="Critical - Collect Mail.rc Configuration" line="49">
<kw name="Log Test Start" owner="mail_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:34.953902" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:34.953780" elapsed="0.000225"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:34.954869" level="INFO">üèÅ Starting Test: Critical - Collect Mail.rc Configuration</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:34.954307" elapsed="0.000849"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:34.955837" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:34.955604" elapsed="0.000415"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:43:34.953514" elapsed="0.002590"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:34.956410" level="INFO">üîç Collecting /etc/mail.rc configuration...</msg>
<arg>üîç Collecting /etc/mail.rc configuration...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:34.956296" elapsed="0.000267"/>
</kw>
<kw name="Collect Mail RC Configuration" owner="mail_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:34.957136" level="INFO">üìÑ Reading /etc/mail.rc configuration...</msg>
<arg>üìÑ Reading /etc/mail.rc configuration...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:34.957032" elapsed="0.000205"/>
</kw>
<kw name="Execute Command" owner="mail_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:43:34.957860" level="INFO">Executing command 'cat /etc/mail.rc 2&gt;/dev/null || echo "Not found at /etc/mail.rc"'.</msg>
<msg time="2025-10-05T15:43:34.986851" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:43:34.987069" level="INFO">${output} = Not found at /etc/mail.rc</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:43:34.957706" elapsed="0.029388"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:43:34.987173" elapsed="0.000047"/>
</return>
<msg time="2025-10-05T15:43:34.987364" level="INFO">${mail_rc_etc} = Not found at /etc/mail.rc</msg>
<var>${mail_rc_etc}</var>
<arg>cat /etc/mail.rc 2&gt;/dev/null || echo "Not found at /etc/mail.rc"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:43:34.957408" elapsed="0.029992"/>
</kw>
<kw name="Execute Command" owner="mail_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:43:34.988163" level="INFO">Executing command 'cat /etc/mail/mail.rc 2&gt;/dev/null || echo "Not found at /etc/mail/mail.rc"'.</msg>
<msg time="2025-10-05T15:43:35.036330" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:43:35.036628" level="INFO">${output} = Not found at /etc/mail/mail.rc</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:43:34.988031" elapsed="0.048639"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:43:35.036860" elapsed="0.000192"/>
</return>
<msg time="2025-10-05T15:43:35.037650" level="INFO">${mail_rc_mail} = Not found at /etc/mail/mail.rc</msg>
<var>${mail_rc_mail}</var>
<arg>cat /etc/mail/mail.rc 2&gt;/dev/null || echo "Not found at /etc/mail/mail.rc"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:43:34.987718" elapsed="0.049978"/>
</kw>
<kw name="Execute Command" owner="mail_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:43:35.039019" level="INFO">Executing command 'cat /etc/nail.rc 2&gt;/dev/null || echo "Not found at /etc/nail.rc"'.</msg>
<msg time="2025-10-05T15:43:35.088083" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:43:35.088392" level="INFO">${output} = Not found at /etc/nail.rc</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:43:35.038721" elapsed="0.049723"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:43:35.088573" elapsed="0.000076"/>
</return>
<msg time="2025-10-05T15:43:35.088911" level="INFO">${mail_rc_nail} = Not found at /etc/nail.rc</msg>
<var>${mail_rc_nail}</var>
<arg>cat /etc/nail.rc 2&gt;/dev/null || echo "Not found at /etc/nail.rc"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:43:35.038073" elapsed="0.050882"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:43:35.089807" level="INFO">${mail_rc_content} = === /etc/mail.rc ===
Not found at /etc/mail.rc

=== /etc/mail/mail.rc ===
Not found at /etc/mail/mail.rc

=== /etc/nail.rc ===
Not found at /etc/nail.rc</msg>
<var>${mail_rc_content}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== /etc/mail.rc ===</arg>
<arg>${mail_rc_etc}</arg>
<arg>=== /etc/mail/mail.rc ===</arg>
<arg>${mail_rc_mail}</arg>
<arg>=== /etc/nail.rc ===</arg>
<arg>${mail_rc_nail}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:43:35.089223" elapsed="0.000632"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:43:35.091909" level="INFO">${MAIL_RC_CONTENT} = === /etc/mail.rc ===
Not found at /etc/mail.rc

=== /etc/mail/mail.rc ===
Not found at /etc/mail/mail.rc

=== /etc/nail.rc ===
Not found at /etc/nail.rc</msg>
<arg>${MAIL_RC_CONTENT}</arg>
<arg>${mail_rc_content}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:43:35.091410" elapsed="0.000596"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:35.092494" level="INFO">‚úÖ Mail.rc configuration collected</msg>
<arg>‚úÖ Mail.rc configuration collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:35.092217" elapsed="0.000504"/>
</kw>
<return>
<value>${mail_rc_content}</value>
<status status="PASS" start="2025-10-05T15:43:35.092847" elapsed="0.000087"/>
</return>
<msg time="2025-10-05T15:43:35.093179" level="INFO">${mail_rc_content} = === /etc/mail.rc ===
Not found at /etc/mail.rc

=== /etc/mail/mail.rc ===
Not found at /etc/mail/mail.rc

=== /etc/nail.rc ===
Not found at /etc/nail.rc</msg>
<var>${mail_rc_content}</var>
<doc>üìÑ Read and collect /etc/mail.rc configuration file</doc>
<status status="PASS" start="2025-10-05T15:43:34.956813" elapsed="0.136408"/>
</kw>
<kw name="Save Mail RC to File" owner="mail_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:43:35.094718" level="INFO">${timestamp} = 20251005_154335</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:43:35.094162" elapsed="0.000604"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:43:35.095266" level="INFO">${mail_rc_file} = results/test17_mail_configuration/data/mail_rc_20251005_154335.txt</msg>
<var>${mail_rc_file}</var>
<arg>${DATA_DIR}/mail_rc_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:43:35.094973" elapsed="0.000334"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:43:35.095953" level="INFO">${report} = =========================================
=== Mail.rc Configuration Report ===
=========================================
Timestamp: 20251005_154335
Target Server: alhxvdvitap01 (172.30.16.186)
Expecte...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== Mail.rc Configuration Report ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>Expected SMTP Relay: ${EXPECTED_SMTP_RELAY}</arg>
<arg>${content}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:43:35.095468" elapsed="0.000524"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:43:35.107414" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test17_mail_configuration/data/mail_rc_20251005_154335.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test17_mail_configuration/data/mail_rc_20251005_154335.txt&lt;/a&gt;'.</msg>
<arg>${mail_rc_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:43:35.096255" elapsed="0.011336"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:35.108210" level="INFO">üìÑ Mail.rc saved to: results/test17_mail_configuration/data/mail_rc_20251005_154335.txt</msg>
<arg>üìÑ Mail.rc saved to: ${mail_rc_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:35.107870" elapsed="0.000516"/>
</kw>
<return>
<value>${mail_rc_file}</value>
<status status="PASS" start="2025-10-05T15:43:35.108480" elapsed="0.000060"/>
</return>
<msg time="2025-10-05T15:43:35.108787" level="INFO">${mail_rc_file} = results/test17_mail_configuration/data/mail_rc_20251005_154335.txt</msg>
<var>${mail_rc_file}</var>
<arg>${mail_rc_content}</arg>
<doc>üíæ Save mail.rc configuration to file</doc>
<status status="PASS" start="2025-10-05T15:43:35.093539" elapsed="0.015287"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:35.109328" level="INFO">üìÑ Mail.rc configuration saved to: results/test17_mail_configuration/data/mail_rc_20251005_154335.txt</msg>
<arg>üìÑ Mail.rc configuration saved to: ${mail_rc_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:35.109068" elapsed="0.000409"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:35.109847" level="INFO">‚úÖ Mail.rc configuration collected</msg>
<arg>‚úÖ Mail.rc configuration collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:35.109656" elapsed="0.000418"/>
</kw>
<kw name="Log Test End" owner="mail_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:35.111363" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:35.111178" elapsed="0.000332"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:35.111946" level="INFO">üèÅ Completed Test: Critical - Collect Mail.rc Configuration | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:35.111680" elapsed="0.000426"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:35.112822" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:35.112267" elapsed="0.000780"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:43:35.110586" elapsed="0.002618"/>
</kw>
<doc>üìÑ Read and collect /etc/mail.rc configuration file</doc>
<tag>config</tag>
<tag>critical</tag>
<tag>mail_rc</tag>
<tag>smtp</tag>
<status status="PASS" start="2025-10-05T15:43:34.953066" elapsed="0.160268"/>
</test>
<test id="s1-s2-t4" name="Critical - Validate SMTP Relay Configuration" line="64">
<kw name="Log Test Start" owner="mail_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:35.116013" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:35.115782" elapsed="0.000360"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:35.116530" level="INFO">üèÅ Starting Test: Critical - Validate SMTP Relay Configuration</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:35.116296" elapsed="0.000375"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:35.116986" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:35.116835" elapsed="0.000258"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:43:35.115312" elapsed="0.002592"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:35.118416" level="INFO">üîç Validating SMTP relay configuration...</msg>
<arg>üîç Validating SMTP relay configuration...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:35.118182" elapsed="0.000400"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:35.119019" level="INFO">üìã Expected SMTP Relay: mail.domain.com</msg>
<arg>üìã Expected SMTP Relay: ${EXPECTED_SMTP_RELAY}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:35.118793" elapsed="0.000352"/>
</kw>
<kw name="Validate SMTP Relay Configuration" owner="mail_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:35.120337" level="INFO">üìß Validating SMTP relay in mail.rc...</msg>
<arg>üìß Validating SMTP relay in mail.rc...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:35.119780" elapsed="0.000661"/>
</kw>
<kw name="Execute Command" owner="mail_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:43:35.121048" level="INFO">Executing command 'grep -i "smtp" /etc/mail.rc 2&gt;/dev/null || grep -i "smtp" /etc/nail.rc 2&gt;/dev/null || echo "No SMTP configuration found"'.</msg>
<msg time="2025-10-05T15:43:35.139726" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:43:35.139993" level="INFO">${output} = No SMTP configuration found</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:43:35.120910" elapsed="0.019114"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:43:35.140113" elapsed="0.000057"/>
</return>
<msg time="2025-10-05T15:43:35.140330" level="INFO">${relay_found} = No SMTP configuration found</msg>
<var>${relay_found}</var>
<arg>grep -i "smtp" /etc/mail.rc 2&gt;/dev/null || grep -i "smtp" /etc/nail.rc 2&gt;/dev/null || echo "No SMTP configuration found"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:43:35.120636" elapsed="0.019720"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2025-10-05T15:43:35.141073" level="FAIL">'=== /etc/mail.rc ===
Not found at /etc/mail.rc

=== /etc/mail/mail.rc ===
Not found at /etc/mail/mail.rc

=== /etc/nail.rc ===
Not found at /etc/nail.rc' does not contain 'mail.domain.com'</msg>
<arg>${MAIL_RC_CONTENT}</arg>
<arg>${EXPECTED_SMTP_RELAY}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2025-10-05T15:43:35.140741" elapsed="0.000536">'=== /etc/mail.rc ===
Not found at /etc/mail.rc

=== /etc/mail/mail.rc ===
Not found at /etc/mail/mail.rc

=== /etc/nail.rc ===
Not found at /etc/nail.rc' does not contain 'mail.domain.com'</status>
</kw>
<msg time="2025-10-05T15:43:35.141392" level="INFO">${contains_expected} = False</msg>
<var>${contains_expected}</var>
<arg>Should Contain</arg>
<arg>${MAIL_RC_CONTENT}</arg>
<arg>${EXPECTED_SMTP_RELAY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-10-05T15:43:35.140547" elapsed="0.000870"/>
</kw>
<kw name="Set Variable If" owner="BuiltIn">
<msg time="2025-10-05T15:43:35.141742" level="INFO">${validation_result} = WARNING - Expected relay "mail.domain.com" not found in mail.rc</msg>
<var>${validation_result}</var>
<arg>${contains_expected}</arg>
<arg>CONFIGURED - Expected relay found in mail.rc</arg>
<arg>WARNING - Expected relay "${EXPECTED_SMTP_RELAY}" not found in mail.rc</arg>
<doc>Sets variable based on the given condition.</doc>
<status status="PASS" start="2025-10-05T15:43:35.141549" elapsed="0.000219"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:35.142136" level="INFO">üìß Relay Configuration: No SMTP configuration found</msg>
<arg>üìß Relay Configuration: ${relay_found}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:35.141882" elapsed="0.000519"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:35.142920" level="INFO">üìß Validation: WARNING - Expected relay "mail.domain.com" not found in mail.rc</msg>
<arg>üìß Validation: ${validation_result}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:35.142667" elapsed="0.000381"/>
</kw>
<return>
<value>${validation_result}</value>
<status status="PASS" start="2025-10-05T15:43:35.143140" elapsed="0.000055"/>
</return>
<msg time="2025-10-05T15:43:35.143368" level="INFO">${validation_result} = WARNING - Expected relay "mail.domain.com" not found in mail.rc</msg>
<var>${validation_result}</var>
<doc>üìß Validate SMTP relay server is configured correctly in mail.rc</doc>
<status status="PASS" start="2025-10-05T15:43:35.119482" elapsed="0.023922"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:35.143817" level="INFO">üìß SMTP Relay Validation: WARNING - Expected relay "mail.domain.com" not found in mail.rc</msg>
<arg>üìß SMTP Relay Validation: ${validation_result}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:35.143579" elapsed="0.000363"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:35.144284" level="INFO">‚úÖ SMTP relay configuration validated</msg>
<arg>‚úÖ SMTP relay configuration validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:35.144115" elapsed="0.000290"/>
</kw>
<kw name="Log Test End" owner="mail_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:35.145172" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:35.145049" elapsed="0.000225"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:35.145635" level="INFO">üèÅ Completed Test: Critical - Validate SMTP Relay Configuration | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:35.145410" elapsed="0.000324"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:35.146027" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:35.145853" elapsed="0.000335"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:43:35.144694" elapsed="0.001571"/>
</kw>
<doc>üìß Validate SMTP relay server is configured correctly in mail.rc</doc>
<tag>critical</tag>
<tag>relay</tag>
<tag>smtp</tag>
<tag>validation</tag>
<status status="PASS" start="2025-10-05T15:43:35.113902" elapsed="0.032548"/>
</test>
<test id="s1-s2-t5" name="Critical - Test SMTP Port Connectivity" line="77">
<kw name="Log Test Start" owner="mail_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:35.148648" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:35.148489" elapsed="0.000284"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:35.149071" level="INFO">üèÅ Starting Test: Critical - Test SMTP Port Connectivity</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:35.148902" elapsed="0.000272"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:35.149494" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:35.149296" elapsed="0.000295"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:43:35.148112" elapsed="0.001548"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:35.149891" level="INFO">üîç Testing SMTP port connectivity...</msg>
<arg>üîç Testing SMTP port connectivity...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:35.149778" elapsed="0.000281"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:35.150563" level="INFO">üìã SMTP Server: mail.domain.com</msg>
<arg>üìã SMTP Server: ${EXPECTED_SMTP_RELAY}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:35.150200" elapsed="0.000495"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:35.150971" level="INFO">üìã SMTP Port: 25</msg>
<arg>üìã SMTP Port: ${SMTP_PORT}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:35.150815" elapsed="0.000251"/>
</kw>
<kw name="Test SMTP Port Connectivity" owner="mail_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:35.151776" level="INFO">üîå Testing SMTP port 25 connectivity to mail.domain.com...</msg>
<arg>üîå Testing SMTP port ${SMTP_PORT} connectivity to ${EXPECTED_SMTP_RELAY}...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:35.151524" elapsed="0.000358"/>
</kw>
<kw name="Execute Command" owner="mail_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:43:35.152508" level="INFO">Executing command 'timeout 5 nc -zv mail.domain.com 25 2&gt;&amp;1 || echo "Connection failed or timeout"'.</msg>
<msg time="2025-10-05T15:43:40.209737" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:43:40.210328" level="INFO">${output} = Connection failed or timeout</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:43:35.152378" elapsed="5.058131"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:43:40.210725" elapsed="0.000096"/>
</return>
<msg time="2025-10-05T15:43:40.211800" level="INFO">${nc_result} = Connection failed or timeout</msg>
<var>${nc_result}</var>
<arg>timeout 5 nc -zv ${EXPECTED_SMTP_RELAY} ${SMTP_PORT} 2&gt;&amp;1 || echo "Connection failed or timeout"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:43:35.152054" elapsed="5.059870"/>
</kw>
<kw name="Execute Command" owner="mail_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:43:40.213932" level="INFO">Executing command 'timeout 5 bash -c "echo -e '
QUIT
' | telnet mail.domain.com 25 2&gt;&amp;1" | head -20 || echo "Telnet test failed"'.</msg>
<msg time="2025-10-05T15:43:40.275772" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:43:40.276127" level="INFO">${output} = bash: line 3: telnet: command not found</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:43:40.213613" elapsed="0.062561"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:43:40.276306" elapsed="0.000080"/>
</return>
<msg time="2025-10-05T15:43:40.276738" level="INFO">${telnet_result} = bash: line 3: telnet: command not found</msg>
<var>${telnet_result}</var>
<arg>timeout 5 bash -c "echo -e '\nQUIT\n' | telnet ${EXPECTED_SMTP_RELAY} ${SMTP_PORT} 2&gt;&amp;1" | head -20 || echo "Telnet test failed"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:43:40.212552" elapsed="0.064232"/>
</kw>
<kw name="Execute Command" owner="mail_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:43:40.278119" level="INFO">Executing command 'timeout 5 curl -v smtp://mail.domain.com:25 2&gt;&amp;1 | head -20 || echo "Curl test not available"'.</msg>
<msg time="2025-10-05T15:43:48.217503" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:43:48.218236" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:43:40.277875" elapsed="7.940517"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:43:48.218606" elapsed="0.000129"/>
</return>
<msg time="2025-10-05T15:43:48.219373" level="INFO">${curl_result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<var>${curl_result}</var>
<arg>timeout 5 curl -v smtp://${EXPECTED_SMTP_RELAY}:${SMTP_PORT} 2&gt;&amp;1 | head -20 || echo "Curl test not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:43:40.277224" elapsed="7.942266"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.220626" level="INFO">${connectivity_result} = === Netcat Test ===
Connection failed or timeout

=== Telnet Test ===
bash: line 3: telnet: command not found

=== Curl SMTP Test ===
  % Total    % Received % Xferd  Average Speed   Time    Time     ...</msg>
<var>${connectivity_result}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Netcat Test ===</arg>
<arg>${nc_result}</arg>
<arg>=== Telnet Test ===</arg>
<arg>${telnet_result}</arg>
<arg>=== Curl SMTP Test ===</arg>
<arg>${curl_result}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:43:48.219924" elapsed="0.000772"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.221649" level="INFO">${SMTP_CONNECTIVITY_RESULT} = === Netcat Test ===
Connection failed or timeout

=== Telnet Test ===
bash: line 3: telnet: command not found

=== Curl SMTP Test ===
  % Total    % Received % Xferd  Average Speed   Time    Time     ...</msg>
<arg>${SMTP_CONNECTIVITY_RESULT}</arg>
<arg>${connectivity_result}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:43:48.221156" elapsed="0.000731"/>
</kw>
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:43:48.224068" level="INFO">${timestamp} = 20251005_154348</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:43:48.223611" elapsed="0.000519"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.224691" level="INFO">${conn_file} = results/test17_mail_configuration/data/smtp_connectivity_20251005_154348.txt</msg>
<var>${conn_file}</var>
<arg>${DATA_DIR}/smtp_connectivity_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:43:48.224353" elapsed="0.000383"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:43:48.250812" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test17_mail_configuration/data/smtp_connectivity_20251005_154348.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test17_mail_configuration/data/smtp_connectivity_20251005_154348.txt&lt;/a&gt;'.</msg>
<arg>${conn_file}</arg>
<arg>${connectivity_result}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:43:48.224915" elapsed="0.026050"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.251763" level="INFO">üìÑ Connectivity test saved to: results/test17_mail_configuration/data/smtp_connectivity_20251005_154348.txt</msg>
<arg>üìÑ Connectivity test saved to: ${conn_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.251189" elapsed="0.000798"/>
</kw>
<return>
<value>${connectivity_result}</value>
<status status="PASS" start="2025-10-05T15:43:48.252126" elapsed="0.000075"/>
</return>
<msg time="2025-10-05T15:43:48.252438" level="INFO">${connectivity_result} = === Netcat Test ===
Connection failed or timeout

=== Telnet Test ===
bash: line 3: telnet: command not found

=== Curl SMTP Test ===
  % Total    % Received % Xferd  Average Speed   Time    Time     ...</msg>
<var>${connectivity_result}</var>
<doc>üîå Test connectivity to SMTP server on port 25</doc>
<status status="PASS" start="2025-10-05T15:43:35.151280" elapsed="13.101196"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.253052" level="INFO">üîå SMTP Connectivity Result: === Netcat Test ===
Connection failed or timeout

=== Telnet Test ===
bash: line 3: telnet: command not found

=== Curl SMTP Test ===
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* Host mail.domain.com:25 was resolved.
* IPv6: (none)
* IPv4: 72.5.54.21
*   Trying 72.5.54.21:25...

  0     0    0     0    0     0      0      0 --:--:--  0:00:01 --:--:--     0
  0     0    0     0    0     0      0      0 --:--:--  0:00:02 --:--:--     0
  0     0    0     0    0     0      0      0 --:--:--  0:00:03 --:--:--     0
  0     0    0     0    0     0      0      0 --:--:--  0:00:04 --:--:--     0</msg>
<arg>üîå SMTP Connectivity Result: ${connectivity_result}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.252708" elapsed="0.000511"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.253566" level="INFO">‚úÖ SMTP port connectivity test completed</msg>
<arg>‚úÖ SMTP port connectivity test completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.253393" elapsed="0.000313"/>
</kw>
<kw name="Log Test End" owner="mail_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.254622" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.254504" elapsed="0.000228"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.255070" level="INFO">üèÅ Completed Test: Critical - Test SMTP Port Connectivity | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.254882" elapsed="0.000287"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.255460" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.255329" elapsed="0.000226"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:43:48.254134" elapsed="0.001506"/>
</kw>
<doc>üîå Test connectivity to SMTP server on port 25 using telnet/nc</doc>
<tag>connectivity</tag>
<tag>critical</tag>
<tag>port25</tag>
<tag>smtp</tag>
<status status="PASS" start="2025-10-05T15:43:35.146741" elapsed="13.108939"/>
</test>
<test id="s1-s2-t6" name="Normal - Send Test Email" line="91">
<kw name="Log Test Start" owner="mail_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.256863" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.256657" elapsed="0.000324"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.257263" level="INFO">üèÅ Starting Test: Normal - Send Test Email</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.257104" elapsed="0.000252"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.257663" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.257520" elapsed="0.000274"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:43:48.256412" elapsed="0.001471"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.258177" level="INFO">üîç Sending test email...</msg>
<arg>üîç Sending test email...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.258034" elapsed="0.000242"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.258750" level="INFO">üìã Test Recipient: test@domain.com</msg>
<arg>üìã Test Recipient: ${TEST_EMAIL_RECIPIENT}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.258397" elapsed="0.000523"/>
</kw>
<kw name="Send Test Email" owner="mail_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.259669" level="INFO">üì® Sending test email...</msg>
<arg>üì® Sending test email...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.259542" elapsed="0.000236"/>
</kw>
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:43:48.260727" level="INFO">${timestamp} = 2025-10-05 15:43:48</msg>
<var>${timestamp}</var>
<arg>result_format=%Y-%m-%d %H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:43:48.260526" elapsed="0.000228"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.261364" level="INFO">${test_subject} = Test Email from alhxvdvitap01 - 2025-10-05 15:43:48</msg>
<var>${test_subject}</var>
<arg>Test Email from ${TARGET_HOSTNAME} - ${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:43:48.261073" elapsed="0.000326"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.261707" level="INFO">${test_body} = This is an automated test email from Robot Framework Test-17 Mail Configuration Validation.\nServer: alhxvdvitap01\nTimestamp: 2025-10-05 15:43:48</msg>
<var>${test_body}</var>
<arg>This is an automated test email from Robot Framework Test-17 Mail Configuration Validation.\\nServer: ${TARGET_HOSTNAME}\\nTimestamp: ${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:43:48.261523" elapsed="0.000208"/>
</kw>
<kw name="Execute Command" owner="mail_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:43:48.263332" level="INFO">Executing command 'echo "This is an automated test email from Robot Framework Test-17 Mail Configuration Validation.\nServer: alhxvdvitap01\nTimestamp: 2025-10-05 15:43:48" | mail -s "Test Email from alhxvdvitap01 - 2025-10-05 15:43:48" test@domain.com 2&gt;&amp;1 || echo "Mail command failed - check if mailx/mail is installed"'.</msg>
<msg time="2025-10-05T15:43:48.275871" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:43:48.276119" level="INFO">${output} = bash: line 1: mail: command not found
Mail command failed - check if mailx/mail is installed</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:43:48.263139" elapsed="0.013010"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:43:48.276255" elapsed="0.000065"/>
</return>
<msg time="2025-10-05T15:43:48.276544" level="INFO">${send_result} = bash: line 1: mail: command not found
Mail command failed - check if mailx/mail is installed</msg>
<var>${send_result}</var>
<arg>echo "${test_body}" | mail -s "${test_subject}" ${TEST_EMAIL_RECIPIENT} 2&gt;&amp;1 || echo "Mail command failed - check if mailx/mail is installed"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:43:48.262341" elapsed="0.014239"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.277290" level="INFO">üì® Test email result: bash: line 1: mail: command not found
Mail command failed - check if mailx/mail is installed</msg>
<arg>üì® Test email result: ${send_result}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.276958" elapsed="0.000513"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.279271" level="INFO">${send_file} = results/test17_mail_configuration/data/test_email_send_2025-10-05_154348.txt</msg>
<var>${send_file}</var>
<arg>${DATA_DIR}/test_email_send_${timestamp.replace(' ', '_').replace(':', '')}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:43:48.277824" elapsed="0.001477"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.279726" level="INFO">${send_report} = === Test Email Send Report ===
Timestamp: 2025-10-05 15:43:48
Target Server: alhxvdvitap01 (172.30.16.186)
Recipient: test@domain.com
Subject: Test Email from alhxvdvitap01 - 2025-10-05 15:43:48

Resu...</msg>
<var>${send_report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Test Email Send Report ===</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>Recipient: ${TEST_EMAIL_RECIPIENT}</arg>
<arg>Subject: ${test_subject}</arg>
<arg>Result:</arg>
<arg>${send_result}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:43:48.279414" elapsed="0.000336"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:43:48.286049" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test17_mail_configuration/data/test_email_send_2025-10-05_154348.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test17_mail_configuration/data/test_email_send_2025-10-05_154348.txt&lt;/a&gt;'.</msg>
<arg>${send_file}</arg>
<arg>${send_report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:43:48.280264" elapsed="0.005923"/>
</kw>
<return>
<value>${send_result}</value>
<status status="PASS" start="2025-10-05T15:43:48.286253" elapsed="0.000044"/>
</return>
<msg time="2025-10-05T15:43:48.286448" level="INFO">${send_result} = bash: line 1: mail: command not found
Mail command failed - check if mailx/mail is installed</msg>
<var>${send_result}</var>
<doc>üì® Send a test email to verify mail subsystem functionality</doc>
<status status="PASS" start="2025-10-05T15:43:48.259238" elapsed="0.027234"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.286769" level="INFO">üì® Test Email Result: bash: line 1: mail: command not found
Mail command failed - check if mailx/mail is installed</msg>
<arg>üì® Test Email Result: ${send_result}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.286598" elapsed="0.000321"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.287446" level="INFO">‚ÑπÔ∏è Test email sent - check recipient mailbox for delivery</msg>
<arg>‚ÑπÔ∏è Test email sent - check recipient mailbox for delivery</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.287251" elapsed="0.000657"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.288234" level="INFO">‚úÖ Test email transmission: COMPLETED</msg>
<arg>‚úÖ Test email transmission: COMPLETED</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.288086" elapsed="0.000255"/>
</kw>
<kw name="Log Test End" owner="mail_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.289161" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.289037" elapsed="0.000235"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.289617" level="INFO">üèÅ Completed Test: Normal - Send Test Email | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.289413" elapsed="0.000453"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.290163" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.290037" elapsed="0.000220"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:43:48.288688" elapsed="0.002199"/>
</kw>
<doc>üì® Send a test email to verify mail subsystem functionality</doc>
<tag>delivery</tag>
<tag>normal</tag>
<tag>smtp</tag>
<tag>test_email</tag>
<status status="PASS" start="2025-10-05T15:43:48.255933" elapsed="0.035006"/>
</test>
<test id="s1-s2-t7" name="Normal - Check Mail Queue Status" line="105">
<kw name="Log Test Start" owner="mail_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.292227" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.292093" elapsed="0.000235"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.292597" level="INFO">üèÅ Starting Test: Normal - Check Mail Queue Status</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.292454" elapsed="0.000236"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.293003" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.292822" elapsed="0.000281"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:43:48.291700" elapsed="0.001489"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.293487" level="INFO">üîç Checking mail queue status...</msg>
<arg>üîç Checking mail queue status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.293344" elapsed="0.000211"/>
</kw>
<kw name="Check Mail Queue Status" owner="mail_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.294594" level="INFO">üì¨ Checking mail queue status...</msg>
<arg>üì¨ Checking mail queue status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.294445" elapsed="0.000218"/>
</kw>
<kw name="Execute Command" owner="mail_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:43:48.295204" level="INFO">Executing command 'mailq 2&gt;&amp;1 || echo "mailq command not available"'.</msg>
<msg time="2025-10-05T15:43:48.326645" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:43:48.327119" level="INFO">${output} = bash: line 1: mailq: command not found
mailq command not available</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:43:48.295076" elapsed="0.032102"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:43:48.327326" elapsed="0.000092"/>
</return>
<msg time="2025-10-05T15:43:48.327746" level="INFO">${mailq_output} = bash: line 1: mailq: command not found
mailq command not available</msg>
<var>${mailq_output}</var>
<arg>mailq 2&gt;&amp;1 || echo "mailq command not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:43:48.294824" elapsed="0.032980"/>
</kw>
<kw name="Execute Command" owner="mail_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:43:48.329038" level="INFO">Executing command 'postqueue -p 2&gt;&amp;1 || echo "postqueue not available"'.</msg>
<msg time="2025-10-05T15:43:48.375660" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:43:48.375930" level="INFO">${output} = bash: line 1: postqueue: command not found
postqueue not available</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:43:48.328772" elapsed="0.047193"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:43:48.376064" elapsed="0.000059"/>
</return>
<msg time="2025-10-05T15:43:48.376398" level="INFO">${postqueue_output} = bash: line 1: postqueue: command not found
postqueue not available</msg>
<var>${postqueue_output}</var>
<arg>postqueue -p 2&gt;&amp;1 || echo "postqueue not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:43:48.328181" elapsed="0.048251"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.376961" level="INFO">${queue_status} = === mailq output ===
bash: line 1: mailq: command not found
mailq command not available

=== postqueue -p output ===
bash: line 1: postqueue: command not found
postqueue not available</msg>
<var>${queue_status}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== mailq output ===</arg>
<arg>${mailq_output}</arg>
<arg>=== postqueue -p output ===</arg>
<arg>${postqueue_output}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:43:48.376643" elapsed="0.000351"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.377512" level="INFO">${MAIL_QUEUE_STATUS} = === mailq output ===
bash: line 1: mailq: command not found
mailq command not available

=== postqueue -p output ===
bash: line 1: postqueue: command not found
postqueue not available</msg>
<arg>${MAIL_QUEUE_STATUS}</arg>
<arg>${queue_status}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:43:48.377198" elapsed="0.000373"/>
</kw>
<return>
<value>${queue_status}</value>
<status status="PASS" start="2025-10-05T15:43:48.377724" elapsed="0.000113"/>
</return>
<msg time="2025-10-05T15:43:48.378057" level="INFO">${queue_status} = === mailq output ===
bash: line 1: mailq: command not found
mailq command not available

=== postqueue -p output ===
bash: line 1: postqueue: command not found
postqueue not available</msg>
<var>${queue_status}</var>
<doc>üì¨ Check mail queue status to ensure no stuck messages</doc>
<status status="PASS" start="2025-10-05T15:43:48.293862" elapsed="0.084232"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.378520" level="INFO">üì¨ Mail Queue Status: === mailq output ===
bash: line 1: mailq: command not found
mailq command not available

=== postqueue -p output ===
bash: line 1: postqueue: command not found
postqueue not available</msg>
<arg>üì¨ Mail Queue Status: ${queue_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.378253" elapsed="0.000432"/>
</kw>
<kw name="Save Mail Queue Status to File" owner="mail_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:43:48.380479" level="INFO">${timestamp} = 20251005_154348</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:43:48.380188" elapsed="0.000324"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.380812" level="INFO">${queue_file} = results/test17_mail_configuration/data/mail_queue_20251005_154348.txt</msg>
<var>${queue_file}</var>
<arg>${DATA_DIR}/mail_queue_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:43:48.380635" elapsed="0.000202"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.382140" level="INFO">${report} = =========================================
=== Mail Queue Status Report ===
=========================================
Timestamp: 20251005_154348
Target Server: alhxvdvitap01 (172.30.16.186)

=== mailq ...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== Mail Queue Status Report ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>${queue_status}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:43:48.380940" elapsed="0.001237"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:43:48.389465" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test17_mail_configuration/data/mail_queue_20251005_154348.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test17_mail_configuration/data/mail_queue_20251005_154348.txt&lt;/a&gt;'.</msg>
<arg>${queue_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:43:48.382318" elapsed="0.007267"/>
</kw>
<return>
<value>${queue_file}</value>
<status status="PASS" start="2025-10-05T15:43:48.389680" elapsed="0.000057"/>
</return>
<msg time="2025-10-05T15:43:48.390271" level="INFO">${queue_file} = results/test17_mail_configuration/data/mail_queue_20251005_154348.txt</msg>
<var>${queue_file}</var>
<arg>${queue_status}</arg>
<doc>üíæ Save mail queue status to file</doc>
<status status="PASS" start="2025-10-05T15:43:48.379432" elapsed="0.010874"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.390664" level="INFO">üìÑ Queue status saved to: results/test17_mail_configuration/data/mail_queue_20251005_154348.txt</msg>
<arg>üìÑ Queue status saved to: ${queue_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.390461" elapsed="0.000328"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.391088" level="INFO">‚úÖ Mail queue check: INFORMATIONAL</msg>
<arg>‚úÖ Mail queue check: INFORMATIONAL</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.390953" elapsed="0.000343"/>
</kw>
<kw name="Log Test End" owner="mail_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.392018" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.391881" elapsed="0.000241"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.392465" level="INFO">üèÅ Completed Test: Normal - Check Mail Queue Status | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.392244" elapsed="0.000314"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.392808" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.392687" elapsed="0.000213"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:43:48.391565" elapsed="0.001406"/>
</kw>
<doc>üì¨ Check mail queue status to ensure no stuck messages</doc>
<tag>mail_queue</tag>
<tag>monitoring</tag>
<tag>normal</tag>
<tag>postfix</tag>
<status status="PASS" start="2025-10-05T15:43:48.291210" elapsed="0.101798"/>
</test>
<test id="s1-s2-t8" name="Normal - Validate Mail Subsystem Services" line="122">
<kw name="Log Test Start" owner="mail_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.394680" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.394502" elapsed="0.000290"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.395154" level="INFO">üèÅ Starting Test: Normal - Validate Mail Subsystem Services</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.394956" elapsed="0.000306"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.395512" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.395394" elapsed="0.000217"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:43:48.394181" elapsed="0.001513"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.395947" level="INFO">üîç Validating mail subsystem services...</msg>
<arg>üîç Validating mail subsystem services...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.395810" elapsed="0.000230"/>
</kw>
<kw name="Check Mail Service Status" owner="mail_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.396541" level="INFO">üîß Checking mail service status...</msg>
<arg>üîß Checking mail service status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.396440" elapsed="0.000195"/>
</kw>
<kw name="Execute Command" owner="mail_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:43:48.397207" level="INFO">Executing command 'systemctl status postfix 2&gt;&amp;1 | head -20 || echo "Postfix not found"'.</msg>
<msg time="2025-10-05T15:43:48.437444" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:43:48.438153" level="INFO">${output} = Unit postfix.service could not be found.</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:43:48.397073" elapsed="0.041163"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:43:48.438417" elapsed="0.000106"/>
</return>
<msg time="2025-10-05T15:43:48.438995" level="INFO">${postfix_status} = Unit postfix.service could not be found.</msg>
<var>${postfix_status}</var>
<arg>systemctl status postfix 2&gt;&amp;1 | head -20 || echo "Postfix not found"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:43:48.396798" elapsed="0.042266"/>
</kw>
<kw name="Execute Command" owner="mail_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:43:48.440303" level="INFO">Executing command 'systemctl status sendmail 2&gt;&amp;1 | head -20 || echo "Sendmail not found"'.</msg>
<msg time="2025-10-05T15:43:48.502027" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:43:48.502402" level="INFO">${output} = Unit sendmail.service could not be found.</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:43:48.439994" elapsed="0.062458"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:43:48.503655" elapsed="0.000087"/>
</return>
<msg time="2025-10-05T15:43:48.503990" level="INFO">${sendmail_status} = Unit sendmail.service could not be found.</msg>
<var>${sendmail_status}</var>
<arg>systemctl status sendmail 2&gt;&amp;1 | head -20 || echo "Sendmail not found"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:43:48.439511" elapsed="0.064516"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.504605" level="INFO">${service_status} = === Postfix Status ===
Unit postfix.service could not be found.

=== Sendmail Status ===
Unit sendmail.service could not be found.</msg>
<var>${service_status}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Postfix Status ===</arg>
<arg>${postfix_status}</arg>
<arg>=== Sendmail Status ===</arg>
<arg>${sendmail_status}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:43:48.504246" elapsed="0.000392"/>
</kw>
<return>
<value>${service_status}</value>
<status status="PASS" start="2025-10-05T15:43:48.504707" elapsed="0.000036"/>
</return>
<msg time="2025-10-05T15:43:48.504886" level="INFO">${service_status} = === Postfix Status ===
Unit postfix.service could not be found.

=== Sendmail Status ===
Unit sendmail.service could not be found.</msg>
<var>${service_status}</var>
<doc>üîß Check status of mail services (postfix/sendmail)</doc>
<status status="PASS" start="2025-10-05T15:43:48.396227" elapsed="0.108687"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.505330" level="INFO">üîß Mail Service Status: === Postfix Status ===
Unit postfix.service could not be found.

=== Sendmail Status ===
Unit sendmail.service could not be found.</msg>
<arg>üîß Mail Service Status: ${service_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.505052" elapsed="0.000428"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.505990" level="INFO">‚úÖ Mail service validation: INFORMATIONAL</msg>
<arg>‚úÖ Mail service validation: INFORMATIONAL</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.505711" elapsed="0.000405"/>
</kw>
<kw name="Log Test End" owner="mail_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.509141" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.508869" elapsed="0.000417"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.509936" level="INFO">üèÅ Completed Test: Normal - Validate Mail Subsystem Services | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.509487" elapsed="0.000586"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.510453" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.510252" elapsed="0.000326"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:43:48.506462" elapsed="0.004207"/>
</kw>
<doc>üîß Validate mail-related services (postfix/sendmail) are running</doc>
<tag>normal</tag>
<tag>postfix</tag>
<tag>sendmail</tag>
<tag>services</tag>
<status status="PASS" start="2025-10-05T15:43:48.393256" elapsed="0.117473"/>
</test>
<test id="s1-s2-t9" name="Normal - Collect Mail Logs" line="134">
<kw name="Log Test Start" owner="mail_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.512375" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.512186" elapsed="0.000336"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.512985" level="INFO">üèÅ Starting Test: Normal - Collect Mail Logs</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.512731" elapsed="0.000398"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.513537" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.513327" elapsed="0.000410"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:43:48.511798" elapsed="0.002401"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.514675" level="INFO">üîç Collecting recent mail log entries...</msg>
<arg>üîç Collecting recent mail log entries...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.514429" elapsed="0.000462"/>
</kw>
<kw name="Collect Mail Logs" owner="mail_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.516025" level="INFO">üìã Collecting recent mail logs...</msg>
<arg>üìã Collecting recent mail logs...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.515795" elapsed="0.000451"/>
</kw>
<kw name="Execute Command" owner="mail_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:43:48.518231" level="INFO">Executing command 'tail -100 /var/log/maillog 2&gt;/dev/null || echo "No /var/log/maillog"'.</msg>
<msg time="2025-10-05T15:43:48.576427" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:43:48.576797" level="INFO">${output} = No /var/log/maillog</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:43:48.517720" elapsed="0.059130"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:43:48.577011" elapsed="0.000082"/>
</return>
<msg time="2025-10-05T15:43:48.577364" level="INFO">${maillog} = No /var/log/maillog</msg>
<var>${maillog}</var>
<arg>tail -100 /var/log/maillog 2&gt;/dev/null || echo "No /var/log/maillog"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:43:48.516701" elapsed="0.060711"/>
</kw>
<kw name="Execute Command" owner="mail_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:43:48.578876" level="INFO">Executing command 'tail -100 /var/log/mail.log 2&gt;/dev/null || echo "No /var/log/mail.log"'.</msg>
<msg time="2025-10-05T15:43:48.628408" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:43:48.628799" level="INFO">${output} = No /var/log/mail.log</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:43:48.578631" elapsed="0.050220"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:43:48.630155" elapsed="0.000106"/>
</return>
<msg time="2025-10-05T15:43:48.630701" level="INFO">${mail_log} = No /var/log/mail.log</msg>
<var>${mail_log}</var>
<arg>tail -100 /var/log/mail.log 2&gt;/dev/null || echo "No /var/log/mail.log"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:43:48.578057" elapsed="0.052713"/>
</kw>
<kw name="Execute Command" owner="mail_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:43:48.631985" level="INFO">Executing command 'tail -100 /var/log/mail.info 2&gt;/dev/null || echo "No /var/log/mail.info"'.</msg>
<msg time="2025-10-05T15:43:48.684132" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:43:48.684599" level="INFO">${output} = No /var/log/mail.info</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:43:48.631726" elapsed="0.052957"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:43:48.684980" elapsed="0.000131"/>
</return>
<msg time="2025-10-05T15:43:48.685662" level="INFO">${mail_info} = No /var/log/mail.info</msg>
<var>${mail_info}</var>
<arg>tail -100 /var/log/mail.info 2&gt;/dev/null || echo "No /var/log/mail.info"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:43:48.631178" elapsed="0.054643"/>
</kw>
<kw name="Execute Command" owner="mail_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:43:48.687331" level="INFO">Executing command 'grep -i mail /var/log/syslog 2&gt;/dev/null | tail -50 || echo "No mail entries in syslog"'.</msg>
<msg time="2025-10-05T15:43:48.766839" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:43:48.767154" level="INFO">${output} = 2025-10-05T13:18:14.276600-05:00 DESKTOP-933PGUE python3[2608]: ansible-file Invoked with path=/mnt/c/Users/sacpa/Projects/robot/robotframework/ansible_playbooks/../results/test17_mail_configuration s...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:43:48.687078" elapsed="0.080123"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:43:48.767323" elapsed="0.000072"/>
</return>
<msg time="2025-10-05T15:43:48.767760" level="INFO">${syslog_mail} = 2025-10-05T13:18:14.276600-05:00 DESKTOP-933PGUE python3[2608]: ansible-file Invoked with path=/mnt/c/Users/sacpa/Projects/robot/robotframework/ansible_playbooks/../results/test17_mail_configuration s...</msg>
<var>${syslog_mail}</var>
<arg>grep -i mail /var/log/syslog 2&gt;/dev/null | tail -50 || echo "No mail entries in syslog"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:43:48.686443" elapsed="0.081364"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.768676" level="INFO">${mail_logs} = === /var/log/maillog ===
No /var/log/mail.log

=== /var/log/mail.log ===
No /var/log/mail.log

=== /var/log/mail.info ===
No /var/log/mail.info

=== Syslog mail entries ===
2025-10-05T13:18:14.276600-...</msg>
<var>${mail_logs}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== /var/log/maillog ===</arg>
<arg>${maillog}</arg>
<arg>=== /var/log/mail.log ===</arg>
<arg>${mail_log}</arg>
<arg>=== /var/log/mail.info ===</arg>
<arg>${mail_info}</arg>
<arg>=== Syslog mail entries ===</arg>
<arg>${syslog_mail}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:43:48.768072" elapsed="0.000674"/>
</kw>
<return>
<value>${mail_logs}</value>
<status status="PASS" start="2025-10-05T15:43:48.768874" elapsed="0.000052"/>
</return>
<msg time="2025-10-05T15:43:48.769123" level="INFO">${mail_logs} = === /var/log/maillog ===
No /var/log/mail.log

=== /var/log/mail.log ===
No /var/log/mail.log

=== /var/log/mail.info ===
No /var/log/mail.info

=== Syslog mail entries ===
2025-10-05T13:18:14.276600-...</msg>
<var>${mail_logs}</var>
<doc>üìã Collect recent mail log entries</doc>
<status status="PASS" start="2025-10-05T15:43:48.515318" elapsed="0.253847"/>
</kw>
<kw name="Save Mail Logs to File" owner="mail_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:43:48.770887" level="INFO">${timestamp} = 20251005_154348</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:43:48.770407" elapsed="0.000547"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.771760" level="INFO">${log_file} = results/test17_mail_configuration/data/mail_logs_20251005_154348.txt</msg>
<var>${log_file}</var>
<arg>${DATA_DIR}/mail_logs_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:43:48.771295" elapsed="0.001947"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.774541" level="INFO">${report} = =========================================
=== Mail Logs Report ===
=========================================
Timestamp: 20251005_154348
Target Server: alhxvdvitap01 (172.30.16.186)

=== /var/log/maill...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== Mail Logs Report ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>${mail_logs}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:43:48.773727" elapsed="0.000866"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:43:48.783662" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test17_mail_configuration/data/mail_logs_20251005_154348.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test17_mail_configuration/data/mail_logs_20251005_154348.txt&lt;/a&gt;'.</msg>
<arg>${log_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:43:48.774810" elapsed="0.009011"/>
</kw>
<return>
<value>${log_file}</value>
<status status="PASS" start="2025-10-05T15:43:48.783969" elapsed="0.000070"/>
</return>
<msg time="2025-10-05T15:43:48.784276" level="INFO">${log_file} = results/test17_mail_configuration/data/mail_logs_20251005_154348.txt</msg>
<var>${log_file}</var>
<arg>${mail_logs}</arg>
<doc>üíæ Save mail logs to file</doc>
<status status="PASS" start="2025-10-05T15:43:48.769477" elapsed="0.014837"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.785242" level="INFO">üìã Mail logs saved to: results/test17_mail_configuration/data/mail_logs_20251005_154348.txt</msg>
<arg>üìã Mail logs saved to: ${log_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.784558" elapsed="0.000836"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.785931" level="INFO">‚úÖ Mail log collection: INFORMATIONAL</msg>
<arg>‚úÖ Mail log collection: INFORMATIONAL</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.785588" elapsed="0.000435"/>
</kw>
<kw name="Log Test End" owner="mail_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.787083" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.786909" elapsed="0.000777"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.788125" level="INFO">üèÅ Completed Test: Normal - Collect Mail Logs | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.787879" elapsed="0.000387"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.788577" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.788408" elapsed="0.000274"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:43:48.786376" elapsed="0.002381"/>
</kw>
<doc>üìã Collect recent mail log entries for troubleshooting</doc>
<tag>logs</tag>
<tag>maillog</tag>
<tag>monitoring</tag>
<tag>normal</tag>
<status status="PASS" start="2025-10-05T15:43:48.511123" elapsed="0.277684"/>
</test>
<test id="s1-s2-t10" name="Normal - Validate Firewall Rules for SMTP" line="149">
<kw name="Log Test Start" owner="mail_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.790260" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.790097" elapsed="0.000280"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.790694" level="INFO">üèÅ Starting Test: Normal - Validate Firewall Rules for SMTP</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.790511" elapsed="0.000307"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.791093" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.790953" elapsed="0.000248"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:43:48.789745" elapsed="0.001529"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.791527" level="INFO">üîç Checking firewall rules for SMTP...</msg>
<arg>üîç Checking firewall rules for SMTP...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.791402" elapsed="0.000252"/>
</kw>
<kw name="Check Firewall Rules for SMTP" owner="mail_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.792252" level="INFO">üî• Checking firewall rules for SMTP...</msg>
<arg>üî• Checking firewall rules for SMTP...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.792129" elapsed="0.000235"/>
</kw>
<kw name="Execute Command" owner="mail_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:43:48.792969" level="INFO">Executing command 'iptables -L -n | grep -E "25|smtp" 2&gt;&amp;1 || echo "No iptables rules or not accessible"'.</msg>
<msg time="2025-10-05T15:43:48.820082" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:43:48.820351" level="INFO">${output} = No iptables rules or not accessible</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:43:48.792831" elapsed="0.027606"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:43:48.820557" elapsed="0.000071"/>
</return>
<msg time="2025-10-05T15:43:48.820872" level="INFO">${iptables_rules} = No iptables rules or not accessible</msg>
<var>${iptables_rules}</var>
<arg>iptables -L -n | grep -E "25|smtp" 2&gt;&amp;1 || echo "No iptables rules or not accessible"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:43:48.792545" elapsed="0.028372"/>
</kw>
<kw name="Execute Command" owner="mail_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:43:48.821941" level="INFO">Executing command 'firewall-cmd --list-all 2&gt;&amp;1 || echo "firewalld not active"'.</msg>
<msg time="2025-10-05T15:43:48.870216" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:43:48.870492" level="INFO">${output} = bash: line 1: firewall-cmd: command not found
firewalld not active</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:43:48.821698" elapsed="0.048832"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:43:48.870633" elapsed="0.000059"/>
</return>
<msg time="2025-10-05T15:43:48.870883" level="INFO">${firewalld_rules} = bash: line 1: firewall-cmd: command not found
firewalld not active</msg>
<var>${firewalld_rules}</var>
<arg>firewall-cmd --list-all 2&gt;&amp;1 || echo "firewalld not active"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:43:48.821210" elapsed="0.049704"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.871555" level="INFO">${firewall_rules} = === iptables (port 25/smtp) ===
No iptables rules or not accessible

=== firewalld ===
bash: line 1: firewall-cmd: command not found
firewalld not active</msg>
<var>${firewall_rules}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== iptables (port 25/smtp) ===</arg>
<arg>${iptables_rules}</arg>
<arg>=== firewalld ===</arg>
<arg>${firewalld_rules}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:43:48.871124" elapsed="0.000468"/>
</kw>
<return>
<value>${firewall_rules}</value>
<status status="PASS" start="2025-10-05T15:43:48.871665" elapsed="0.000036"/>
</return>
<msg time="2025-10-05T15:43:48.871833" level="INFO">${firewall_rules} = === iptables (port 25/smtp) ===
No iptables rules or not accessible

=== firewalld ===
bash: line 1: firewall-cmd: command not found
firewalld not active</msg>
<var>${firewall_rules}</var>
<doc>üî• Check firewall rules for SMTP traffic</doc>
<status status="PASS" start="2025-10-05T15:43:48.791868" elapsed="0.079989"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.872147" level="INFO">üî• Firewall Rules: === iptables (port 25/smtp) ===
No iptables rules or not accessible

=== firewalld ===
bash: line 1: firewall-cmd: command not found
firewalld not active</msg>
<arg>üî• Firewall Rules: ${firewall_rules}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.871972" elapsed="0.000313"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.872593" level="INFO">‚ÑπÔ∏è Firewall rules collected for review</msg>
<arg>‚ÑπÔ∏è Firewall rules collected for review</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.872446" elapsed="0.000251"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.874269" level="INFO">‚úÖ Firewall check: INFORMATIONAL</msg>
<arg>‚úÖ Firewall check: INFORMATIONAL</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.874070" elapsed="0.000332"/>
</kw>
<kw name="Log Test End" owner="mail_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.875397" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.875274" elapsed="0.000240"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.875802" level="INFO">üèÅ Completed Test: Normal - Validate Firewall Rules for SMTP | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.875641" elapsed="0.000254"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.876160" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.876014" elapsed="0.000236"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:43:48.874829" elapsed="0.001495"/>
</kw>
<doc>üî• Check firewall rules allow SMTP traffic on port 25</doc>
<tag>firewall</tag>
<tag>normal</tag>
<tag>security</tag>
<tag>smtp</tag>
<status status="PASS" start="2025-10-05T15:43:48.789101" elapsed="0.087259"/>
</test>
<test id="s1-s2-t11" name="Normal - Test SMTP Authentication" line="162">
<kw name="Log Test Start" owner="mail_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.877794" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.877323" elapsed="0.000587"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.878174" level="INFO">üèÅ Starting Test: Normal - Test SMTP Authentication</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.878032" elapsed="0.000236"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.878522" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.878407" elapsed="0.000203"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:43:48.877047" elapsed="0.001637"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.878879" level="INFO">üîç Testing SMTP authentication configuration...</msg>
<arg>üîç Testing SMTP authentication configuration...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.878781" elapsed="0.000186"/>
</kw>
<kw name="Check SMTP Authentication Config" owner="mail_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.879483" level="INFO">üîê Checking SMTP authentication configuration...</msg>
<arg>üîê Checking SMTP authentication configuration...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.879359" elapsed="0.000213"/>
</kw>
<kw name="Execute Command" owner="mail_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:43:48.880028" level="INFO">Executing command 'postconf | grep -i sasl 2&gt;&amp;1 || echo "postconf not available"'.</msg>
<msg time="2025-10-05T15:43:48.920640" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:43:48.920927" level="INFO">${output} = postconf not available</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:43:48.879928" elapsed="0.041038"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:43:48.921074" elapsed="0.000140"/>
</return>
<msg time="2025-10-05T15:43:48.921497" level="INFO">${postfix_sasl} = postconf not available</msg>
<var>${postfix_sasl}</var>
<arg>postconf | grep -i sasl 2&gt;&amp;1 || echo "postconf not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:43:48.879721" elapsed="0.041814"/>
</kw>
<kw name="Execute Command" owner="mail_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:43:48.923407" level="INFO">Executing command 'cat /etc/postfix/sasl_passwd 2&gt;/dev/null || echo "No /etc/postfix/sasl_passwd"'.</msg>
<msg time="2025-10-05T15:43:48.974948" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:43:48.975282" level="INFO">${output} = No /etc/postfix/sasl_passwd</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:43:48.923060" elapsed="0.052258"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:43:48.975422" elapsed="0.000070"/>
</return>
<msg time="2025-10-05T15:43:48.975709" level="INFO">${sasl_config} = No /etc/postfix/sasl_passwd</msg>
<var>${sasl_config}</var>
<arg>cat /etc/postfix/sasl_passwd 2&gt;/dev/null || echo "No /etc/postfix/sasl_passwd"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:43:48.922353" elapsed="0.053391"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.976408" level="INFO">${auth_config} = === Postfix SASL Configuration ===
postconf not available

=== SASL Password File ===
No /etc/postfix/sasl_passwd</msg>
<var>${auth_config}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Postfix SASL Configuration ===</arg>
<arg>${postfix_sasl}</arg>
<arg>=== SASL Password File ===</arg>
<arg>${sasl_config}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:43:48.975973" elapsed="0.000471"/>
</kw>
<return>
<value>${auth_config}</value>
<status status="PASS" start="2025-10-05T15:43:48.976512" elapsed="0.000033"/>
</return>
<msg time="2025-10-05T15:43:48.976690" level="INFO">${auth_config} = === Postfix SASL Configuration ===
postconf not available

=== SASL Password File ===
No /etc/postfix/sasl_passwd</msg>
<var>${auth_config}</var>
<doc>üîê Check SMTP authentication configuration</doc>
<status status="PASS" start="2025-10-05T15:43:48.879136" elapsed="0.097582"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.977074" level="INFO">üîê SMTP Auth Configuration: === Postfix SASL Configuration ===
postconf not available

=== SASL Password File ===
No /etc/postfix/sasl_passwd</msg>
<arg>üîê SMTP Auth Configuration: ${auth_config}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.976860" elapsed="0.000381"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.977735" level="INFO">‚ÑπÔ∏è SMTP authentication settings documented</msg>
<arg>‚ÑπÔ∏è SMTP authentication settings documented</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.977450" elapsed="0.001361"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.979225" level="INFO">‚úÖ SMTP auth check: INFORMATIONAL</msg>
<arg>‚úÖ SMTP auth check: INFORMATIONAL</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.979048" elapsed="0.000314"/>
</kw>
<kw name="Log Test End" owner="mail_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.980370" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.980210" elapsed="0.000300"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.981014" level="INFO">üèÅ Completed Test: Normal - Test SMTP Authentication | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.980692" elapsed="0.000459"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.981507" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.981334" elapsed="0.000538"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:43:48.979740" elapsed="0.002265"/>
</kw>
<doc>üîê Test SMTP authentication capability if configured</doc>
<tag>authentication</tag>
<tag>normal</tag>
<tag>security</tag>
<tag>smtp</tag>
<status status="PASS" start="2025-10-05T15:43:48.876606" elapsed="0.105488"/>
</test>
<test id="s1-s2-t12" name="Normal - Validate Mail Aliases Configuration" line="175">
<kw name="Log Test Start" owner="mail_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.984486" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.984326" elapsed="0.000276"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.984951" level="INFO">üèÅ Starting Test: Normal - Validate Mail Aliases Configuration</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.984770" elapsed="0.000294"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.985405" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.985269" elapsed="0.000242"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:43:48.983868" elapsed="0.001781"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.986049" level="INFO">üîç Validating mail aliases configuration...</msg>
<arg>üîç Validating mail aliases configuration...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.985901" elapsed="0.000265"/>
</kw>
<kw name="Collect Mail Aliases Configuration" owner="mail_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:48.986755" level="INFO">üìÆ Collecting mail aliases configuration...</msg>
<arg>üìÆ Collecting mail aliases configuration...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:48.986642" elapsed="0.000223"/>
</kw>
<kw name="Execute Command" owner="mail_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:43:48.987480" level="INFO">Executing command 'cat /etc/aliases 2&gt;/dev/null | head -100 || echo "No /etc/aliases file"'.</msg>
<msg time="2025-10-05T15:43:49.028519" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:43:49.029000" level="INFO">${output} = </msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:43:48.987310" elapsed="0.041746"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:43:49.029198" elapsed="0.000082"/>
</return>
<msg time="2025-10-05T15:43:49.029553" level="INFO">${aliases} = </msg>
<var>${aliases}</var>
<arg>cat /etc/aliases 2&gt;/dev/null | head -100 || echo "No /etc/aliases file"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:43:48.987054" elapsed="0.042614"/>
</kw>
<return>
<value>${aliases}</value>
<status status="PASS" start="2025-10-05T15:43:49.029953" elapsed="0.000152"/>
</return>
<msg time="2025-10-05T15:43:49.030379" level="INFO">${aliases_content} = </msg>
<var>${aliases_content}</var>
<doc>üìÆ Collect mail aliases configuration</doc>
<status status="PASS" start="2025-10-05T15:43:48.986407" elapsed="0.044020"/>
</kw>
<kw name="Save Mail Aliases to File" owner="mail_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:43:49.031896" level="INFO">${timestamp} = 20251005_154349</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:43:49.031528" elapsed="0.000464"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:43:49.032601" level="INFO">${aliases_file} = results/test17_mail_configuration/data/mail_aliases_20251005_154349.txt</msg>
<var>${aliases_file}</var>
<arg>${DATA_DIR}/mail_aliases_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:43:49.032264" elapsed="0.000384"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:43:49.034009" level="INFO">${report} = =========================================
=== Mail Aliases Configuration ===
=========================================
Timestamp: 20251005_154349
Target Server: alhxvdvitap01 (172.30.16.186)

</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== Mail Aliases Configuration ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>${aliases_content}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:43:49.032835" elapsed="0.001298"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:43:49.044051" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test17_mail_configuration/data/mail_aliases_20251005_154349.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test17_mail_configuration/data/mail_aliases_20251005_154349.txt&lt;/a&gt;'.</msg>
<arg>${aliases_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:43:49.034387" elapsed="0.009859"/>
</kw>
<return>
<value>${aliases_file}</value>
<status status="PASS" start="2025-10-05T15:43:49.045023" elapsed="0.000068"/>
</return>
<msg time="2025-10-05T15:43:49.045333" level="INFO">${aliases_file} = results/test17_mail_configuration/data/mail_aliases_20251005_154349.txt</msg>
<var>${aliases_file}</var>
<arg>${aliases_content}</arg>
<doc>üíæ Save mail aliases to file</doc>
<status status="PASS" start="2025-10-05T15:43:49.030817" elapsed="0.014556"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:49.046107" level="INFO">üìÆ Mail aliases saved to: results/test17_mail_configuration/data/mail_aliases_20251005_154349.txt</msg>
<arg>üìÆ Mail aliases saved to: ${aliases_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:49.045566" elapsed="0.000716"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:49.046807" level="INFO">‚úÖ Mail aliases validation: INFORMATIONAL</msg>
<arg>‚úÖ Mail aliases validation: INFORMATIONAL</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:49.046612" elapsed="0.000346"/>
</kw>
<kw name="Log Test End" owner="mail_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:49.048064" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:49.047879" elapsed="0.000319"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:49.049184" level="INFO">üèÅ Completed Test: Normal - Validate Mail Aliases Configuration | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:49.048827" elapsed="0.000525"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:49.049786" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:49.049551" elapsed="0.000355"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:43:49.047381" elapsed="0.002617"/>
</kw>
<doc>üìÆ Validate mail aliases configuration for system accounts</doc>
<tag>aliases</tag>
<tag>configuration</tag>
<tag>mail</tag>
<tag>normal</tag>
<status status="PASS" start="2025-10-05T15:43:48.982465" elapsed="0.067594"/>
</test>
<test id="s1-s2-t13" name="Normal - Comprehensive Mail Configuration Summary" line="190">
<kw name="Log Test Start" owner="mail_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:49.051789" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:49.051602" elapsed="0.000343"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:49.052312" level="INFO">üèÅ Starting Test: Normal - Comprehensive Mail Configuration Summary</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:49.052117" elapsed="0.000326"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:49.052798" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:49.052618" elapsed="0.000305"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:43:49.051258" elapsed="0.001836"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:49.053384" level="INFO">üîç Generating comprehensive mail configuration summary...</msg>
<arg>üîç Generating comprehensive mail configuration summary...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:49.053247" elapsed="0.000268"/>
</kw>
<kw name="Validate All Mail Settings" owner="mail_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:49.054479" level="INFO">üìä Validating all mail settings...</msg>
<arg>üìä Validating all mail settings...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:49.054345" elapsed="0.000263"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:49.054925" level="INFO">‚úÖ All mail configuration data collected and validated</msg>
<arg>‚úÖ All mail configuration data collected and validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:49.054793" elapsed="0.000257"/>
</kw>
<doc>üìä Validate all mail settings and generate summary</doc>
<status status="PASS" start="2025-10-05T15:43:49.053979" elapsed="0.001173"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:49.055467" level="INFO">üìä Comprehensive mail configuration summary:</msg>
<arg>üìä Comprehensive mail configuration summary:</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:49.055327" elapsed="0.000262"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:49.055879" level="INFO">üìä - MX Records: Collected ‚úÖ</msg>
<arg>üìä - MX Records: Collected ‚úÖ</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:49.055750" elapsed="0.000247"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:49.056316" level="INFO">üìä - Mail.rc Config: Validated ‚úÖ</msg>
<arg>üìä - Mail.rc Config: Validated ‚úÖ</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:49.056164" elapsed="0.000287"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:49.056704" level="INFO">üìä - SMTP Connectivity: Tested ‚úÖ</msg>
<arg>üìä - SMTP Connectivity: Tested ‚úÖ</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:49.056583" elapsed="0.000212"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:49.057015" level="INFO">üìä - Test Email: Sent ‚úÖ</msg>
<arg>üìä - Test Email: Sent ‚úÖ</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:49.056914" elapsed="0.000191"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:49.057334" level="INFO">üìä - Mail Queue: Monitored ‚úÖ</msg>
<arg>üìä - Mail Queue: Monitored ‚úÖ</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:49.057225" elapsed="0.000256"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:49.057958" level="INFO">üìä - Services: Validated ‚úÖ</msg>
<arg>üìä - Services: Validated ‚úÖ</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:49.057683" elapsed="0.000374"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:49.058701" level="INFO">‚úÖ Comprehensive mail validation: COMPLETED</msg>
<arg>‚úÖ Comprehensive mail validation: COMPLETED</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:49.058592" elapsed="0.000206"/>
</kw>
<kw name="Log Test End" owner="mail_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:49.059514" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:49.059376" elapsed="0.000256"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:49.059933" level="INFO">üèÅ Completed Test: Normal - Comprehensive Mail Configuration Summary | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:49.059762" elapsed="0.000272"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:49.060539" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:49.060180" elapsed="0.000462"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:43:49.059027" elapsed="0.001712"/>
</kw>
<doc>üìä Generate comprehensive summary of all mail configuration data</doc>
<tag>compliance</tag>
<tag>comprehensive</tag>
<tag>normal</tag>
<tag>summary</tag>
<status status="PASS" start="2025-10-05T15:43:49.050471" elapsed="0.010315"/>
</test>
<kw name="Close All SSH Connections" owner="mail_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:49.061705" level="INFO">üîå Closing SSH connections...</msg>
<arg>üîå Closing SSH connections...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:49.061556" elapsed="0.000331"/>
</kw>
<kw name="Close All Connections" owner="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" start="2025-10-05T15:43:49.062061" elapsed="0.000325"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:43:49.062607" level="INFO">‚úÖ SSH connections closed</msg>
<arg>‚úÖ SSH connections closed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:43:49.062494" elapsed="0.000221"/>
</kw>
<doc>üîå Close all SSH connections</doc>
<status status="PASS" start="2025-10-05T15:43:49.061391" elapsed="0.001407"/>
</kw>
<doc>üìß Mail Configuration Validation Test Suite - Test-17
üîç Process: Find hostname in EDS ‚Üí SSH to server ‚Üí Collect mail/SMTP configuration ‚Üí Validate relay settings
‚úÖ Validates: SMTP relay server (mail.domain.com), port connectivity, mail.rc configuration, test email delivery
üìä Documents: MX records, SMTP connectivity, mail queue status, relay configuration
‚ö†Ô∏è Note: This test validates mail configuration if required in project scope</doc>
<status status="PASS" start="2025-10-05T15:43:20.807763" elapsed="28.255070"/>
</suite>
<suite id="s1-s3" name="Patch Management" source="/mnt/c/Users/sacpa/Projects/robot/robotframework/tests/test18_patch_management/patch_management.robot">
<kw name="Initialize Patch Management Test Environment" owner="patch_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:10.802960" level="INFO">üöÄ Initializing Test-18: Patch Management &amp; RSA Authentication Environment...</msg>
<arg>üöÄ Initializing Test-18: Patch Management &amp; RSA Authentication Environment...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:10.800401" elapsed="0.002707"/>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2025-10-05T15:44:10.804499" level="INFO" html="true">Directory '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test18_patch_management/data"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test18_patch_management/data&lt;/a&gt;' already exists.</msg>
<arg>${DATA_DIR}</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2025-10-05T15:44:10.803278" elapsed="0.001342"/>
</kw>
<kw name="Lookup Server Config" owner="EDSLookup">
<msg time="2025-10-05T15:44:10.845407" level="INFO">Found matching row for hostname 'alhxvdvitap01'</msg>
<msg time="2025-10-05T15:44:10.845702" level="INFO">Extracted IP from EDS: 172.30.16.186</msg>
<msg time="2025-10-05T15:44:10.845799" level="INFO">Extracted subnet from EDS: 10.26.216.0/24</msg>
<msg time="2025-10-05T15:44:10.845834" level="INFO">Extracted mask from EDS: 255.255.255.0</msg>
<msg time="2025-10-05T15:44:10.845862" level="INFO">Extracted gateway from EDS: 10.26.216.4</msg>
<msg time="2025-10-05T15:44:10.845887" level="INFO">Extracted CNAME from EDS: alhxvdvitap01</msg>
<msg time="2025-10-05T15:44:10.845912" level="INFO">Extracted domain from EDS: gnscet.com</msg>
<msg time="2025-10-05T15:44:10.845943" level="INFO">Extracted CPU cores from EDS: 8</msg>
<msg time="2025-10-05T15:44:10.845969" level="INFO">Extracted RAM from EDS: 16</msg>
<msg time="2025-10-05T15:44:10.845997" level="INFO">Extracted storage type from EDS: VSAN</msg>
<msg time="2025-10-05T15:44:10.846099" level="INFO">Extracted storage total TB from EDS: 0.465</msg>
<msg time="2025-10-05T15:44:10.846143" level="INFO">Extracted drive/volume group from EDS: rootvg:</msg>
<msg time="2025-10-05T15:44:10.846172" level="INFO">Extracted file system from EDS: /dev/mapper/rootvg-rootlv</msg>
<msg time="2025-10-05T15:44:10.846200" level="INFO">Extracted logical volume/partition from EDS: /</msg>
<msg time="2025-10-05T15:44:10.846228" level="INFO">Extracted storage allocation GB from EDS: 20</msg>
<msg time="2025-10-05T15:44:10.846255" level="INFO">Extracted recommended storage allocation GB from EDS: 20</msg>
<msg time="2025-10-05T15:44:10.846279" level="INFO">Extracted drive purpose from EDS: OS</msg>
<msg time="2025-10-05T15:44:10.846302" level="INFO">Extracted OS type from EDS: RHEL 9.6</msg>
<msg time="2025-10-05T15:44:10.846332" level="INFO">EDS configuration for alhxvdvitap01: {'ip': '172.30.16.186', 'subnet': '10.26.216.0/24', 'mask': '255.255.255.0', 'gateway': '10.26.216.4', 'cname': 'alhxvdvitap01', 'domain': 'gnscet.com', 'cpu_cores': '8', 'ram': '16', 'storage_type': 'VSAN', 'storage_total_tb': '0.465', 'drive_volume_group': 'rootvg:', 'file_system': '/dev/mapper/rootvg-rootlv', 'logical_volume_partition': '/', 'storage_allocation_gb': '20', 'recommended_storage_gb': '20', 'drive_purpose': 'OS', 'os_type': 'RHEL 9.6'}</msg>
<msg time="2025-10-05T15:44:10.846500" level="INFO">${eds_config} = {'ip': '172.30.16.186', 'subnet': '10.26.216.0/24', 'mask': '255.255.255.0', 'gateway': '10.26.216.4', 'cname': 'alhxvdvitap01', 'domain': 'gnscet.com', 'cpu_cores': '8', 'ram': '16', 'storage_type': ...</msg>
<var>${eds_config}</var>
<arg>${TARGET_HOSTNAME}</arg>
<doc>Lookup server configuration from EDS sheet based on hostname</doc>
<status status="PASS" start="2025-10-05T15:44:10.804842" elapsed="0.041687"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:44:10.851119" level="INFO">${TARGET_IP} = 172.30.16.186</msg>
<arg>${TARGET_IP}</arg>
<arg>${eds_config['ip']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:44:10.846883" elapsed="0.004627"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:10.853196" level="INFO">üìã Target Server: alhxvdvitap01</msg>
<arg>üìã Target Server: ${TARGET_HOSTNAME}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:10.852473" elapsed="0.000964"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:10.853938" level="INFO">üìã Target IP: 172.30.16.186</msg>
<arg>üìã Target IP: ${TARGET_IP}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:10.853632" elapsed="0.000407"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:10.854336" level="INFO">üîó Connecting to target server: 172.30.16.186...</msg>
<arg>üîó Connecting to target server: ${TARGET_IP}...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:10.854171" elapsed="0.000257"/>
</kw>
<kw name="Open Connection" owner="SSHLibrary">
<arg>${TARGET_IP}</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" start="2025-10-05T15:44:10.854551" elapsed="0.000230"/>
</kw>
<kw name="Login" owner="SSHLibrary">
<msg time="2025-10-05T15:44:10.855052" level="INFO">Logging into '172.30.16.186:22' as 'sac'.</msg>
<msg time="2025-10-05T15:44:12.738336" level="INFO">Read output: Welcome to Ubuntu 24.04.3 LTS (GNU/Linux 6.6.87.2-microsoft-standard-WSL2 x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/pro

 System information as of Sun Oct  5 15:44:11 CDT 2025

  System load:  0.79                Processes:             40
  Usage of /:   0.7% of 1006.85GB   Users logged in:       1
  Memory usage: 6%                  IPv4 address for eth0: 172.30.16.186
  Swap usage:   0%

 * Strictly confined Kubernetes makes edge and IoT secure. Learn how MicroK8s
   just raised the bar for easy, resilient and secure K8s cluster deployment.

   https://ubuntu.com/engage/secure-kubernetes-at-the-edge
Last login: Sun Oct  5 15:43:33 2025 from 172.30.16.186
[?2004hsac@alhxvdvitap01:~$</msg>
<arg>${SSH_USERNAME}</arg>
<arg>${SSH_PASSWORD}</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<status status="PASS" start="2025-10-05T15:44:10.854877" elapsed="1.883907"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:12.740303" level="INFO">‚úÖ SSH connection established successfully</msg>
<arg>‚úÖ SSH connection established successfully</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:12.739608" elapsed="0.001154"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:12.742371" level="INFO">‚úÖ Test-18 environment initialized</msg>
<arg>‚úÖ Test-18 environment initialized</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:12.741425" elapsed="0.001418"/>
</kw>
<doc>üèóÔ∏è Set up test environment for patch management and RSA validation</doc>
<status status="PASS" start="2025-10-05T15:44:10.799191" elapsed="1.943901"/>
</kw>
<test id="s1-s3-t1" name="Critical - Connect to Target Server" line="20">
<kw name="Log Test Start" owner="patch_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:12.746940" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:12.746534" elapsed="0.002895"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:12.750714" level="INFO">üèÅ Starting Test: Critical - Connect to Target Server</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:12.750298" elapsed="0.000809"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:12.752838" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:12.751405" elapsed="0.001631"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:44:12.745382" elapsed="0.007970"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:12.753941" level="INFO">üîç Verifying SSH connection to target server...</msg>
<arg>üîç Verifying SSH connection to target server...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:12.753675" elapsed="0.000448"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:12.754771" level="INFO">üìã Target: alhxvdvitap01 (172.30.16.186)</msg>
<arg>üìã Target: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:12.754423" elapsed="0.000528"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:12.756985" level="INFO">Executing command 'echo "Connection active"'.</msg>
<msg time="2025-10-05T15:44:12.770803" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:12.771120" level="INFO">${output} = Connection active</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:12.756570" elapsed="0.014589"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:12.771269" elapsed="0.000089"/>
</return>
<msg time="2025-10-05T15:44:12.771571" level="INFO">${connection_status} = Connection active</msg>
<var>${connection_status}</var>
<arg>echo "Connection active"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:12.755769" elapsed="0.015850"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${connection_status}</arg>
<arg>Connection active</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-10-05T15:44:12.771863" elapsed="0.000253"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:12.772409" level="INFO">‚úÖ SSH connection verified and active</msg>
<arg>‚úÖ SSH connection verified and active</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:12.772264" elapsed="0.000274"/>
</kw>
<kw name="Log Test End" owner="patch_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:12.773351" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:12.773218" elapsed="0.000233"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:12.773969" level="INFO">üèÅ Completed Test: Critical - Connect to Target Server | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:12.773612" elapsed="0.000485"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:12.774407" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:12.774265" elapsed="0.000243"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:44:12.772871" elapsed="0.001718"/>
</kw>
<doc>üîó Establish direct connection to target machine via SSH</doc>
<tag>connection</tag>
<tag>critical</tag>
<tag>infrastructure</tag>
<tag>ssh</tag>
<status status="PASS" start="2025-10-05T15:44:12.743343" elapsed="0.031291"/>
</test>
<test id="s1-s3-t2" name="Critical - Check RSA Agent Installation" line="33">
<kw name="Log Test Start" owner="patch_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:12.776396" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:12.776183" elapsed="0.000342"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:12.776821" level="INFO">üèÅ Starting Test: Critical - Check RSA Agent Installation</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:12.776661" elapsed="0.000264"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:12.777198" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:12.777054" elapsed="0.000240"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:44:12.775628" elapsed="0.001747"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:12.777708" level="INFO">üîç Checking RSA SecurID agent installation...</msg>
<arg>üîç Checking RSA SecurID agent installation...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:12.777590" elapsed="0.000254"/>
</kw>
<kw name="Check RSA Agent Installation" owner="patch_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:12.778443" level="INFO">üîê Checking RSA SecurID agent installation...</msg>
<arg>üîê Checking RSA SecurID agent installation...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:12.778335" elapsed="0.000198"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:12.779099" level="INFO">Executing command 'rpm -qa | grep -i rsa 2&gt;/dev/null || dpkg -l | grep -i rsa 2&gt;/dev/null || echo "No RSA packages found"'.</msg>
<msg time="2025-10-05T15:44:12.869295" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:12.869625" level="INFO">${output} = ii  libuchardet0:amd64                               0.0.8-1build1                             amd64        universal charset detection library - shared library
ii  libuuid1:amd64                     ...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:12.778961" elapsed="0.091768"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:12.870912" elapsed="0.000112"/>
</return>
<msg time="2025-10-05T15:44:12.871240" level="INFO">${rsa_package} = ii  libuchardet0:amd64                               0.0.8-1build1                             amd64        universal charset detection library - shared library
ii  libuuid1:amd64                     ...</msg>
<var>${rsa_package}</var>
<arg>rpm -qa | grep -i rsa 2&gt;/dev/null || dpkg -l | grep -i rsa 2&gt;/dev/null || echo "No RSA packages found"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:12.778736" elapsed="0.092581"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:12.872099" level="INFO">Executing command 'which rsaagent 2&gt;/dev/null || which rsaauth 2&gt;/dev/null || echo "RSA agent binary not found in PATH"'.</msg>
<msg time="2025-10-05T15:44:12.936214" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:12.936473" level="INFO">${output} = RSA agent binary not found in PATH</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:12.871960" elapsed="0.064548"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:12.936609" elapsed="0.000061"/>
</return>
<msg time="2025-10-05T15:44:12.936854" level="INFO">${rsa_agent_bin} = RSA agent binary not found in PATH</msg>
<var>${rsa_agent_bin}</var>
<arg>which rsaagent 2&gt;/dev/null || which rsaauth 2&gt;/dev/null || echo "RSA agent binary not found in PATH"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:12.871614" elapsed="0.065272"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:12.939093" level="INFO">Executing command 'ls -la /opt/rsa* 2&gt;/dev/null || ls -la /usr/local/rsa* 2&gt;/dev/null || echo "No RSA installation directories found"'.</msg>
<msg time="2025-10-05T15:44:12.994778" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:12.995108" level="INFO">${output} = No RSA installation directories found</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:12.938829" elapsed="0.056323"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:12.995271" elapsed="0.000090"/>
</return>
<msg time="2025-10-05T15:44:12.995654" level="INFO">${rsa_installation} = No RSA installation directories found</msg>
<var>${rsa_installation}</var>
<arg>ls -la /opt/rsa* 2&gt;/dev/null || ls -la /usr/local/rsa* 2&gt;/dev/null || echo "No RSA installation directories found"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:12.937873" elapsed="0.057819"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:12.996864" level="INFO">Executing command 'ls -la /opt/pam_client* 2&gt;/dev/null || ls -la /var/ace* 2&gt;/dev/null || echo "No ACE client found"'.</msg>
<msg time="2025-10-05T15:44:13.046114" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:13.046357" level="INFO">${output} = No ACE client found</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:12.996630" elapsed="0.049764"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:13.046510" elapsed="0.000057"/>
</return>
<msg time="2025-10-05T15:44:13.046722" level="INFO">${ace_client} = No ACE client found</msg>
<var>${ace_client}</var>
<arg>ls -la /opt/pam_client* 2&gt;/dev/null || ls -la /var/ace* 2&gt;/dev/null || echo "No ACE client found"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:12.996103" elapsed="0.050642"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.047236" level="INFO">${agent_status} = === RSA Packages ===
ii  libuchardet0:amd64                               0.0.8-1build1                             amd64        universal charset detection library - shared library
ii  libuuid1:amd64...</msg>
<var>${agent_status}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== RSA Packages ===</arg>
<arg>${rsa_package}</arg>
<arg>=== RSA Agent Binary ===</arg>
<arg>${rsa_agent_bin}</arg>
<arg>=== RSA Installation Directory ===</arg>
<arg>${rsa_installation}</arg>
<arg>=== ACE Client ===</arg>
<arg>${ace_client}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:13.046914" elapsed="0.000349"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.047733" level="INFO">${RSA_AGENT_STATUS} = === RSA Packages ===
ii  libuchardet0:amd64                               0.0.8-1build1                             amd64        universal charset detection library - shared library
ii  libuuid1:amd64...</msg>
<arg>${RSA_AGENT_STATUS}</arg>
<arg>${agent_status}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:44:13.047408" elapsed="0.000371"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.048025" level="INFO">üîê RSA Agent Installation Status collected</msg>
<arg>üîê RSA Agent Installation Status collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.047891" elapsed="0.000253"/>
</kw>
<return>
<value>${agent_status}</value>
<status status="PASS" start="2025-10-05T15:44:13.048210" elapsed="0.000045"/>
</return>
<msg time="2025-10-05T15:44:13.048382" level="INFO">${agent_status} = === RSA Packages ===
ii  libuchardet0:amd64                               0.0.8-1build1                             amd64        universal charset detection library - shared library
ii  libuuid1:amd64...</msg>
<var>${agent_status}</var>
<doc>üîê Check if RSA SecurID agent is installed</doc>
<status status="PASS" start="2025-10-05T15:44:12.778099" elapsed="0.270305"/>
</kw>
<kw name="Save RSA Agent Status to File" owner="patch_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:44:13.049113" level="INFO">${timestamp} = 20251005_154413</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:44:13.048906" elapsed="0.000233"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.049391" level="INFO">${agent_file} = results/test18_patch_management/data/rsa_agent_status_20251005_154413.txt</msg>
<var>${agent_file}</var>
<arg>${DATA_DIR}/rsa_agent_status_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:44:13.049237" elapsed="0.000195"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.049971" level="INFO">${report} = =========================================
=== RSA Agent Installation Status ===
=========================================
Timestamp: 20251005_154413
Target Server: alhxvdvitap01 (172.30.16.186)

=== R...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== RSA Agent Installation Status ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>${agent_status}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:13.049571" elapsed="0.000962"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:44:13.057676" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test18_patch_management/data/rsa_agent_status_20251005_154413.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test18_patch_management/data/rsa_agent_status_20251005_154413.txt&lt;/a&gt;'.</msg>
<arg>${agent_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:44:13.050676" elapsed="0.007237"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.058916" level="INFO">üìÑ RSA agent status saved to: results/test18_patch_management/data/rsa_agent_status_20251005_154413.txt</msg>
<arg>üìÑ RSA agent status saved to: ${agent_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.058522" elapsed="0.000575"/>
</kw>
<return>
<value>${agent_file}</value>
<status status="PASS" start="2025-10-05T15:44:13.059199" elapsed="0.000070"/>
</return>
<msg time="2025-10-05T15:44:13.059445" level="INFO">${agent_file} = results/test18_patch_management/data/rsa_agent_status_20251005_154413.txt</msg>
<var>${agent_file}</var>
<arg>${agent_status}</arg>
<doc>üíæ Save RSA agent installation status to file</doc>
<status status="PASS" start="2025-10-05T15:44:13.048609" elapsed="0.010864"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.059844" level="INFO">üìÑ RSA agent status saved to: results/test18_patch_management/data/rsa_agent_status_20251005_154413.txt</msg>
<arg>üìÑ RSA agent status saved to: ${agent_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.059621" elapsed="0.000336"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.060319" level="INFO">‚úÖ RSA agent installation check completed</msg>
<arg>‚úÖ RSA agent installation check completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.060142" elapsed="0.000289"/>
</kw>
<kw name="Log Test End" owner="patch_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.061367" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.061196" elapsed="0.000355"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.062021" level="INFO">üèÅ Completed Test: Critical - Check RSA Agent Installation | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.061714" elapsed="0.000412"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.062464" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.062282" elapsed="0.000305"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:44:13.060744" elapsed="0.001938"/>
</kw>
<doc>üîê Verify RSA SecurID agent is installed on the system</doc>
<tag>agent</tag>
<tag>critical</tag>
<tag>installation</tag>
<tag>rsa</tag>
<status status="PASS" start="2025-10-05T15:44:12.774945" elapsed="0.287810"/>
</test>
<test id="s1-s3-t3" name="Critical - Validate RSA Configuration Files" line="48">
<kw name="Log Test Start" owner="patch_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.064956" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.064728" elapsed="0.000339"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.066611" level="INFO">üèÅ Starting Test: Critical - Validate RSA Configuration Files</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.066351" elapsed="0.000427"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.067083" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.066940" elapsed="0.000232"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:44:13.064141" elapsed="0.003106"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.067457" level="INFO">üîç Validating RSA configuration files...</msg>
<arg>üîç Validating RSA configuration files...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.067352" elapsed="0.000194"/>
</kw>
<kw name="Collect RSA Configuration Files" owner="patch_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.068116" level="INFO">üìÑ Collecting RSA configuration files...</msg>
<arg>üìÑ Collecting RSA configuration files...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.068005" elapsed="0.000209"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:13.069026" level="INFO">Executing command 'cat /var/ace/sdconf.rec 2&gt;/dev/null || echo "No /var/ace/sdconf.rec"'.</msg>
<msg time="2025-10-05T15:44:13.098884" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:13.099128" level="INFO">${output} = No /var/ace/sdconf.rec</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:13.068601" elapsed="0.030566"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:13.099264" elapsed="0.000133"/>
</return>
<msg time="2025-10-05T15:44:13.099636" level="INFO">${sdconf} = No /var/ace/sdconf.rec</msg>
<var>${sdconf}</var>
<arg>cat /var/ace/sdconf.rec 2&gt;/dev/null || echo "No /var/ace/sdconf.rec"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:13.068383" elapsed="0.031288"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:13.103212" level="INFO">Executing command 'cat /var/ace/sdopts.rec 2&gt;/dev/null || echo "No /var/ace/sdopts.rec"'.</msg>
<msg time="2025-10-05T15:44:13.146797" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:13.147140" level="INFO">${output} = No /var/ace/sdopts.rec</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:13.100422" elapsed="0.046766"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:13.147312" elapsed="0.000086"/>
</return>
<msg time="2025-10-05T15:44:13.147817" level="INFO">${sdopts} = No /var/ace/sdopts.rec</msg>
<var>${sdopts}</var>
<arg>cat /var/ace/sdopts.rec 2&gt;/dev/null || echo "No /var/ace/sdopts.rec"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:13.100004" elapsed="0.047878"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:13.149267" level="INFO">Executing command 'cat /etc/pam.d/rsa 2&gt;/dev/null || grep -r rsa /etc/pam.d/ 2&gt;/dev/null || echo "No PAM RSA configuration"'.</msg>
<msg time="2025-10-05T15:44:13.219775" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:13.220096" level="INFO">${output} = No PAM RSA configuration</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:13.149006" elapsed="0.071136"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:13.220260" elapsed="0.000179"/>
</return>
<msg time="2025-10-05T15:44:13.220781" level="INFO">${pam_rsa} = No PAM RSA configuration</msg>
<var>${pam_rsa}</var>
<arg>cat /etc/pam.d/rsa 2&gt;/dev/null || grep -r rsa /etc/pam.d/ 2&gt;/dev/null || echo "No PAM RSA configuration"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:13.148396" elapsed="0.072432"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:13.222264" level="INFO">Executing command 'ls -la /var/ace/ 2&gt;/dev/null || echo "No /var/ace/ directory"'.</msg>
<msg time="2025-10-05T15:44:13.272160" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:13.272468" level="INFO">${output} = No /var/ace/ directory</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:13.222000" elapsed="0.050514"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:13.272702" elapsed="0.000113"/>
</return>
<msg time="2025-10-05T15:44:13.273083" level="INFO">${ace_data} = No /var/ace/ directory</msg>
<var>${ace_data}</var>
<arg>ls -la /var/ace/ 2&gt;/dev/null || echo "No /var/ace/ directory"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:13.221280" elapsed="0.052328"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:13.275564" level="INFO">Executing command 'ls -la /opt/rsa/*/config/ 2&gt;/dev/null || echo "No RSA config directory"'.</msg>
<msg time="2025-10-05T15:44:13.338664" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:13.338961" level="INFO">${output} = No RSA config directory</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:13.275185" elapsed="0.063822"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:13.339133" elapsed="0.000080"/>
</return>
<msg time="2025-10-05T15:44:13.339530" level="INFO">${rsa_config_dir} = No RSA config directory</msg>
<var>${rsa_config_dir}</var>
<arg>ls -la /opt/rsa/*/config/ 2&gt;/dev/null || echo "No RSA config directory"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:13.274353" elapsed="0.065243"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.340646" level="INFO">${config_files} = === /var/ace/sdconf.rec ===
No /var/ace/sdconf.rec

=== /var/ace/sdopts.rec ===
No /var/ace/sdopts.rec

=== PAM RSA Configuration ===
No PAM RSA configuration

=== /var/ace/ Directory ===
No /var/ace/...</msg>
<var>${config_files}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== /var/ace/sdconf.rec ===</arg>
<arg>${sdconf}</arg>
<arg>=== /var/ace/sdopts.rec ===</arg>
<arg>${sdopts}</arg>
<arg>=== PAM RSA Configuration ===</arg>
<arg>${pam_rsa}</arg>
<arg>=== /var/ace/ Directory ===</arg>
<arg>${ace_data}</arg>
<arg>=== RSA Config Directory ===</arg>
<arg>${rsa_config_dir}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:13.339909" elapsed="0.000799"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.342448" level="INFO">${RSA_CONFIG_FILES} = === /var/ace/sdconf.rec ===
No /var/ace/sdconf.rec

=== /var/ace/sdopts.rec ===
No /var/ace/sdopts.rec

=== PAM RSA Configuration ===
No PAM RSA configuration

=== /var/ace/ Directory ===
No /var/ace/...</msg>
<arg>${RSA_CONFIG_FILES}</arg>
<arg>${config_files}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:44:13.341535" elapsed="0.001036"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.343233" level="INFO">üìÑ RSA configuration files collected</msg>
<arg>üìÑ RSA configuration files collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.342874" elapsed="0.000637"/>
</kw>
<return>
<value>${config_files}</value>
<status status="PASS" start="2025-10-05T15:44:13.343658" elapsed="0.000141"/>
</return>
<msg time="2025-10-05T15:44:13.344185" level="INFO">${config_status} = === /var/ace/sdconf.rec ===
No /var/ace/sdconf.rec

=== /var/ace/sdopts.rec ===
No /var/ace/sdopts.rec

=== PAM RSA Configuration ===
No PAM RSA configuration

=== /var/ace/ Directory ===
No /var/ace/...</msg>
<var>${config_status}</var>
<doc>üìÑ Collect RSA configuration files from common locations</doc>
<status status="PASS" start="2025-10-05T15:44:13.067767" elapsed="0.276500"/>
</kw>
<kw name="Save RSA Config to File" owner="patch_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:44:13.348551" level="INFO">${timestamp} = 20251005_154413</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:44:13.348131" elapsed="0.000467"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.349155" level="INFO">${config_file} = results/test18_patch_management/data/rsa_config_20251005_154413.txt</msg>
<var>${config_file}</var>
<arg>${DATA_DIR}/rsa_config_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:44:13.348875" elapsed="0.000320"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.350380" level="INFO">${report} = =========================================
=== RSA Configuration Files ===
=========================================
Timestamp: 20251005_154413
Target Server: alhxvdvitap01 (172.30.16.186)

=== /var/ac...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== RSA Configuration Files ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>${config_status}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:13.349350" elapsed="0.001080"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:44:13.358793" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test18_patch_management/data/rsa_config_20251005_154413.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test18_patch_management/data/rsa_config_20251005_154413.txt&lt;/a&gt;'.</msg>
<arg>${config_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:44:13.351383" elapsed="0.007541"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.359331" level="INFO">üìÑ RSA configuration saved to: results/test18_patch_management/data/rsa_config_20251005_154413.txt</msg>
<arg>üìÑ RSA configuration saved to: ${config_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.359116" elapsed="0.000331"/>
</kw>
<return>
<value>${config_file}</value>
<status status="PASS" start="2025-10-05T15:44:13.359526" elapsed="0.000051"/>
</return>
<msg time="2025-10-05T15:44:13.359725" level="INFO">${config_file} = results/test18_patch_management/data/rsa_config_20251005_154413.txt</msg>
<var>${config_file}</var>
<arg>${config_status}</arg>
<doc>üíæ Save RSA configuration to file</doc>
<status status="PASS" start="2025-10-05T15:44:13.344801" elapsed="0.014967"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.360115" level="INFO">üìÑ RSA configuration saved to: results/test18_patch_management/data/rsa_config_20251005_154413.txt</msg>
<arg>üìÑ RSA configuration saved to: ${config_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.359895" elapsed="0.000334"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.360496" level="INFO">‚úÖ RSA configuration files validated</msg>
<arg>‚úÖ RSA configuration files validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.360376" elapsed="0.000216"/>
</kw>
<kw name="Log Test End" owner="patch_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.361862" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.361659" elapsed="0.000301"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.362276" level="INFO">üèÅ Completed Test: Critical - Validate RSA Configuration Files | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.362085" elapsed="0.000288"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.362637" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.362508" elapsed="0.000226"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:44:13.361179" elapsed="0.001644"/>
</kw>
<doc>üìÑ Check for RSA configuration files and validate their presence</doc>
<tag>configuration</tag>
<tag>critical</tag>
<tag>files</tag>
<tag>rsa</tag>
<status status="PASS" start="2025-10-05T15:44:13.063165" elapsed="0.299711"/>
</test>
<test id="s1-s3-t4" name="Critical - Check RSA Authentication Settings" line="63">
<kw name="Log Test Start" owner="patch_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.367058" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.366886" elapsed="0.000402"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.368054" level="INFO">üèÅ Starting Test: Critical - Check RSA Authentication Settings</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.367703" elapsed="0.000819"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.368885" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.368696" elapsed="0.000317"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:44:13.363610" elapsed="0.005530"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.369427" level="INFO">üîç Checking RSA authentication settings...</msg>
<arg>üîç Checking RSA authentication settings...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.369268" elapsed="0.000332"/>
</kw>
<kw name="Validate RSA Authentication Settings" owner="patch_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.370447" level="INFO">üîê Validating RSA authentication settings...</msg>
<arg>üîê Validating RSA authentication settings...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.370339" elapsed="0.000215"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:13.371051" level="INFO">Executing command 'grep -i "challengeresponse|pubkeyauth|rsa" /etc/ssh/sshd_config 2&gt;/dev/null || echo "No RSA settings in sshd_config"'.</msg>
<msg time="2025-10-05T15:44:13.393640" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:13.394200" level="INFO">${output} = No RSA settings in sshd_config</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:13.370943" elapsed="0.023667"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:13.394774" elapsed="0.000089"/>
</return>
<msg time="2025-10-05T15:44:13.395111" level="INFO">${sshd_config} = No RSA settings in sshd_config</msg>
<var>${sshd_config}</var>
<arg>grep -i "challengeresponse\|pubkeyauth\|rsa" /etc/ssh/sshd_config 2&gt;/dev/null || echo "No RSA settings in sshd_config"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:13.370718" elapsed="0.024431"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:13.396198" level="INFO">Executing command 'grep -r "pam_rsa|pam_securid" /etc/pam.d/ 2&gt;/dev/null || echo "No RSA PAM configuration"'.</msg>
<msg time="2025-10-05T15:44:13.447581" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:13.448034" level="INFO">${output} = No RSA PAM configuration</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:13.396044" elapsed="0.053037"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:13.449257" elapsed="0.000076"/>
</return>
<msg time="2025-10-05T15:44:13.449607" level="INFO">${pam_config} = No RSA PAM configuration</msg>
<var>${pam_config}</var>
<arg>grep -r "pam_rsa\|pam_securid" /etc/pam.d/ 2&gt;/dev/null || echo "No RSA PAM configuration"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:13.395551" elapsed="0.054100"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:13.450694" level="INFO">Executing command 'ls -la /lib*/security/*rsa* 2&gt;/dev/null || ls -la /lib*/security/*securid* 2&gt;/dev/null || echo "No RSA auth modules found"'.</msg>
<msg time="2025-10-05T15:44:13.512381" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:13.512716" level="INFO">${output} = No RSA auth modules found</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:13.450480" elapsed="0.062279"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:13.512915" elapsed="0.000091"/>
</return>
<msg time="2025-10-05T15:44:13.513288" level="INFO">${auth_modules} = No RSA auth modules found</msg>
<var>${auth_modules}</var>
<arg>ls -la /lib*/security/*rsa* 2&gt;/dev/null || ls -la /lib*/security/*securid* 2&gt;/dev/null || echo "No RSA auth modules found"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:13.450088" elapsed="0.063243"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:13.514678" level="INFO">Executing command 'grep rsa /etc/nsswitch.conf 2&gt;/dev/null || echo "No RSA in nsswitch.conf"'.</msg>
<msg time="2025-10-05T15:44:13.558115" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:13.558401" level="INFO">${output} = No RSA in nsswitch.conf</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:13.514472" elapsed="0.043970"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:13.558566" elapsed="0.000080"/>
</return>
<msg time="2025-10-05T15:44:13.558951" level="INFO">${nsswitch} = No RSA in nsswitch.conf</msg>
<var>${nsswitch}</var>
<arg>grep rsa /etc/nsswitch.conf 2&gt;/dev/null || echo "No RSA in nsswitch.conf"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:13.513947" elapsed="0.045043"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.559579" level="INFO">${auth_settings} = === SSH Configuration (RSA) ===
No RSA settings in sshd_config

=== PAM RSA Configuration ===
No RSA PAM configuration

=== RSA Authentication Modules ===
No RSA auth modules found

=== nsswitch.conf ...</msg>
<var>${auth_settings}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== SSH Configuration (RSA) ===</arg>
<arg>${sshd_config}</arg>
<arg>=== PAM RSA Configuration ===</arg>
<arg>${pam_config}</arg>
<arg>=== RSA Authentication Modules ===</arg>
<arg>${auth_modules}</arg>
<arg>=== nsswitch.conf ===</arg>
<arg>${nsswitch}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:13.559212" elapsed="0.000398"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.559930" level="INFO">${RSA_AUTH_SETTINGS} = === SSH Configuration (RSA) ===
No RSA settings in sshd_config

=== PAM RSA Configuration ===
No RSA PAM configuration

=== RSA Authentication Modules ===
No RSA auth modules found

=== nsswitch.conf ...</msg>
<arg>${RSA_AUTH_SETTINGS}</arg>
<arg>${auth_settings}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:44:13.559751" elapsed="0.000244"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.560252" level="INFO">üîê RSA authentication settings validated</msg>
<arg>üîê RSA authentication settings validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.560120" elapsed="0.000252"/>
</kw>
<return>
<value>${auth_settings}</value>
<status status="PASS" start="2025-10-05T15:44:13.560435" elapsed="0.000039"/>
</return>
<msg time="2025-10-05T15:44:13.560626" level="INFO">${auth_settings} = === SSH Configuration (RSA) ===
No RSA settings in sshd_config

=== PAM RSA Configuration ===
No RSA PAM configuration

=== RSA Authentication Modules ===
No RSA auth modules found

=== nsswitch.conf ...</msg>
<var>${auth_settings}</var>
<doc>üîê Validate RSA authentication settings in SSH and PAM</doc>
<status status="PASS" start="2025-10-05T15:44:13.370114" elapsed="0.190535"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.560883" level="INFO">üîê RSA Authentication Status: === SSH Configuration (RSA) ===
No RSA settings in sshd_config

=== PAM RSA Configuration ===
No RSA PAM configuration

=== RSA Authentication Modules ===
No RSA auth modules found

=== nsswitch.conf ===
No RSA in nsswitch.conf</msg>
<arg>üîê RSA Authentication Status: ${auth_settings}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.560748" elapsed="0.000229"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.561226" level="INFO">‚úÖ RSA authentication settings validated</msg>
<arg>‚úÖ RSA authentication settings validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.561122" elapsed="0.000196"/>
</kw>
<kw name="Log Test End" owner="patch_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.562194" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.562052" elapsed="0.000232"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.562943" level="INFO">üèÅ Completed Test: Critical - Check RSA Authentication Settings | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.562723" elapsed="0.000318"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.563363" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.563188" elapsed="0.000271"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:44:13.561632" elapsed="0.001906"/>
</kw>
<doc>üîê Verify RSA authentication is properly configured</doc>
<tag>authentication</tag>
<tag>critical</tag>
<tag>rsa</tag>
<tag>settings</tag>
<status status="PASS" start="2025-10-05T15:44:13.363134" elapsed="0.200453"/>
</test>
<test id="s1-s3-t5" name="Critical - Test RSA Server Connectivity" line="75">
<kw name="Log Test Start" owner="patch_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.565870" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.565621" elapsed="0.000359"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.566248" level="INFO">üèÅ Starting Test: Critical - Test RSA Server Connectivity</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.566099" elapsed="0.000243"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.566605" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.566483" elapsed="0.000208"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:44:13.564962" elapsed="0.001808"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.566964" level="INFO">üîç Testing RSA server connectivity...</msg>
<arg>üîç Testing RSA server connectivity...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.566869" elapsed="0.000177"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.567284" level="INFO">üìã Expected RSA Server: rsa.domain.com</msg>
<arg>üìã Expected RSA Server: ${EXPECTED_RSA_SERVER}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.567157" elapsed="0.000209"/>
</kw>
<kw name="Test RSA Server Connectivity" owner="patch_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:13.567871" level="INFO">üåê Testing RSA server connectivity...</msg>
<arg>üåê Testing RSA server connectivity...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:13.567782" elapsed="0.000173"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:13.568512" level="INFO">Executing command 'grep -r "auth_server|ace_server" /var/ace/ /opt/rsa/ 2&gt;/dev/null || echo "No RSA server configuration found"'.</msg>
<msg time="2025-10-05T15:44:13.606801" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:13.607029" level="INFO">${output} = No RSA server configuration found</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:13.568369" elapsed="0.038690"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:13.607149" elapsed="0.000055"/>
</return>
<msg time="2025-10-05T15:44:13.607365" level="INFO">${rsa_server_config} = No RSA server configuration found</msg>
<var>${rsa_server_config}</var>
<arg>grep -r "auth_server\|ace_server" /var/ace/ /opt/rsa/ 2&gt;/dev/null || echo "No RSA server configuration found"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:13.568101" elapsed="0.039289"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:13.608281" level="INFO">Executing command 'timeout 5 nc -zv rsa.domain.com 5500 2&gt;&amp;1 || echo "Port 5500 test failed/timeout"'.</msg>
<msg time="2025-10-05T15:44:13.752705" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:13.753138" level="INFO">${output} = nc: getaddrinfo for host "rsa.domain.com" port 5500: No address associated with hostname
Port 5500 test failed/timeout</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:13.608075" elapsed="0.145139"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:13.753466" elapsed="0.000164"/>
</return>
<msg time="2025-10-05T15:44:13.754063" level="INFO">${port_5500_test} = nc: getaddrinfo for host "rsa.domain.com" port 5500: No address associated with hostname
Port 5500 test failed/timeout</msg>
<var>${port_5500_test}</var>
<arg>timeout 5 nc -zv ${EXPECTED_RSA_SERVER} 5500 2&gt;&amp;1 || echo "Port 5500 test failed/timeout"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:13.607625" elapsed="0.146482"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:13.755200" level="INFO">Executing command 'timeout 5 nc -zv rsa.domain.com 5555 2&gt;&amp;1 || echo "Port 5555 test failed/timeout"'.</msg>
<msg time="2025-10-05T15:44:13.850263" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:13.850522" level="INFO">${output} = nc: getaddrinfo for host "rsa.domain.com" port 5555: No address associated with hostname
Port 5555 test failed/timeout</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:13.754999" elapsed="0.095560"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:13.850658" elapsed="0.000065"/>
</return>
<msg time="2025-10-05T15:44:13.850969" level="INFO">${port_5555_test} = nc: getaddrinfo for host "rsa.domain.com" port 5555: No address associated with hostname
Port 5555 test failed/timeout</msg>
<var>${port_5555_test}</var>
<arg>timeout 5 nc -zv ${EXPECTED_RSA_SERVER} 5555 2&gt;&amp;1 || echo "Port 5555 test failed/timeout"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:13.754438" elapsed="0.096584"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:13.852039" level="INFO">Executing command 'nslookup rsa.domain.com 2&gt;&amp;1 || dig rsa.domain.com 2&gt;&amp;1 || echo "DNS lookup not available"'.</msg>
<msg time="2025-10-05T15:44:13.904950" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:13.905464" level="INFO">${output} = bash: line 1: nslookup: command not found
bash: line 1: dig: command not found
DNS lookup not available</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:13.851846" elapsed="0.053737"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:13.905874" elapsed="0.000137"/>
</return>
<msg time="2025-10-05T15:44:13.906451" level="INFO">${dns_test} = bash: line 1: nslookup: command not found
bash: line 1: dig: command not found
DNS lookup not available</msg>
<var>${dns_test}</var>
<arg>nslookup ${EXPECTED_RSA_SERVER} 2&gt;&amp;1 || dig ${EXPECTED_RSA_SERVER} 2&gt;&amp;1 || echo "DNS lookup not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:13.851368" elapsed="0.055133"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:13.907961" level="INFO">Executing command 'ping -c 3 rsa.domain.com 2&gt;&amp;1 || echo "Ping test failed"'.</msg>
<msg time="2025-10-05T15:44:14.011425" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:14.012699" level="INFO">${output} = ping: rsa.domain.com: No address associated with hostname
Ping test failed</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:13.907550" elapsed="0.105263"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:14.012979" elapsed="0.000113"/>
</return>
<msg time="2025-10-05T15:44:14.013451" level="INFO">${ping_test} = ping: rsa.domain.com: No address associated with hostname
Ping test failed</msg>
<var>${ping_test}</var>
<arg>ping -c 3 ${EXPECTED_RSA_SERVER} 2&gt;&amp;1 || echo "Ping test failed"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:13.906883" elapsed="0.106619"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.014541" level="INFO">${connectivity_result} = === RSA Server Configuration ===
No RSA server configuration found

=== Port 5500 Test (RSA Auth) ===
nc: getaddrinfo for host "rsa.domain.com" port 5500: No address associated with hostname
Port 5500...</msg>
<var>${connectivity_result}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== RSA Server Configuration ===</arg>
<arg>${rsa_server_config}</arg>
<arg>=== Port 5500 Test (RSA Auth) ===</arg>
<arg>${port_5500_test}</arg>
<arg>=== Port 5555 Test (RSA Auth) ===</arg>
<arg>${port_5555_test}</arg>
<arg>=== DNS Resolution ===</arg>
<arg>${dns_test}</arg>
<arg>=== Ping Test ===</arg>
<arg>${ping_test}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:14.013862" elapsed="0.000717"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.014997" level="INFO">üåê RSA server connectivity test completed</msg>
<arg>üåê RSA server connectivity test completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.014794" elapsed="0.000343"/>
</kw>
<return>
<value>${connectivity_result}</value>
<status status="PASS" start="2025-10-05T15:44:14.015205" elapsed="0.000045"/>
</return>
<msg time="2025-10-05T15:44:14.015426" level="INFO">${connectivity_result} = === RSA Server Configuration ===
No RSA server configuration found

=== Port 5500 Test (RSA Auth) ===
nc: getaddrinfo for host "rsa.domain.com" port 5500: No address associated with hostname
Port 5500...</msg>
<var>${connectivity_result}</var>
<doc>üåê Test connectivity to RSA authentication server</doc>
<status status="PASS" start="2025-10-05T15:44:13.567598" elapsed="0.447860"/>
</kw>
<kw name="Save RSA Connectivity Test to File" owner="patch_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:44:14.016449" level="INFO">${timestamp} = 20251005_154414</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:44:14.016190" elapsed="0.000296"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.016852" level="INFO">${conn_file} = results/test18_patch_management/data/rsa_connectivity_20251005_154414.txt</msg>
<var>${conn_file}</var>
<arg>${DATA_DIR}/rsa_connectivity_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:44:14.016634" elapsed="0.000250"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.017427" level="INFO">${report} = =========================================
=== RSA Server Connectivity Test ===
=========================================
Timestamp: 20251005_154414
Target Server: alhxvdvitap01 (172.30.16.186)
Expecte...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== RSA Server Connectivity Test ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>Expected RSA Server: ${EXPECTED_RSA_SERVER}</arg>
<arg>${connectivity_result}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:14.017011" elapsed="0.000449"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:44:14.037852" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test18_patch_management/data/rsa_connectivity_20251005_154414.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test18_patch_management/data/rsa_connectivity_20251005_154414.txt&lt;/a&gt;'.</msg>
<arg>${conn_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:44:14.017617" elapsed="0.020450"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.038733" level="INFO">üìÑ RSA connectivity test saved to: results/test18_patch_management/data/rsa_connectivity_20251005_154414.txt</msg>
<arg>üìÑ RSA connectivity test saved to: ${conn_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.038365" elapsed="0.000546"/>
</kw>
<return>
<value>${conn_file}</value>
<status status="PASS" start="2025-10-05T15:44:14.039009" elapsed="0.000076"/>
</return>
<msg time="2025-10-05T15:44:14.039355" level="INFO">${conn_file} = results/test18_patch_management/data/rsa_connectivity_20251005_154414.txt</msg>
<var>${conn_file}</var>
<arg>${connectivity_result}</arg>
<doc>üíæ Save RSA connectivity test results to file</doc>
<status status="PASS" start="2025-10-05T15:44:14.015732" elapsed="0.023666"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.039851" level="INFO">üìÑ Connectivity test saved to: results/test18_patch_management/data/rsa_connectivity_20251005_154414.txt</msg>
<arg>üìÑ Connectivity test saved to: ${conn_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.039614" elapsed="0.000362"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.040314" level="INFO">‚úÖ RSA server connectivity test completed</msg>
<arg>‚úÖ RSA server connectivity test completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.040148" elapsed="0.000297"/>
</kw>
<kw name="Log Test End" owner="patch_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.041455" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.041290" elapsed="0.000273"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.042022" level="INFO">üèÅ Completed Test: Critical - Test RSA Server Connectivity | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.041704" elapsed="0.000443"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.042459" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.042283" elapsed="0.000331"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:44:14.040781" elapsed="0.001915"/>
</kw>
<doc>üåê Test connectivity to RSA authentication server</doc>
<tag>connectivity</tag>
<tag>critical</tag>
<tag>network</tag>
<tag>rsa</tag>
<status status="PASS" start="2025-10-05T15:44:13.563858" elapsed="0.479777"/>
</test>
<test id="s1-s3-t6" name="Critical - Validate RSA Agent Status" line="91">
<kw name="Log Test Start" owner="patch_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.045675" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.045368" elapsed="0.000448"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.046282" level="INFO">üèÅ Starting Test: Critical - Validate RSA Agent Status</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.046067" elapsed="0.000326"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.046629" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.046518" elapsed="0.000201"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:44:14.044911" elapsed="0.001881"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.046996" level="INFO">üîç Validating RSA agent service status...</msg>
<arg>üîç Validating RSA agent service status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.046895" elapsed="0.000189"/>
</kw>
<kw name="Check RSA Agent Service Status" owner="patch_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.047667" level="INFO">üîß Checking RSA agent service status...</msg>
<arg>üîß Checking RSA agent service status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.047559" elapsed="0.000203"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:14.048241" level="INFO">Executing command 'systemctl status rsaagent 2&gt;&amp;1 || systemctl status rsa 2&gt;&amp;1 || echo "RSA service not found in systemctl"'.</msg>
<msg time="2025-10-05T15:44:14.070648" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:14.070845" level="INFO">${output} = Unit rsaagent.service could not be found.
Unit rsa.service could not be found.
RSA service not found in systemctl</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:14.048136" elapsed="0.022734"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:14.070989" elapsed="0.000067"/>
</return>
<msg time="2025-10-05T15:44:14.071238" level="INFO">${rsa_service} = Unit rsaagent.service could not be found.
Unit rsa.service could not be found.
RSA service not found in systemctl</msg>
<var>${rsa_service}</var>
<arg>systemctl status rsaagent 2&gt;&amp;1 || systemctl status rsa 2&gt;&amp;1 || echo "RSA service not found in systemctl"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:14.047921" elapsed="0.023340"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:14.071900" level="INFO">Executing command 'systemctl status aceagent 2&gt;&amp;1 || echo "ACE agent service not found"'.</msg>
<msg time="2025-10-05T15:44:14.133278" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:14.133634" level="INFO">${output} = Unit aceagent.service could not be found.
ACE agent service not found</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:14.071763" elapsed="0.061906"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:14.133856" elapsed="0.000091"/>
</return>
<msg time="2025-10-05T15:44:14.134140" level="INFO">${ace_service} = Unit aceagent.service could not be found.
ACE agent service not found</msg>
<var>${ace_service}</var>
<arg>systemctl status aceagent 2&gt;&amp;1 || echo "ACE agent service not found"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:14.071486" elapsed="0.062682"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:14.135031" level="INFO">Executing command 'systemctl list-units | grep -i rsa 2&gt;&amp;1 || echo "No RSA services in systemctl list"'.</msg>
<msg time="2025-10-05T15:44:14.204709" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:14.205141" level="INFO">${output} = No RSA services in systemctl list</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:14.134883" elapsed="0.070326"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:14.205377" elapsed="0.000115"/>
</return>
<msg time="2025-10-05T15:44:14.206153" level="INFO">${service_list} = No RSA services in systemctl list</msg>
<var>${service_list}</var>
<arg>systemctl list-units | grep -i rsa 2&gt;&amp;1 || echo "No RSA services in systemctl list"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:14.134429" elapsed="0.071798"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:14.207914" level="INFO">Executing command 'ps aux | grep -i rsa | grep -v grep || echo "No RSA processes running"'.</msg>
<msg time="2025-10-05T15:44:14.272726" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:14.273028" level="INFO">${output} = No RSA processes running</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:14.207668" elapsed="0.065394"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:14.273154" elapsed="0.000061"/>
</return>
<msg time="2025-10-05T15:44:14.273464" level="INFO">${rsa_process} = No RSA processes running</msg>
<var>${rsa_process}</var>
<arg>ps aux | grep -i rsa | grep -v grep || echo "No RSA processes running"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:14.206927" elapsed="0.066588"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.274365" level="INFO">${service_status} = === RSA Agent Service ===
Unit rsaagent.service could not be found.
Unit rsa.service could not be found.
RSA service not found in systemctl

=== ACE Agent Service ===
Unit aceagent.service could not b...</msg>
<var>${service_status}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== RSA Agent Service ===</arg>
<arg>${rsa_service}</arg>
<arg>=== ACE Agent Service ===</arg>
<arg>${ace_service}</arg>
<arg>=== RSA Services List ===</arg>
<arg>${service_list}</arg>
<arg>=== RSA Processes ===</arg>
<arg>${rsa_process}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:14.273894" elapsed="0.000503"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.276001" level="INFO">üîß RSA agent service status collected</msg>
<arg>üîß RSA agent service status collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.275782" elapsed="0.000358"/>
</kw>
<return>
<value>${service_status}</value>
<status status="PASS" start="2025-10-05T15:44:14.276222" elapsed="0.000051"/>
</return>
<msg time="2025-10-05T15:44:14.276429" level="INFO">${service_status} = === RSA Agent Service ===
Unit rsaagent.service could not be found.
Unit rsa.service could not be found.
RSA service not found in systemctl

=== ACE Agent Service ===
Unit aceagent.service could not b...</msg>
<var>${service_status}</var>
<doc>üîß Check if RSA agent service is running</doc>
<status status="PASS" start="2025-10-05T15:44:14.047301" elapsed="0.229157"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.276777" level="INFO">üîß RSA Agent Service: === RSA Agent Service ===
Unit rsaagent.service could not be found.
Unit rsa.service could not be found.
RSA service not found in systemctl

=== ACE Agent Service ===
Unit aceagent.service could not be found.
ACE agent service not found

=== RSA Services List ===
No RSA services in systemctl list

=== RSA Processes ===
No RSA processes running</msg>
<arg>üîß RSA Agent Service: ${service_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.276589" elapsed="0.000321"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.277345" level="INFO">‚úÖ RSA agent service status validated</msg>
<arg>‚úÖ RSA agent service status validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.277109" elapsed="0.000366"/>
</kw>
<kw name="Log Test End" owner="patch_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.278639" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.278489" elapsed="0.000299"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.279076" level="INFO">üèÅ Completed Test: Critical - Validate RSA Agent Status | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.278911" elapsed="0.000261"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.279441" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.279317" elapsed="0.000218"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:44:14.278005" elapsed="0.001603"/>
</kw>
<doc>üîß Check if RSA agent service is running</doc>
<tag>critical</tag>
<tag>rsa</tag>
<tag>service</tag>
<tag>status</tag>
<status status="PASS" start="2025-10-05T15:44:14.044142" elapsed="0.235505"/>
</test>
<test id="s1-s3-t7" name="Critical - Check Patch Management Registration" line="103">
<kw name="Log Test Start" owner="patch_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.280842" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.280710" elapsed="0.000231"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.281219" level="INFO">üèÅ Starting Test: Critical - Check Patch Management Registration</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.281069" elapsed="0.000250"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.281629" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.281492" elapsed="0.000241"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:44:14.280428" elapsed="0.001837"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.282600" level="INFO">üîç Checking patch management server registration...</msg>
<arg>üîç Checking patch management server registration...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.282427" elapsed="0.000323"/>
</kw>
<kw name="Check Patch Management Registration" owner="patch_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.283431" level="INFO">üì¶ Checking patch management registration...</msg>
<arg>üì¶ Checking patch management registration...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.283301" elapsed="0.000238"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:14.284168" level="INFO">Executing command 'subscription-manager status 2&gt;&amp;1 || echo "subscription-manager not available"'.</msg>
<msg time="2025-10-05T15:44:14.328328" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:14.328732" level="INFO">${output} = bash: line 1: subscription-manager: command not found
subscription-manager not available</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:14.284041" elapsed="0.044739"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:14.329320" elapsed="0.000163"/>
</return>
<msg time="2025-10-05T15:44:14.330016" level="INFO">${satellite_status} = bash: line 1: subscription-manager: command not found
subscription-manager not available</msg>
<var>${satellite_status}</var>
<arg>subscription-manager status 2&gt;&amp;1 || echo "subscription-manager not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:14.283769" elapsed="0.046296"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:14.331266" level="INFO">Executing command 'subscription-manager identity 2&gt;&amp;1 || echo "Not registered with Satellite"'.</msg>
<msg time="2025-10-05T15:44:14.385123" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:14.385496" level="INFO">${output} = bash: line 1: subscription-manager: command not found
Not registered with Satellite</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:14.331047" elapsed="0.054534"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:14.385846" elapsed="0.000110"/>
</return>
<msg time="2025-10-05T15:44:14.387190" level="INFO">${satellite_identity} = bash: line 1: subscription-manager: command not found
Not registered with Satellite</msg>
<var>${satellite_identity}</var>
<arg>subscription-manager identity 2&gt;&amp;1 || echo "Not registered with Satellite"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:14.330403" elapsed="0.056844"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:14.388588" level="INFO">Executing command 'cat /etc/rhsm/facts/katello.facts 2&gt;/dev/null || echo "No Katello facts file"'.</msg>
<msg time="2025-10-05T15:44:14.441336" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:14.441824" level="INFO">${output} = No Katello facts file</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:14.388268" elapsed="0.053614"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:14.442030" elapsed="0.000092"/>
</return>
<msg time="2025-10-05T15:44:14.442407" level="INFO">${katello_facts} = No Katello facts file</msg>
<var>${katello_facts}</var>
<arg>cat /etc/rhsm/facts/katello.facts 2&gt;/dev/null || echo "No Katello facts file"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:14.387740" elapsed="0.054709"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:14.443973" level="INFO">Executing command 'cat /etc/ansible/ansible.cfg 2&gt;/dev/null || echo "No Ansible configuration"'.</msg>
<msg time="2025-10-05T15:44:14.528810" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:14.529127" level="INFO">${output} = No Ansible configuration</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:14.443715" elapsed="0.085455"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:14.529295" elapsed="0.000081"/>
</return>
<msg time="2025-10-05T15:44:14.529738" level="INFO">${ansible_config} = No Ansible configuration</msg>
<var>${ansible_config}</var>
<arg>cat /etc/ansible/ansible.cfg 2&gt;/dev/null || echo "No Ansible configuration"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:14.442876" elapsed="0.086995"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:14.531176" level="INFO">Executing command 'grep alhxvdvitap01 /etc/ansible/hosts 2&gt;/dev/null || echo "Not in Ansible hosts"'.</msg>
<msg time="2025-10-05T15:44:14.574658" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:14.574865" level="INFO">${output} = Not in Ansible hosts</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:14.530715" elapsed="0.044177"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:14.574965" elapsed="0.000046"/>
</return>
<msg time="2025-10-05T15:44:14.575158" level="INFO">${ansible_hosts} = Not in Ansible hosts</msg>
<var>${ansible_hosts}</var>
<arg>grep ${TARGET_HOSTNAME} /etc/ansible/hosts 2&gt;/dev/null || echo "Not in Ansible hosts"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:14.530230" elapsed="0.044957"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:14.575859" level="INFO">Executing command 'ls -la /etc/yum/pluginconf.d/ 2&gt;/dev/null || echo "No yum plugin configs"'.</msg>
<msg time="2025-10-05T15:44:14.622706" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:14.622949" level="INFO">${output} = No yum plugin configs</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:14.575718" elapsed="0.047262"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:14.623072" elapsed="0.000064"/>
</return>
<msg time="2025-10-05T15:44:14.623311" level="INFO">${yum_plugins} = No yum plugin configs</msg>
<var>${yum_plugins}</var>
<arg>ls -la /etc/yum/pluginconf.d/ 2&gt;/dev/null || echo "No yum plugin configs"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:14.575407" elapsed="0.047944"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:14.624238" level="INFO">Executing command 'rpm -qa | grep -E "katello|satellite|foreman" 2&gt;/dev/null || echo "No Satellite packages found"'.</msg>
<msg time="2025-10-05T15:44:14.676084" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:14.676400" level="INFO">${output} = No Satellite packages found</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:14.624019" elapsed="0.052428"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:14.676568" elapsed="0.000077"/>
</return>
<msg time="2025-10-05T15:44:14.676885" level="INFO">${satellite_pkgs} = No Satellite packages found</msg>
<var>${satellite_pkgs}</var>
<arg>rpm -qa | grep -E "katello|satellite|foreman" 2&gt;/dev/null || echo "No Satellite packages found"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:14.623646" elapsed="0.053280"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.678142" level="INFO">${registration_status} = === Satellite Status ===
bash: line 1: subscription-manager: command not found
subscription-manager not available

=== Satellite Identity ===
bash: line 1: subscription-manager: command not found
Not ...</msg>
<var>${registration_status}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Satellite Status ===</arg>
<arg>${satellite_status}</arg>
<arg>=== Satellite Identity ===</arg>
<arg>${satellite_identity}</arg>
<arg>=== Katello Facts ===</arg>
<arg>${katello_facts}</arg>
<arg>=== Ansible Configuration ===</arg>
<arg>${ansible_config}</arg>
<arg>=== Ansible Hosts ===</arg>
<arg>${ansible_hosts}</arg>
<arg>=== Yum Plugins ===</arg>
<arg>${yum_plugins}</arg>
<arg>=== Satellite Packages ===</arg>
<arg>${satellite_pkgs}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:14.677196" elapsed="0.000996"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.678924" level="INFO">${PATCH_REGISTRATION_STATUS} = === Satellite Status ===
bash: line 1: subscription-manager: command not found
subscription-manager not available

=== Satellite Identity ===
bash: line 1: subscription-manager: command not found
Not ...</msg>
<arg>${PATCH_REGISTRATION_STATUS}</arg>
<arg>${registration_status}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:44:14.678461" elapsed="0.000575"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.679576" level="INFO">üì¶ Patch management registration status collected</msg>
<arg>üì¶ Patch management registration status collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.679321" elapsed="0.000439"/>
</kw>
<return>
<value>${registration_status}</value>
<status status="PASS" start="2025-10-05T15:44:14.680993" elapsed="0.000091"/>
</return>
<msg time="2025-10-05T15:44:14.681383" level="INFO">${registration_status} = === Satellite Status ===
bash: line 1: subscription-manager: command not found
subscription-manager not available

=== Satellite Identity ===
bash: line 1: subscription-manager: command not found
Not ...</msg>
<var>${registration_status}</var>
<doc>üì¶ Check system registration with patch management servers</doc>
<status status="PASS" start="2025-10-05T15:44:14.283048" elapsed="0.398472"/>
</kw>
<kw name="Save Registration Status to File" owner="patch_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:44:14.682941" level="INFO">${timestamp} = 20251005_154414</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:44:14.682603" elapsed="0.000385"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.683458" level="INFO">${reg_file} = results/test18_patch_management/data/patch_registration_20251005_154414.txt</msg>
<var>${reg_file}</var>
<arg>${DATA_DIR}/patch_registration_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:44:14.683171" elapsed="0.000327"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.684112" level="INFO">${report} = =========================================
=== Patch Management Registration ===
=========================================
Timestamp: 20251005_154414
Target Server: alhxvdvitap01 (172.30.16.186)

=== S...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== Patch Management Registration ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>${registration_status}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:14.683656" elapsed="0.000497"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:44:14.698665" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test18_patch_management/data/patch_registration_20251005_154414.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test18_patch_management/data/patch_registration_20251005_154414.txt&lt;/a&gt;'.</msg>
<arg>${reg_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:44:14.684400" elapsed="0.014461"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.699532" level="INFO">üìÑ Registration status saved to: results/test18_patch_management/data/patch_registration_20251005_154414.txt</msg>
<arg>üìÑ Registration status saved to: ${reg_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.699157" elapsed="0.000563"/>
</kw>
<return>
<value>${reg_file}</value>
<status status="PASS" start="2025-10-05T15:44:14.699819" elapsed="0.000069"/>
</return>
<msg time="2025-10-05T15:44:14.700198" level="INFO">${reg_file} = results/test18_patch_management/data/patch_registration_20251005_154414.txt</msg>
<var>${reg_file}</var>
<arg>${registration_status}</arg>
<doc>üíæ Save registration status to file</doc>
<status status="PASS" start="2025-10-05T15:44:14.682044" elapsed="0.018201"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.700718" level="INFO">üìÑ Registration status saved to: results/test18_patch_management/data/patch_registration_20251005_154414.txt</msg>
<arg>üìÑ Registration status saved to: ${reg_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.700448" elapsed="0.000427"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.701244" level="INFO">‚úÖ Patch management registration check completed</msg>
<arg>‚úÖ Patch management registration check completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.701061" elapsed="0.000326"/>
</kw>
<kw name="Log Test End" owner="patch_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.702757" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.702558" elapsed="0.000352"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.703361" level="INFO">üèÅ Completed Test: Critical - Check Patch Management Registration | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.703091" elapsed="0.000413"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.703930" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.703681" elapsed="0.000388"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:44:14.701991" elapsed="0.002181"/>
</kw>
<doc>üì¶ Verify system is registered with patch management server (Ansible/Satellite)</doc>
<tag>ansible</tag>
<tag>critical</tag>
<tag>patch_management</tag>
<tag>registration</tag>
<tag>satellite</tag>
<status status="PASS" start="2025-10-05T15:44:14.279902" elapsed="0.424337"/>
</test>
<test id="s1-s3-t8" name="Normal - Validate Two-Factor Authentication Flow" line="118">
<kw name="Log Test Start" owner="patch_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.706306" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.705990" elapsed="0.000512"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.706929" level="INFO">üèÅ Starting Test: Normal - Validate Two-Factor Authentication Flow</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.706688" elapsed="0.000380"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.707411" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.707239" elapsed="0.000330"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:44:14.705404" elapsed="0.002265"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.708031" level="INFO">üîç Validating two-factor authentication flow...</msg>
<arg>üîç Validating two-factor authentication flow...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.707848" elapsed="0.000326"/>
</kw>
<kw name="Validate Two Factor Authentication Flow" owner="patch_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.710772" level="INFO">üîê Validating two-factor authentication flow...</msg>
<arg>üîê Validating two-factor authentication flow...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.710517" elapsed="0.000428"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:14.711812" level="INFO">Executing command 'cat /etc/pam.d/sshd 2&gt;/dev/null || echo "No /etc/pam.d/sshd"'.</msg>
<msg time="2025-10-05T15:44:14.726906" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:14.727187" level="INFO">${output} = # PAM configuration for the Secure Shell service

# Standard Un*x authentication.
@include common-auth

# Disallow non-root logins when /etc/nologin exists.
account    required     pam_nologin.so

# U...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:14.711616" elapsed="0.015617"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:14.727349" elapsed="0.000074"/>
</return>
<msg time="2025-10-05T15:44:14.727655" level="INFO">${pam_sshd} = # PAM configuration for the Secure Shell service

# Standard Un*x authentication.
@include common-auth

# Disallow non-root logins when /etc/nologin exists.
account    required     pam_nologin.so

# U...</msg>
<var>${pam_sshd}</var>
<arg>cat /etc/pam.d/sshd 2&gt;/dev/null || echo "No /etc/pam.d/sshd"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:14.711214" elapsed="0.016482"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:14.728711" level="INFO">Executing command 'cat /etc/pam.d/login 2&gt;/dev/null || echo "No /etc/pam.d/login"'.</msg>
<msg time="2025-10-05T15:44:14.780231" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:14.780583" level="INFO">${output} = #
# The PAM configuration file for the Shadow `login' service
#

# Enforce a minimal delay in case of failure (in microseconds).
# (Replaces the `FAIL_DELAY' setting from login.defs)
# Note that other...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:14.728503" elapsed="0.052129"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:14.780759" elapsed="0.000077"/>
</return>
<msg time="2025-10-05T15:44:14.781103" level="INFO">${pam_login} = #
# The PAM configuration file for the Shadow `login' service
#

# Enforce a minimal delay in case of failure (in microseconds).
# (Replaces the `FAIL_DELAY' setting from login.defs)
# Note that other...</msg>
<var>${pam_login}</var>
<arg>cat /etc/pam.d/login 2&gt;/dev/null || echo "No /etc/pam.d/login"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:14.728004" elapsed="0.053142"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:14.782385" level="INFO">Executing command 'cat /etc/pam.d/system-auth 2&gt;/dev/null || echo "No /etc/pam.d/system-auth"'.</msg>
<msg time="2025-10-05T15:44:14.835862" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:14.836185" level="INFO">${output} = No /etc/pam.d/system-auth</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:14.782152" elapsed="0.054183"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:14.836534" elapsed="0.000188"/>
</return>
<msg time="2025-10-05T15:44:14.837080" level="INFO">${pam_system} = No /etc/pam.d/system-auth</msg>
<var>${pam_system}</var>
<arg>cat /etc/pam.d/system-auth 2&gt;/dev/null || echo "No /etc/pam.d/system-auth"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:14.781485" elapsed="0.055646"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:14.838744" level="INFO">Executing command 'ls -la ~/.rsa* 2&gt;/dev/null || echo "No user RSA config in home"'.</msg>
<msg time="2025-10-05T15:44:14.892572" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:14.892962" level="INFO">${output} = No user RSA config in home</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:14.838492" elapsed="0.054526"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:14.893163" elapsed="0.000082"/>
</return>
<msg time="2025-10-05T15:44:14.893707" level="INFO">${user_rsa_config} = No user RSA config in home</msg>
<var>${user_rsa_config}</var>
<arg>ls -la ~/.rsa* 2&gt;/dev/null || echo "No user RSA config in home"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:14.837665" elapsed="0.056182"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.895437" level="INFO">${tfa_status} = === PAM SSHD ===
# PAM configuration for the Secure Shell service

# Standard Un*x authentication.
@include common-auth

# Disallow non-root logins when /etc/nologin exists.
account    required     pa...</msg>
<var>${tfa_status}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== PAM SSHD ===</arg>
<arg>${pam_sshd}</arg>
<arg>=== PAM Login ===</arg>
<arg>${pam_login}</arg>
<arg>=== PAM System Auth ===</arg>
<arg>${pam_system}</arg>
<arg>=== User RSA Config ===</arg>
<arg>${user_rsa_config}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:14.894638" elapsed="0.000857"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.896099" level="INFO">üîê Two-factor authentication flow validated</msg>
<arg>üîê Two-factor authentication flow validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.895770" elapsed="0.000856"/>
</kw>
<return>
<value>${tfa_status}</value>
<status status="PASS" start="2025-10-05T15:44:14.896750" elapsed="0.000070"/>
</return>
<msg time="2025-10-05T15:44:14.897212" level="INFO">${tfa_status} = === PAM SSHD ===
# PAM configuration for the Secure Shell service

# Standard Un*x authentication.
@include common-auth

# Disallow non-root logins when /etc/nologin exists.
account    required     pa...</msg>
<var>${tfa_status}</var>
<doc>üîê Validate two-factor authentication flow readiness</doc>
<status status="PASS" start="2025-10-05T15:44:14.710110" elapsed="0.187158"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.898358" level="INFO">üîê 2FA Flow Status: === PAM SSHD ===
# PAM configuration for the Secure Shell service

# Standard Un*x authentication.
@include common-auth

# Disallow non-root logins when /etc/nologin exists.
account    required     pam_nologin.so

# Uncomment and edit /etc/security/access.conf if you need to set complex
# access limits that are hard to express in sshd_config.
# account  required     pam_access.so

# Standard Un*x authorization.
@include common-account

# SELinux needs to be the first session rule.  This ensures that any
# lingering context has been cleared.  Without this it is possible that a
# module could execute code in the wrong domain.
session [success=ok ignore=ignore module_unknown=ignore default=bad]        pam_selinux.so close

# Set the loginuid process attribute.
session    required     pam_loginuid.so

# Create a new session keyring.
session    optional     pam_keyinit.so force revoke

# Standard Un*x session setup and teardown.
@include common-session

# Print the message of the day upon successful login.
# This includes a dynamically generated part from /run/motd.dynamic
# and a static (admin-editable) part from /etc/motd.
session    optional     pam_motd.so  motd=/run/motd.dynamic
session    optional     pam_motd.so noupdate

# Print the status of the user's mailbox upon successful login.
session    optional     pam_mail.so standard noenv # [1]

# Set up user limits from /etc/security/limits.conf.
session    required     pam_limits.so

# Read environment variables from /etc/environment and
# /etc/security/pam_env.conf.
session    required     pam_env.so # [1]
# In Debian 4.0 (etch), locale-related environment variables were moved to
# /etc/default/locale, so read that as well.
session    required     pam_env.so user_readenv=1 envfile=/etc/default/locale

# SELinux needs to intervene at login time to ensure that the process starts
# in the proper default security context.  Only sessions which are intended
# to run in the user's context should be run after this.
session [success=ok ignore=ignore module_unknown=ignore default=bad]        pam_selinux.so open

# Standard Un*x password updating.
@include common-password

=== PAM Login ===
#
# The PAM configuration file for the Shadow `login' service
#

# Enforce a minimal delay in case of failure (in microseconds).
# (Replaces the `FAIL_DELAY' setting from login.defs)
# Note that other modules may require another minimal delay. (for example,
# to disable any delay, you should add the nodelay option to pam_unix)
auth       optional   pam_faildelay.so  delay=3000000

# Outputs an issue file prior to each login prompt (Replaces the
# ISSUE_FILE option from login.defs). Uncomment for use
# auth       required   pam_issue.so issue=/etc/issue

# Disallows other than root logins when /etc/nologin exists
# (Replaces the `NOLOGINS_FILE' option from login.defs)
auth       requisite  pam_nologin.so

# SELinux needs to be the first session rule. This ensures that any
# lingering context has been cleared. Without this it is possible
# that a module could execute code in the wrong domain.
# When the module is present, "required" would be sufficient (When SELinux
# is disabled, this returns success.)
session [success=ok ignore=ignore module_unknown=ignore default=bad] pam_selinux.so close

# Sets the loginuid process attribute
session    required     pam_loginuid.so

# Prints the message of the day upon successful login.
# (Replaces the `MOTD_FILE' option in login.defs)
# This includes a dynamically generated part from /run/motd.dynamic
# and a static (admin-editable) part from /etc/motd.
session    optional   pam_motd.so motd=/run/motd.dynamic
session    optional   pam_motd.so noupdate

# SELinux needs to intervene at login time to ensure that the process
# starts in the proper default security context. Only sessions which are
# intended to run in the user's context should be run after this.
# pam_selinux.so changes the SELinux context of the used TTY and configures
# SELinux in order to transition to the user context with the next execve()
# call.
session [success=ok ignore=ignore module_unknown=ignore default=bad] pam_selinux.so open
# When the module is present, "required" would be sufficient (When SELinux
# is disabled, this returns success.)

# This module parses environment configuration file(s)
# and also allows you to use an extended config
# file /etc/security/pam_env.conf.
# 
# parsing /etc/environment needs "readenv=1"
session       required   pam_env.so readenv=1
# locale variables can also be set in /etc/default/locale
# reading this file *in addition to /etc/environment* does not hurt
session       required   pam_env.so readenv=1 envfile=/etc/default/locale

# Standard Un*x authentication.
@include common-auth

# This allows certain extra groups to be granted to a user
# based on things like time of day, tty, service, and user.
# Please edit /etc/security/group.conf to fit your needs
# (Replaces the `CONSOLE_GROUPS' option in login.defs)
auth       optional   pam_group.so

# Uncomment and edit /etc/security/time.conf if you need to set
# time restraint on logins.
# (Replaces the `PORTTIME_CHECKS_ENAB' option from login.defs
# as well as /etc/porttime)
# account    requisite  pam_time.so

# Uncomment and edit /etc/security/access.conf if you need to
# set access limits.
# (Replaces /etc/login.access file)
# account  required       pam_access.so

# Sets up user limits according to /etc/security/limits.conf
# (Replaces the use of /etc/limits in old login)
session    required   pam_limits.so

# Prints the last login info upon successful login
# (Replaces the `LASTLOG_ENAB' option from login.defs)
session    optional   pam_lastlog.so

# Prints the status of the user's mailbox upon successful login
# (Replaces the `MAIL_CHECK_ENAB' option from login.defs). 
#
# This also defines the MAIL environment variable
# However, userdel also needs MAIL_DIR and MAIL_FILE variables
# in /etc/login.defs to make sure that removing a user 
# also removes the user's mail spool file.
# See comments in /etc/login.defs
session    optional   pam_mail.so standard

# Create a new session keyring.
session    optional   pam_keyinit.so force revoke

# Standard Un*x account and session
@include common-account
@include common-session
@include common-password

=== PAM System Auth ===
No /etc/pam.d/system-auth

=== User RSA Config ===
No user RSA config in home</msg>
<arg>üîê 2FA Flow Status: ${tfa_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.897603" elapsed="0.002131"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.900299" level="INFO">‚úÖ Two-factor authentication flow validated</msg>
<arg>‚úÖ Two-factor authentication flow validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.900031" elapsed="0.000499"/>
</kw>
<kw name="Log Test End" owner="patch_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.902537" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.902259" elapsed="0.000849"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.903916" level="INFO">üèÅ Completed Test: Normal - Validate Two-Factor Authentication Flow | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.903435" elapsed="0.000689"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.904701" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.904392" elapsed="0.000510"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:44:14.901101" elapsed="0.005166"/>
</kw>
<doc>üîê Verify RSA two-factor authentication flow is ready</doc>
<tag>2fa</tag>
<tag>authentication_flow</tag>
<tag>normal</tag>
<tag>rsa</tag>
<status status="PASS" start="2025-10-05T15:44:14.704629" elapsed="0.201737"/>
</test>
<test id="s1-s3-t9" name="Normal - Check RSA Token Configuration" line="130">
<kw name="Log Test Start" owner="patch_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.909338" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.909068" elapsed="0.000571"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.910366" level="INFO">üèÅ Starting Test: Normal - Check RSA Token Configuration</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.910028" elapsed="0.000535"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.911028" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.910815" elapsed="0.000387"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:44:14.908533" elapsed="0.002821"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.911795" level="INFO">üîç Checking RSA token configuration...</msg>
<arg>üîç Checking RSA token configuration...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.911588" elapsed="0.000405"/>
</kw>
<kw name="Check RSA Token Configuration" owner="patch_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:14.913363" level="INFO">üé´ Checking RSA token configuration...</msg>
<arg>üé´ Checking RSA token configuration...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:14.912736" elapsed="0.000820"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:14.915346" level="INFO">Executing command 'cat /var/ace/user_token.db 2&gt;/dev/null || echo "No token database found"'.</msg>
<msg time="2025-10-05T15:44:14.946484" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:14.946721" level="INFO">${output} = No token database found</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:14.915063" elapsed="0.031781"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:14.946980" elapsed="0.000081"/>
</return>
<msg time="2025-10-05T15:44:14.947299" level="INFO">${token_info} = No token database found</msg>
<var>${token_info}</var>
<arg>cat /var/ace/user_token.db 2&gt;/dev/null || echo "No token database found"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:14.914295" elapsed="0.033043"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:14.948817" level="INFO">Executing command 'ls -la /var/ace/cache/ 2&gt;/dev/null || echo "No token cache"'.</msg>
<msg time="2025-10-05T15:44:14.994630" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:14.995302" level="INFO">${output} = No token cache</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:14.948548" elapsed="0.046849"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:14.995523" elapsed="0.000088"/>
</return>
<msg time="2025-10-05T15:44:14.995883" level="INFO">${token_cache} = No token cache</msg>
<var>${token_cache}</var>
<arg>ls -la /var/ace/cache/ 2&gt;/dev/null || echo "No token cache"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:14.947714" elapsed="0.048212"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:14.997275" level="INFO">Executing command 'cat /var/ace/securid 2&gt;/dev/null || echo "No securid file"'.</msg>
<msg time="2025-10-05T15:44:15.047791" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:15.048096" level="INFO">${output} = No securid file</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:14.997033" elapsed="0.051108"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:15.048261" elapsed="0.000073"/>
</return>
<msg time="2025-10-05T15:44:15.048564" level="INFO">${securid_config} = No securid file</msg>
<var>${securid_config}</var>
<arg>cat /var/ace/securid 2&gt;/dev/null || echo "No securid file"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:14.996351" elapsed="0.052258"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.050342" level="INFO">${token_config} = === Token Database ===
No token database found

=== Token Cache ===
No token cache

=== SecurID Configuration ===
No securid file</msg>
<var>${token_config}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Token Database ===</arg>
<arg>${token_info}</arg>
<arg>=== Token Cache ===</arg>
<arg>${token_cache}</arg>
<arg>=== SecurID Configuration ===</arg>
<arg>${securid_config}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:15.049519" elapsed="0.000871"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.051194" level="INFO">üé´ RSA token configuration collected</msg>
<arg>üé´ RSA token configuration collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.050662" elapsed="0.000761"/>
</kw>
<return>
<value>${token_config}</value>
<status status="PASS" start="2025-10-05T15:44:15.051522" elapsed="0.000073"/>
</return>
<msg time="2025-10-05T15:44:15.051886" level="INFO">${token_config} = === Token Database ===
No token database found

=== Token Cache ===
No token cache

=== SecurID Configuration ===
No securid file</msg>
<var>${token_config}</var>
<doc>üé´ Check RSA token configuration</doc>
<status status="PASS" start="2025-10-05T15:44:14.912320" elapsed="0.139609"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.052411" level="INFO">üé´ RSA Token Config: === Token Database ===
No token database found

=== Token Cache ===
No token cache

=== SecurID Configuration ===
No securid file</msg>
<arg>üé´ RSA Token Config: ${token_config}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.052114" elapsed="0.000474"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.053050" level="INFO">‚úÖ RSA token configuration checked</msg>
<arg>‚úÖ RSA token configuration checked</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.052854" elapsed="0.000363"/>
</kw>
<kw name="Log Test End" owner="patch_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.055980" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.055268" elapsed="0.000941"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.056769" level="INFO">üèÅ Completed Test: Normal - Check RSA Token Configuration | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.056446" elapsed="0.000462"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.057290" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.057062" elapsed="0.000360"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:44:15.054644" elapsed="0.003032"/>
</kw>
<doc>üé´ Verify RSA token configuration and assignment</doc>
<tag>configuration</tag>
<tag>normal</tag>
<tag>rsa</tag>
<tag>token</tag>
<status status="PASS" start="2025-10-05T15:44:14.906901" elapsed="0.151089"/>
</test>
<test id="s1-s3-t10" name="Normal - Validate Satellite Subscription Status" line="142">
<kw name="Log Test Start" owner="patch_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.059998" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.059802" elapsed="0.000338"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.060614" level="INFO">üèÅ Starting Test: Normal - Validate Satellite Subscription Status</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.060325" elapsed="0.000426"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.061103" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.060932" elapsed="0.000308"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:44:15.059377" elapsed="0.002000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.062049" level="INFO">üîç Validating Satellite subscription status...</msg>
<arg>üîç Validating Satellite subscription status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.061868" elapsed="0.000371"/>
</kw>
<kw name="Check Satellite Subscription Status" owner="patch_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.063287" level="INFO">üì¶ Checking Satellite subscription status...</msg>
<arg>üì¶ Checking Satellite subscription status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.063136" elapsed="0.000284"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:15.064201" level="INFO">Executing command 'subscription-manager status 2&gt;&amp;1 || echo "subscription-manager not available"'.</msg>
<msg time="2025-10-05T15:44:15.103553" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:15.103874" level="INFO">${output} = bash: line 1: subscription-manager: command not found
subscription-manager not available</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:15.064023" elapsed="0.039899"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:15.104047" elapsed="0.000075"/>
</return>
<msg time="2025-10-05T15:44:15.104385" level="INFO">${sub_status} = bash: line 1: subscription-manager: command not found
subscription-manager not available</msg>
<var>${sub_status}</var>
<arg>subscription-manager status 2&gt;&amp;1 || echo "subscription-manager not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:15.063627" elapsed="0.040797"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:15.105462" level="INFO">Executing command 'subscription-manager list --consumed 2&gt;&amp;1 || echo "No subscriptions listed"'.</msg>
<msg time="2025-10-05T15:44:15.157021" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:15.157512" level="INFO">${output} = bash: line 1: subscription-manager: command not found
No subscriptions listed</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:15.105180" elapsed="0.052426"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:15.157943" elapsed="0.000129"/>
</return>
<msg time="2025-10-05T15:44:15.158464" level="INFO">${sub_list} = bash: line 1: subscription-manager: command not found
No subscriptions listed</msg>
<var>${sub_list}</var>
<arg>subscription-manager list --consumed 2&gt;&amp;1 || echo "No subscriptions listed"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:15.104721" elapsed="0.053793"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:15.159790" level="INFO">Executing command 'subscription-manager repos --list-enabled 2&gt;&amp;1 | head -50 || echo "No repos listed"'.</msg>
<msg time="2025-10-05T15:44:15.206834" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:15.207170" level="INFO">${output} = bash: line 1: subscription-manager: command not found</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:15.159496" elapsed="0.047721"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:15.207353" elapsed="0.000078"/>
</return>
<msg time="2025-10-05T15:44:15.207680" level="INFO">${repos_list} = bash: line 1: subscription-manager: command not found</msg>
<var>${repos_list}</var>
<arg>subscription-manager repos --list-enabled 2&gt;&amp;1 | head -50 || echo "No repos listed"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:15.158961" elapsed="0.048753"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:15.208724" level="INFO">Executing command 'subscription-manager compliance 2&gt;&amp;1 || echo "Compliance check not available"'.</msg>
<msg time="2025-10-05T15:44:15.258176" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:15.258516" level="INFO">${output} = bash: line 1: subscription-manager: command not found
Compliance check not available</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:15.208524" elapsed="0.050039"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:15.258689" elapsed="0.000081"/>
</return>
<msg time="2025-10-05T15:44:15.259017" level="INFO">${compliance} = bash: line 1: subscription-manager: command not found
Compliance check not available</msg>
<var>${compliance}</var>
<arg>subscription-manager compliance 2&gt;&amp;1 || echo "Compliance check not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:15.208061" elapsed="0.050994"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.259925" level="INFO">${subscription_status} = === Subscription Status ===
bash: line 1: subscription-manager: command not found
subscription-manager not available

=== Consumed Subscriptions ===
bash: line 1: subscription-manager: command not fou...</msg>
<var>${subscription_status}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Subscription Status ===</arg>
<arg>${sub_status}</arg>
<arg>=== Consumed Subscriptions ===</arg>
<arg>${sub_list}</arg>
<arg>=== Enabled Repositories ===</arg>
<arg>${repos_list}</arg>
<arg>=== Compliance Status ===</arg>
<arg>${compliance}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:15.259342" elapsed="0.000627"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.260391" level="INFO">üì¶ Satellite subscription status collected</msg>
<arg>üì¶ Satellite subscription status collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.260185" elapsed="0.000363"/>
</kw>
<return>
<value>${subscription_status}</value>
<status status="PASS" start="2025-10-05T15:44:15.260633" elapsed="0.000054"/>
</return>
<msg time="2025-10-05T15:44:15.260882" level="INFO">${subscription_status} = === Subscription Status ===
bash: line 1: subscription-manager: command not found
subscription-manager not available

=== Consumed Subscriptions ===
bash: line 1: subscription-manager: command not fou...</msg>
<var>${subscription_status}</var>
<doc>üì¶ Check Red Hat Satellite subscription status</doc>
<status status="PASS" start="2025-10-05T15:44:15.062822" elapsed="0.198095"/>
</kw>
<kw name="Save Subscription Status to File" owner="patch_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:44:15.262001" level="INFO">${timestamp} = 20251005_154415</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:44:15.261671" elapsed="0.000365"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.262419" level="INFO">${sub_file} = results/test18_patch_management/data/subscription_status_20251005_154415.txt</msg>
<var>${sub_file}</var>
<arg>${DATA_DIR}/subscription_status_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:44:15.262189" elapsed="0.000262"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.263005" level="INFO">${report} = =========================================
=== Satellite Subscription Status ===
=========================================
Timestamp: 20251005_154415
Target Server: alhxvdvitap01 (172.30.16.186)

=== S...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== Satellite Subscription Status ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>${subscription_status}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:15.262596" elapsed="0.000444"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:44:15.274694" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test18_patch_management/data/subscription_status_20251005_154415.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test18_patch_management/data/subscription_status_20251005_154415.txt&lt;/a&gt;'.</msg>
<arg>${sub_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:44:15.263213" elapsed="0.011649"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.275341" level="INFO">üìÑ Subscription status saved to: results/test18_patch_management/data/subscription_status_20251005_154415.txt</msg>
<arg>üìÑ Subscription status saved to: ${sub_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.275083" elapsed="0.000378"/>
</kw>
<return>
<value>${sub_file}</value>
<status status="PASS" start="2025-10-05T15:44:15.275535" elapsed="0.000048"/>
</return>
<msg time="2025-10-05T15:44:15.275746" level="INFO">${sub_file} = results/test18_patch_management/data/subscription_status_20251005_154415.txt</msg>
<var>${sub_file}</var>
<arg>${subscription_status}</arg>
<doc>üíæ Save subscription status to file</doc>
<status status="PASS" start="2025-10-05T15:44:15.261194" elapsed="0.014580"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.276094" level="INFO">üìÑ Subscription status saved to: results/test18_patch_management/data/subscription_status_20251005_154415.txt</msg>
<arg>üìÑ Subscription status saved to: ${sub_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.275933" elapsed="0.000275"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.276553" level="INFO">‚úÖ Satellite subscription status validated</msg>
<arg>‚úÖ Satellite subscription status validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.276379" elapsed="0.000299"/>
</kw>
<kw name="Log Test End" owner="patch_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.277371" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.277231" elapsed="0.000282"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.277913" level="INFO">üèÅ Completed Test: Normal - Validate Satellite Subscription Status | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.277649" elapsed="0.000383"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.278319" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.278169" elapsed="0.000250"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:44:15.276925" elapsed="0.001568"/>
</kw>
<doc>üì¶ Check Red Hat Satellite subscription status</doc>
<tag>normal</tag>
<tag>rhel</tag>
<tag>satellite</tag>
<tag>subscription</tag>
<status status="PASS" start="2025-10-05T15:44:15.058602" elapsed="0.220802"/>
</test>
<test id="s1-s3-t11" name="Normal - Check Available Patches" line="157">
<kw name="Log Test Start" owner="patch_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.281610" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.281104" elapsed="0.000886"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.282600" level="INFO">üèÅ Starting Test: Normal - Check Available Patches</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.282190" elapsed="0.000790"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.283354" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.283169" elapsed="0.000334"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:44:15.280598" elapsed="0.003117"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.284169" level="INFO">üîç Checking available patches and updates...</msg>
<arg>üîç Checking available patches and updates...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.283907" elapsed="0.000427"/>
</kw>
<kw name="Check Available Patches" owner="patch_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.286002" level="INFO">üîÑ Checking available patches...</msg>
<arg>üîÑ Checking available patches...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.285799" elapsed="0.000297"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:15.286981" level="INFO">Executing command 'yum check-update 2&gt;&amp;1 || dnf check-update 2&gt;&amp;1 || echo "Package manager check not available"'.</msg>
<msg time="2025-10-05T15:44:15.310502" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:15.310687" level="INFO">${output} = bash: line 1: yum: command not found
bash: line 1: dnf: command not found
Package manager check not available</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:15.286767" elapsed="0.023948"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:15.310789" elapsed="0.000045"/>
</return>
<msg time="2025-10-05T15:44:15.310972" level="INFO">${yum_updates} = bash: line 1: yum: command not found
bash: line 1: dnf: command not found
Package manager check not available</msg>
<var>${yum_updates}</var>
<arg>yum check-update 2&gt;&amp;1 || dnf check-update 2&gt;&amp;1 || echo "Package manager check not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:15.286365" elapsed="0.024632"/>
</kw>
<kw name="${security_updates}= Execute Command">
<msg time="2025-10-05T15:44:15.313094" level="FAIL">No keyword with name '${security_updates}= Execute Command' found.</msg>
<arg>yum updateinfo list security 2&gt;&amp;1 || dnf updateinfo list security 2&gt;&amp;1 || echo "Security updates check not available"</arg>
<status status="FAIL" start="2025-10-05T15:44:15.313026" elapsed="0.000132">No keyword with name '${security_updates}= Execute Command' found.</status>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<var>${last_update}</var>
<arg>rpm -qa --last | head -20 || echo "RPM query not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="NOT RUN" start="2025-10-05T15:44:15.313429" elapsed="0.000051"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<var>${yum_history}</var>
<arg>yum history list 2&gt;&amp;1 | head -20 || dnf history list 2&gt;&amp;1 | head -20 || echo "Update history not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="NOT RUN" start="2025-10-05T15:44:15.313704" elapsed="0.000037"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<var>${patch_status}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Available Updates ===</arg>
<arg>${yum_updates}</arg>
<arg>=== Security Updates ===</arg>
<arg>${security_updates}</arg>
<arg>=== Recently Installed Packages ===</arg>
<arg>${last_update}</arg>
<arg>=== Update History ===</arg>
<arg>${yum_history}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" start="2025-10-05T15:44:15.313979" elapsed="0.000027"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>üîÑ Available patches collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:44:15.314137" elapsed="0.000019"/>
</kw>
<return>
<value>${patch_status}</value>
<status status="NOT RUN" start="2025-10-05T15:44:15.314204" elapsed="0.000022"/>
</return>
<var>${patch_status}</var>
<doc>üîÑ Check for available patches and updates</doc>
<status status="FAIL" start="2025-10-05T15:44:15.284839" elapsed="0.029536">No keyword with name '${security_updates}= Execute Command' found.</status>
</kw>
<kw name="Save Available Patches to File" owner="patch_keywords">
<var>${patch_file}</var>
<arg>${patch_status}</arg>
<doc>üíæ Save available patches to file</doc>
<status status="NOT RUN" start="2025-10-05T15:44:15.314586" elapsed="0.000028"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>üìÑ Available patches saved to: ${patch_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:44:15.314740" elapsed="0.000064"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>‚úÖ Available patches check completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:44:15.314921" elapsed="0.000020"/>
</kw>
<kw name="Log Test End" owner="patch_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.315861" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.315683" elapsed="0.000315"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.316316" level="INFO">üèÅ Completed Test: Normal - Check Available Patches | Status: FAIL</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.316125" elapsed="0.000286"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.316656" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.316526" elapsed="0.000216"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:44:15.315226" elapsed="0.002245"/>
</kw>
<doc>üîÑ Check for available patches and updates</doc>
<tag>normal</tag>
<tag>patches</tag>
<tag>updates</tag>
<tag>yum</tag>
<status status="FAIL" start="2025-10-05T15:44:15.279822" elapsed="0.037712">No keyword with name '${security_updates}= Execute Command' found.</status>
</test>
<test id="s1-s3-t12" name="Normal - Validate Ansible Control Node Access" line="172">
<kw name="Log Test Start" owner="patch_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.319004" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.318855" elapsed="0.000222"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.319333" level="INFO">üèÅ Starting Test: Normal - Validate Ansible Control Node Access</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.319203" elapsed="0.000203"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.319584" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.319492" elapsed="0.000157"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:44:15.318616" elapsed="0.001083"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.319867" level="INFO">üîç Validating Ansible control node access...</msg>
<arg>üîç Validating Ansible control node access...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.319784" elapsed="0.000148"/>
</kw>
<kw name="Check Ansible Control Node Access" owner="patch_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.320357" level="INFO">ü§ñ Checking Ansible control node access...</msg>
<arg>ü§ñ Checking Ansible control node access...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.320264" elapsed="0.000168"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:15.320853" level="INFO">Executing command 'ls -la /etc/ansible/facts.d/ 2&gt;/dev/null || echo "No Ansible facts directory"'.</msg>
<msg time="2025-10-05T15:44:15.362017" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:15.362284" level="INFO">${output} = No Ansible facts directory</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:15.320756" elapsed="0.041562"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:15.362418" elapsed="0.000074"/>
</return>
<msg time="2025-10-05T15:44:15.362726" level="INFO">${ansible_facts} = No Ansible facts directory</msg>
<var>${ansible_facts}</var>
<arg>ls -la /etc/ansible/facts.d/ 2&gt;/dev/null || echo "No Ansible facts directory"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:15.320553" elapsed="0.042212"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:15.363839" level="INFO">Executing command 'grep ansible /var/log/messages 2&gt;/dev/null | tail -20 || echo "No Ansible logs in messages"'.</msg>
<msg time="2025-10-05T15:44:15.412532" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:15.412882" level="INFO">${output} = </msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:15.363613" elapsed="0.049317"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:15.413053" elapsed="0.000077"/>
</return>
<msg time="2025-10-05T15:44:15.413369" level="INFO">${ansible_log} = </msg>
<var>${ansible_log}</var>
<arg>grep ansible /var/log/messages 2&gt;/dev/null | tail -20 || echo "No Ansible logs in messages"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:15.363095" elapsed="0.050400"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:15.415632" level="INFO">Executing command 'ls -la ~/.ssh/authorized_keys 2&gt;/dev/null | head -20 || echo "No authorized_keys"'.</msg>
<msg time="2025-10-05T15:44:15.474472" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:15.474950" level="INFO">${output} = </msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:15.415186" elapsed="0.059841"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:15.475338" elapsed="0.000149"/>
</return>
<msg time="2025-10-05T15:44:15.475902" level="INFO">${ssh_keys} = </msg>
<var>${ssh_keys}</var>
<arg>ls -la ~/.ssh/authorized_keys 2&gt;/dev/null | head -20 || echo "No authorized_keys"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:15.414168" elapsed="0.061805"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:15.478116" level="INFO">Executing command 'id ansible 2&gt;/dev/null || echo "No ansible user"'.</msg>
<msg time="2025-10-05T15:44:15.547250" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:15.547746" level="INFO">${output} = No ansible user</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:15.477514" elapsed="0.070306"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:15.548009" elapsed="0.000120"/>
</return>
<msg time="2025-10-05T15:44:15.548605" level="INFO">${ansible_user} = No ansible user</msg>
<var>${ansible_user}</var>
<arg>id ansible 2&gt;/dev/null || echo "No ansible user"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:15.476557" elapsed="0.072124"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.550183" level="INFO">${ansible_status} = === Ansible Facts ===
No Ansible facts directory

=== Ansible Logs ===


=== SSH Authorized Keys ===


=== Ansible User ===
No ansible user</msg>
<var>${ansible_status}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Ansible Facts ===</arg>
<arg>${ansible_facts}</arg>
<arg>=== Ansible Logs ===</arg>
<arg>${ansible_log}</arg>
<arg>=== SSH Authorized Keys ===</arg>
<arg>${ssh_keys}</arg>
<arg>=== Ansible User ===</arg>
<arg>${ansible_user}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:15.549153" elapsed="0.001133"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.550880" level="INFO">ü§ñ Ansible control node access checked</msg>
<arg>ü§ñ Ansible control node access checked</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.550575" elapsed="0.000566"/>
</kw>
<return>
<value>${ansible_status}</value>
<status status="PASS" start="2025-10-05T15:44:15.552392" elapsed="0.000140"/>
</return>
<msg time="2025-10-05T15:44:15.552866" level="INFO">${ansible_status} = === Ansible Facts ===
No Ansible facts directory

=== Ansible Logs ===


=== SSH Authorized Keys ===


=== Ansible User ===
No ansible user</msg>
<var>${ansible_status}</var>
<doc>ü§ñ Check connectivity and access to Ansible control node</doc>
<status status="PASS" start="2025-10-05T15:44:15.320079" elapsed="0.232846"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.553976" level="INFO">ü§ñ Ansible Access Status: === Ansible Facts ===
No Ansible facts directory

=== Ansible Logs ===


=== SSH Authorized Keys ===


=== Ansible User ===
No ansible user</msg>
<arg>ü§ñ Ansible Access Status: ${ansible_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.553272" elapsed="0.000972"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.555046" level="INFO">‚úÖ Ansible control node access validated</msg>
<arg>‚úÖ Ansible control node access validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.554650" elapsed="0.000632"/>
</kw>
<kw name="Log Test End" owner="patch_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.556695" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.556468" elapsed="0.000476"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.557518" level="INFO">üèÅ Completed Test: Normal - Validate Ansible Control Node Access | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.557177" elapsed="0.000558"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.558418" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.558162" elapsed="0.000459"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:44:15.555851" elapsed="0.003124"/>
</kw>
<doc>ü§ñ Verify connectivity and access to Ansible control node</doc>
<tag>ansible</tag>
<tag>connectivity</tag>
<tag>control_node</tag>
<tag>normal</tag>
<status status="PASS" start="2025-10-05T15:44:15.317907" elapsed="0.241266"/>
</test>
<test id="s1-s3-t13" name="Normal - Check Patch Management Schedule" line="184">
<kw name="Log Test Start" owner="patch_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.562159" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.561659" elapsed="0.000679"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.562910" level="INFO">üèÅ Starting Test: Normal - Check Patch Management Schedule</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.562573" elapsed="0.000507"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.563517" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.563304" elapsed="0.000368"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:44:15.560978" elapsed="0.002806"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.564251" level="INFO">üîç Checking patch management schedule...</msg>
<arg>üîç Checking patch management schedule...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.564055" elapsed="0.000354"/>
</kw>
<kw name="Check Patch Management Schedule" owner="patch_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.565360" level="INFO">üìÖ Checking patch management schedule...</msg>
<arg>üìÖ Checking patch management schedule...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.565109" elapsed="0.000462"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:15.567472" level="INFO">Executing command 'crontab -l 2&gt;&amp;1 || echo "No user crontab"'.</msg>
<msg time="2025-10-05T15:44:15.615595" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:15.615876" level="INFO">${output} = no crontab for sac
No user crontab</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:15.566858" elapsed="0.049056"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:15.616023" elapsed="0.000115"/>
</return>
<msg time="2025-10-05T15:44:15.616388" level="INFO">${cron_jobs} = no crontab for sac
No user crontab</msg>
<var>${cron_jobs}</var>
<arg>crontab -l 2&gt;&amp;1 || echo "No user crontab"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:15.566068" elapsed="0.050356"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:15.617350" level="INFO">Executing command 'ls -la /etc/cron.d/ 2&gt;/dev/null || echo "No /etc/cron.d/"'.</msg>
<msg time="2025-10-05T15:44:15.673994" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:15.674364" level="INFO">${output} = total 16
drwxr-xr-x  2 root root 4096 Aug  5 11:56 .
drwxr-xr-x 91 root root 4096 Oct  5 15:44 ..
-rw-r--r--  1 root root  102 Mar 30  2024 .placeholder
-rw-r--r--  1 root root  201 Apr  8  2024 e2scr...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:15.617168" elapsed="0.057243"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:15.674908" elapsed="0.000136"/>
</return>
<msg time="2025-10-05T15:44:15.675433" level="INFO">${system_cron} = total 16
drwxr-xr-x  2 root root 4096 Aug  5 11:56 .
drwxr-xr-x 91 root root 4096 Oct  5 15:44 ..
-rw-r--r--  1 root root  102 Mar 30  2024 .placeholder
-rw-r--r--  1 root root  201 Apr  8  2024 e2scr...</msg>
<var>${system_cron}</var>
<arg>ls -la /etc/cron.d/ 2&gt;/dev/null || echo "No /etc/cron.d/"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:15.616715" elapsed="0.058775"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:15.677994" level="INFO">Executing command 'cat /etc/yum/yum-cron.conf 2&gt;/dev/null || cat /etc/dnf/automatic.conf 2&gt;/dev/null || echo "No automatic update config"'.</msg>
<msg time="2025-10-05T15:44:15.734348" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:15.734763" level="INFO">${output} = No automatic update config</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:15.676544" elapsed="0.058283"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:15.734990" elapsed="0.000158"/>
</return>
<msg time="2025-10-05T15:44:15.735750" level="INFO">${yum_cron} = No automatic update config</msg>
<var>${yum_cron}</var>
<arg>cat /etc/yum/yum-cron.conf 2&gt;/dev/null || cat /etc/dnf/automatic.conf 2&gt;/dev/null || echo "No automatic update config"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:15.675928" elapsed="0.059880"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:15.737047" level="INFO">Executing command 'systemctl list-timers 2&gt;&amp;1 | grep -E "yum|dnf|update" || echo "No update timers"'.</msg>
<msg time="2025-10-05T15:44:15.803540" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:15.803905" level="INFO">${output} = No update timers</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:15.736766" elapsed="0.067184"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:15.804151" elapsed="0.000079"/>
</return>
<msg time="2025-10-05T15:44:15.804459" level="INFO">${timer_units} = No update timers</msg>
<var>${timer_units}</var>
<arg>systemctl list-timers 2&gt;&amp;1 | grep -E "yum|dnf|update" || echo "No update timers"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:15.736220" elapsed="0.068275"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.805229" level="INFO">${schedule_status} = === User Cron Jobs ===
no crontab for sac
No user crontab

=== System Cron ===
total 16
drwxr-xr-x  2 root root 4096 Aug  5 11:56 .
drwxr-xr-x 91 root root 4096 Oct  5 15:44 ..
-rw-r--r--  1 root root...</msg>
<var>${schedule_status}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== User Cron Jobs ===</arg>
<arg>${cron_jobs}</arg>
<arg>=== System Cron ===</arg>
<arg>${system_cron}</arg>
<arg>=== Automatic Update Config ===</arg>
<arg>${yum_cron}</arg>
<arg>=== Update Timers ===</arg>
<arg>${timer_units}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:15.804842" elapsed="0.000418"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.805638" level="INFO">üìÖ Patch management schedule collected</msg>
<arg>üìÖ Patch management schedule collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.805459" elapsed="0.000368"/>
</kw>
<return>
<value>${schedule_status}</value>
<status status="PASS" start="2025-10-05T15:44:15.805888" elapsed="0.000044"/>
</return>
<msg time="2025-10-05T15:44:15.806095" level="INFO">${schedule_status} = === User Cron Jobs ===
no crontab for sac
No user crontab

=== System Cron ===
total 16
drwxr-xr-x  2 root root 4096 Aug  5 11:56 .
drwxr-xr-x 91 root root 4096 Oct  5 15:44 ..
-rw-r--r--  1 root root...</msg>
<var>${schedule_status}</var>
<doc>üìÖ Check patch management schedule and maintenance windows</doc>
<status status="PASS" start="2025-10-05T15:44:15.564738" elapsed="0.241381"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.806422" level="INFO">üìÖ Patch Schedule: === User Cron Jobs ===
no crontab for sac
No user crontab

=== System Cron ===
total 16
drwxr-xr-x  2 root root 4096 Aug  5 11:56 .
drwxr-xr-x 91 root root 4096 Oct  5 15:44 ..
-rw-r--r--  1 root root  102 Mar 30  2024 .placeholder
-rw-r--r--  1 root root  201 Apr  8  2024 e2scrub_all

=== Automatic Update Config ===
No automatic update config

=== Update Timers ===
No update timers</msg>
<arg>üìÖ Patch Schedule: ${schedule_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.806242" elapsed="0.000296"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.806768" level="INFO">‚úÖ Patch management schedule checked</msg>
<arg>‚úÖ Patch management schedule checked</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.806655" elapsed="0.000208"/>
</kw>
<kw name="Log Test End" owner="patch_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.807586" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.807473" elapsed="0.000203"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.807943" level="INFO">üèÅ Completed Test: Normal - Check Patch Management Schedule | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.807791" elapsed="0.000244"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.808261" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.808149" elapsed="0.000210"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:44:15.807121" elapsed="0.001315"/>
</kw>
<doc>üìÖ Verify patch management schedule and maintenance windows</doc>
<tag>maintenance</tag>
<tag>normal</tag>
<tag>patches</tag>
<tag>schedule</tag>
<status status="PASS" start="2025-10-05T15:44:15.559751" elapsed="0.248743"/>
</test>
<test id="s1-s3-t14" name="Normal - Validate Security Updates Status" line="196">
<kw name="Log Test Start" owner="patch_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.810339" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.810088" elapsed="0.000386"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.810855" level="INFO">üèÅ Starting Test: Normal - Validate Security Updates Status</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.810647" elapsed="0.000329"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.811271" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.811116" elapsed="0.000267"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:44:15.809602" elapsed="0.001918"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.812704" level="INFO">üîç Validating security updates status...</msg>
<arg>üîç Validating security updates status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.812507" elapsed="0.000331"/>
</kw>
<kw name="Check Security Updates Status" owner="patch_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:15.813427" level="INFO">üîí Checking security updates status...</msg>
<arg>üîí Checking security updates status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:15.813295" elapsed="0.000283"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:15.814432" level="INFO">Executing command 'yum updateinfo list security 2&gt;&amp;1 || dnf updateinfo list security 2&gt;&amp;1 || echo "Security list not available"'.</msg>
<msg time="2025-10-05T15:44:15.856932" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:15.857230" level="INFO">${output} = bash: line 1: yum: command not found
bash: line 1: dnf: command not found
Security list not available</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:15.814313" elapsed="0.042955"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:15.857367" elapsed="0.000099"/>
</return>
<msg time="2025-10-05T15:44:15.857733" level="INFO">${security_list} = bash: line 1: yum: command not found
bash: line 1: dnf: command not found
Security list not available</msg>
<var>${security_list}</var>
<arg>yum updateinfo list security 2&gt;&amp;1 || dnf updateinfo list security 2&gt;&amp;1 || echo "Security list not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:15.813943" elapsed="0.043869"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:15.858797" level="INFO">Executing command 'yum updateinfo list crit 2&gt;&amp;1 || dnf updateinfo list crit 2&gt;&amp;1 || echo "Critical list not available"'.</msg>
<msg time="2025-10-05T15:44:15.906057" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:15.906374" level="INFO">${output} = bash: line 1: yum: command not found
bash: line 1: dnf: command not found
Critical list not available</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:15.858606" elapsed="0.047807"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:15.906584" elapsed="0.000058"/>
</return>
<msg time="2025-10-05T15:44:15.906805" level="INFO">${critical_list} = bash: line 1: yum: command not found
bash: line 1: dnf: command not found
Critical list not available</msg>
<var>${critical_list}</var>
<arg>yum updateinfo list crit 2&gt;&amp;1 || dnf updateinfo list crit 2&gt;&amp;1 || echo "Critical list not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:15.858164" elapsed="0.048667"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:15.907555" level="INFO">Executing command 'yum updateinfo list cves 2&gt;&amp;1 || dnf updateinfo list cves 2&gt;&amp;1 || echo "CVE list not available"'.</msg>
<msg time="2025-10-05T15:44:15.955296" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:15.955537" level="INFO">${output} = bash: line 1: yum: command not found
bash: line 1: dnf: command not found
CVE list not available</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:15.907400" elapsed="0.048164"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:15.955650" elapsed="0.000054"/>
</return>
<msg time="2025-10-05T15:44:15.955861" level="INFO">${cve_list} = bash: line 1: yum: command not found
bash: line 1: dnf: command not found
CVE list not available</msg>
<var>${cve_list}</var>
<arg>yum updateinfo list cves 2&gt;&amp;1 || dnf updateinfo list cves 2&gt;&amp;1 || echo "CVE list not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:15.907067" elapsed="0.048829"/>
</kw>
<kw name="Execute Command" owner="patch_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:15.956741" level="INFO">Executing command 'yum updateinfo info security 2&gt;&amp;1 | head -50 || dnf updateinfo info security 2&gt;&amp;1 | head -50 || echo "Security info not available"'.</msg>
<msg time="2025-10-05T15:44:16.007277" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:16.007563" level="INFO">${output} = bash: line 1: yum: command not found</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:15.956606" elapsed="0.050989"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:16.007687" elapsed="0.000058"/>
</return>
<msg time="2025-10-05T15:44:16.007915" level="INFO">${security_info} = bash: line 1: yum: command not found</msg>
<var>${security_info}</var>
<arg>yum updateinfo info security 2&gt;&amp;1 | head -50 || dnf updateinfo info security 2&gt;&amp;1 | head -50 || echo "Security info not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:15.956198" elapsed="0.051745"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.008629" level="INFO">${security_status} = === Security Updates List ===
bash: line 1: yum: command not found
bash: line 1: dnf: command not found
Security list not available

=== Critical Updates List ===
bash: line 1: yum: command not found
...</msg>
<var>${security_status}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Security Updates List ===</arg>
<arg>${security_list}</arg>
<arg>=== Critical Updates List ===</arg>
<arg>${critical_list}</arg>
<arg>=== CVE List ===</arg>
<arg>${cve_list}</arg>
<arg>=== Security Update Details ===</arg>
<arg>${security_info}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:16.008135" elapsed="0.000536"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.009053" level="INFO">üîí Security updates status collected</msg>
<arg>üîí Security updates status collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:16.008873" elapsed="0.000322"/>
</kw>
<return>
<value>${security_status}</value>
<status status="PASS" start="2025-10-05T15:44:16.009263" elapsed="0.000045"/>
</return>
<msg time="2025-10-05T15:44:16.009560" level="INFO">${security_status} = === Security Updates List ===
bash: line 1: yum: command not found
bash: line 1: dnf: command not found
Security list not available

=== Critical Updates List ===
bash: line 1: yum: command not found
...</msg>
<var>${security_status}</var>
<doc>üîí Check security patches and critical updates status</doc>
<status status="PASS" start="2025-10-05T15:44:15.813059" elapsed="0.196543"/>
</kw>
<kw name="Save Security Updates to File" owner="patch_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:44:16.010432" level="INFO">${timestamp} = 20251005_154416</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:44:16.010214" elapsed="0.001317"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.011969" level="INFO">${security_file} = results/test18_patch_management/data/security_updates_20251005_154416.txt</msg>
<var>${security_file}</var>
<arg>${DATA_DIR}/security_updates_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:44:16.011718" elapsed="0.000284"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.012498" level="INFO">${report} = =========================================
=== Security Updates Status ===
=========================================
Timestamp: 20251005_154416
Target Server: alhxvdvitap01 (172.30.16.186)

=== Securit...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== Security Updates Status ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>${security_status}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:16.012126" elapsed="0.000407"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:44:16.018659" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test18_patch_management/data/security_updates_20251005_154416.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test18_patch_management/data/security_updates_20251005_154416.txt&lt;/a&gt;'.</msg>
<arg>${security_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:44:16.012676" elapsed="0.006105"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.019147" level="INFO">üìÑ Security updates saved to: results/test18_patch_management/data/security_updates_20251005_154416.txt</msg>
<arg>üìÑ Security updates saved to: ${security_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:16.018940" elapsed="0.000322"/>
</kw>
<return>
<value>${security_file}</value>
<status status="PASS" start="2025-10-05T15:44:16.019339" elapsed="0.000050"/>
</return>
<msg time="2025-10-05T15:44:16.019646" level="INFO">${security_file} = results/test18_patch_management/data/security_updates_20251005_154416.txt</msg>
<var>${security_file}</var>
<arg>${security_status}</arg>
<doc>üíæ Save security updates status to file</doc>
<status status="PASS" start="2025-10-05T15:44:16.009907" elapsed="0.009769"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.019966" level="INFO">üìÑ Security updates saved to: results/test18_patch_management/data/security_updates_20251005_154416.txt</msg>
<arg>üìÑ Security updates saved to: ${security_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:16.019802" elapsed="0.000351"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.020478" level="INFO">‚úÖ Security updates status validated</msg>
<arg>‚úÖ Security updates status validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:16.020313" elapsed="0.000285"/>
</kw>
<kw name="Log Test End" owner="patch_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.021662" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:16.021445" elapsed="0.000366"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.022240" level="INFO">üèÅ Completed Test: Normal - Validate Security Updates Status | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:16.021990" elapsed="0.000371"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.022784" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:16.022522" elapsed="0.000393"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:44:16.020951" elapsed="0.002066"/>
</kw>
<doc>üîí Check status of security patches and critical updates</doc>
<tag>critical</tag>
<tag>normal</tag>
<tag>security</tag>
<tag>updates</tag>
<status status="PASS" start="2025-10-05T15:44:15.808803" elapsed="0.214268"/>
</test>
<test id="s1-s3-t15" name="Normal - Comprehensive Patch Management Summary" line="211">
<kw name="Log Test Start" owner="patch_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.025061" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:16.024727" elapsed="0.000481"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.025575" level="INFO">üèÅ Starting Test: Normal - Comprehensive Patch Management Summary</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:16.025347" elapsed="0.000325"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.026170" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:16.026053" elapsed="0.000215"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:44:16.024018" elapsed="0.002321"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.026547" level="INFO">üîç Generating comprehensive patch management summary...</msg>
<arg>üîç Generating comprehensive patch management summary...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:16.026436" elapsed="0.000196"/>
</kw>
<kw name="Validate All Patch Management Settings" owner="patch_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.027125" level="INFO">üìä Validating all patch management and RSA settings...</msg>
<arg>üìä Validating all patch management and RSA settings...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:16.026973" elapsed="0.000248"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.027418" level="INFO">‚úÖ All patch management and RSA data collected and validated</msg>
<arg>‚úÖ All patch management and RSA data collected and validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:16.027328" elapsed="0.000415"/>
</kw>
<doc>üìä Validate all patch management and RSA settings</doc>
<status status="PASS" start="2025-10-05T15:44:16.026779" elapsed="0.001491"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.028502" level="INFO">üìä Comprehensive patch management summary:</msg>
<arg>üìä Comprehensive patch management summary:</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:16.028383" elapsed="0.000214"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.028847" level="INFO">üìä - RSA Agent: Validated ‚úÖ</msg>
<arg>üìä - RSA Agent: Validated ‚úÖ</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:16.028739" elapsed="0.000201"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.029195" level="INFO">üìä - RSA Configuration: Checked ‚úÖ</msg>
<arg>üìä - RSA Configuration: Checked ‚úÖ</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:16.029057" elapsed="0.000237"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.029558" level="INFO">üìä - RSA Authentication: Validated ‚úÖ</msg>
<arg>üìä - RSA Authentication: Validated ‚úÖ</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:16.029454" elapsed="0.000187"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.029924" level="INFO">üìä - RSA Connectivity: Tested ‚úÖ</msg>
<arg>üìä - RSA Connectivity: Tested ‚úÖ</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:16.029798" elapsed="0.000214"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.030238" level="INFO">üìä - Patch Registration: Validated ‚úÖ</msg>
<arg>üìä - Patch Registration: Validated ‚úÖ</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:16.030130" elapsed="0.000198"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.030576" level="INFO">üìä - Subscription Status: Checked ‚úÖ</msg>
<arg>üìä - Subscription Status: Checked ‚úÖ</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:16.030480" elapsed="0.000179"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.030857" level="INFO">üìä - Available Patches: Documented ‚úÖ</msg>
<arg>üìä - Available Patches: Documented ‚úÖ</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:16.030769" elapsed="0.000169"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.031425" level="INFO">‚úÖ Comprehensive patch management validation: COMPLETED</msg>
<arg>‚úÖ Comprehensive patch management validation: COMPLETED</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:16.031121" elapsed="0.000408"/>
</kw>
<kw name="Log Test End" owner="patch_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.032216" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:16.032116" elapsed="0.000194"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.032623" level="INFO">üèÅ Completed Test: Normal - Comprehensive Patch Management Summary | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:16.032424" elapsed="0.000285"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.032958" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:16.032847" elapsed="0.000198"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:44:16.031812" elapsed="0.001304"/>
</kw>
<doc>üìä Generate comprehensive summary of patch management and RSA configuration</doc>
<tag>compliance</tag>
<tag>comprehensive</tag>
<tag>normal</tag>
<tag>summary</tag>
<status status="PASS" start="2025-10-05T15:44:16.023389" elapsed="0.009763"/>
</test>
<kw name="Close All SSH Connections" owner="patch_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.034136" level="INFO">üîå Closing SSH connections...</msg>
<arg>üîå Closing SSH connections...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:16.034028" elapsed="0.000203"/>
</kw>
<kw name="Close All Connections" owner="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" start="2025-10-05T15:44:16.034373" elapsed="0.000304"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:16.034911" level="INFO">‚úÖ SSH connections closed</msg>
<arg>‚úÖ SSH connections closed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:16.034778" elapsed="0.000243"/>
</kw>
<doc>üîå Close all SSH connections</doc>
<status status="PASS" start="2025-10-05T15:44:16.033845" elapsed="0.001256"/>
</kw>
<doc>üîê Patch Management &amp; RSA Authentication Test Suite - Test-18
üîç Process: Find hostname in EDS ‚Üí SSH to server ‚Üí Check RSA configuration ‚Üí Validate patch management registration
‚úÖ Validates: RSA agent installation, RSA configuration files, RSA authentication settings, RSA server connectivity
üìä Documents: Patch management server registration (Ansible/Satellite), RSA agent status, authentication flow readiness
üîê Focus: Two-factor authentication (RSA) setup validation for patch management access</doc>
<status status="FAIL" start="2025-10-05T15:43:58.398046" elapsed="17.637086"/>
</suite>
<suite id="s1-s4" name="Tanium Agent" source="/mnt/c/Users/sacpa/Projects/robot/robotframework/tests/test21_tanium_agent/tanium_agent.robot">
<kw name="Initialize Tanium Agent Test Environment" owner="tanium_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:41.052449" level="INFO">üöÄ Initializing Test-21: Tanium Agent Validation Environment...</msg>
<arg>üöÄ Initializing Test-21: Tanium Agent Validation Environment...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:41.051979" elapsed="0.000670"/>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2025-10-05T15:44:41.054200" level="INFO" html="true">Directory '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test21_tanium_agent/data"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test21_tanium_agent/data&lt;/a&gt;' already exists.</msg>
<arg>${DATA_DIR}</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2025-10-05T15:44:41.052873" elapsed="0.001430"/>
</kw>
<kw name="Lookup Server Config" owner="EDSLookup">
<msg time="2025-10-05T15:44:41.092557" level="INFO">Found matching row for hostname 'alhxvdvitap01'</msg>
<msg time="2025-10-05T15:44:41.092952" level="INFO">Extracted IP from EDS: 172.30.16.186</msg>
<msg time="2025-10-05T15:44:41.093061" level="INFO">Extracted subnet from EDS: 10.26.216.0/24</msg>
<msg time="2025-10-05T15:44:41.093096" level="INFO">Extracted mask from EDS: 255.255.255.0</msg>
<msg time="2025-10-05T15:44:41.093122" level="INFO">Extracted gateway from EDS: 10.26.216.4</msg>
<msg time="2025-10-05T15:44:41.093145" level="INFO">Extracted CNAME from EDS: alhxvdvitap01</msg>
<msg time="2025-10-05T15:44:41.093167" level="INFO">Extracted domain from EDS: gnscet.com</msg>
<msg time="2025-10-05T15:44:41.093195" level="INFO">Extracted CPU cores from EDS: 8</msg>
<msg time="2025-10-05T15:44:41.093219" level="INFO">Extracted RAM from EDS: 16</msg>
<msg time="2025-10-05T15:44:41.093242" level="INFO">Extracted storage type from EDS: VSAN</msg>
<msg time="2025-10-05T15:44:41.093282" level="INFO">Extracted storage total TB from EDS: 0.465</msg>
<msg time="2025-10-05T15:44:41.093305" level="INFO">Extracted drive/volume group from EDS: rootvg:</msg>
<msg time="2025-10-05T15:44:41.093327" level="INFO">Extracted file system from EDS: /dev/mapper/rootvg-rootlv</msg>
<msg time="2025-10-05T15:44:41.093348" level="INFO">Extracted logical volume/partition from EDS: /</msg>
<msg time="2025-10-05T15:44:41.093371" level="INFO">Extracted storage allocation GB from EDS: 20</msg>
<msg time="2025-10-05T15:44:41.093393" level="INFO">Extracted recommended storage allocation GB from EDS: 20</msg>
<msg time="2025-10-05T15:44:41.093412" level="INFO">Extracted drive purpose from EDS: OS</msg>
<msg time="2025-10-05T15:44:41.093432" level="INFO">Extracted OS type from EDS: RHEL 9.6</msg>
<msg time="2025-10-05T15:44:41.093456" level="INFO">EDS configuration for alhxvdvitap01: {'ip': '172.30.16.186', 'subnet': '10.26.216.0/24', 'mask': '255.255.255.0', 'gateway': '10.26.216.4', 'cname': 'alhxvdvitap01', 'domain': 'gnscet.com', 'cpu_cores': '8', 'ram': '16', 'storage_type': 'VSAN', 'storage_total_tb': '0.465', 'drive_volume_group': 'rootvg:', 'file_system': '/dev/mapper/rootvg-rootlv', 'logical_volume_partition': '/', 'storage_allocation_gb': '20', 'recommended_storage_gb': '20', 'drive_purpose': 'OS', 'os_type': 'RHEL 9.6'}</msg>
<msg time="2025-10-05T15:44:41.093603" level="INFO">${eds_config} = {'ip': '172.30.16.186', 'subnet': '10.26.216.0/24', 'mask': '255.255.255.0', 'gateway': '10.26.216.4', 'cname': 'alhxvdvitap01', 'domain': 'gnscet.com', 'cpu_cores': '8', 'ram': '16', 'storage_type': ...</msg>
<var>${eds_config}</var>
<arg>${TARGET_HOSTNAME}</arg>
<doc>Lookup server configuration from EDS sheet based on hostname</doc>
<status status="PASS" start="2025-10-05T15:44:41.054445" elapsed="0.039184"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:44:41.095765" level="INFO">${TARGET_IP} = 172.30.16.186</msg>
<arg>${TARGET_IP}</arg>
<arg>${eds_config['ip']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:44:41.093872" elapsed="0.001956"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:41.096186" level="INFO">üìã Target Server: alhxvdvitap01</msg>
<arg>üìã Target Server: ${TARGET_HOSTNAME}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:41.095974" elapsed="0.000345"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:41.096666" level="INFO">üìã Target IP: 172.30.16.186</msg>
<arg>üìã Target IP: ${TARGET_IP}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:41.096494" elapsed="0.000272"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:41.097040" level="INFO">üîó Connecting to target server: 172.30.16.186...</msg>
<arg>üîó Connecting to target server: ${TARGET_IP}...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:41.096900" elapsed="0.000241"/>
</kw>
<kw name="Open Connection" owner="SSHLibrary">
<arg>${TARGET_IP}</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" start="2025-10-05T15:44:41.097273" elapsed="0.000300"/>
</kw>
<kw name="Login" owner="SSHLibrary">
<msg time="2025-10-05T15:44:41.097901" level="INFO">Logging into '172.30.16.186:22' as 'sac'.</msg>
<msg time="2025-10-05T15:44:42.416940" level="INFO">Read output: Welcome to Ubuntu 24.04.3 LTS (GNU/Linux 6.6.87.2-microsoft-standard-WSL2 x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/pro

 System information as of Sun Oct  5 15:44:11 CDT 2025

  System load:  0.79                Processes:             40
  Usage of /:   0.7% of 1006.85GB   Users logged in:       1
  Memory usage: 6%                  IPv4 address for eth0: 172.30.16.186
  Swap usage:   0%

 * Strictly confined Kubernetes makes edge and IoT secure. Learn how MicroK8s
   just raised the bar for easy, resilient and secure K8s cluster deployment.

   https://ubuntu.com/engage/secure-kubernetes-at-the-edge
Last login: Sun Oct  5 15:44:11 2025 from 172.30.16.186
[?2004hsac@alhxvdvitap01:~$</msg>
<arg>${SSH_USERNAME}</arg>
<arg>${SSH_PASSWORD}</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<status status="PASS" start="2025-10-05T15:44:41.097700" elapsed="1.319477"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:42.418040" level="INFO">‚úÖ SSH connection established successfully</msg>
<arg>‚úÖ SSH connection established successfully</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:42.417627" elapsed="0.000647"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:42.418811" level="INFO">‚úÖ Test-21 environment initialized</msg>
<arg>‚úÖ Test-21 environment initialized</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:42.418532" elapsed="0.000418"/>
</kw>
<doc>üèóÔ∏è Set up test environment for Tanium agent validation</doc>
<status status="PASS" start="2025-10-05T15:44:41.051161" elapsed="1.367908"/>
</kw>
<test id="s1-s4-t1" name="Critical - Connect to Target Server" line="20">
<kw name="Log Test Start" owner="tanium_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:42.420972" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:42.420658" elapsed="0.000556"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:42.423137" level="INFO">üèÅ Starting Test: Critical - Connect to Target Server</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:42.422872" elapsed="0.000507"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:42.424209" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:42.423679" elapsed="0.000651"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:44:42.420213" elapsed="0.004204"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:42.424712" level="INFO">üîç Verifying SSH connection to target server...</msg>
<arg>üîç Verifying SSH connection to target server...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:42.424569" elapsed="0.000253"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:42.425226" level="INFO">üìã Target: alhxvdvitap01 (172.30.16.186)</msg>
<arg>üìã Target: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:42.424958" elapsed="0.000493"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:42.426367" level="INFO">Executing command 'echo "Connection active"'.</msg>
<msg time="2025-10-05T15:44:42.439372" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:42.439597" level="INFO">${output} = Connection active</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:42.426232" elapsed="0.013409"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:42.439747" elapsed="0.000094"/>
</return>
<msg time="2025-10-05T15:44:42.440003" level="INFO">${connection_status} = Connection active</msg>
<var>${connection_status}</var>
<arg>echo "Connection active"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:42.425851" elapsed="0.014177"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${connection_status}</arg>
<arg>Connection active</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-10-05T15:44:42.440250" elapsed="0.000174"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:42.440664" level="INFO">‚úÖ SSH connection verified and active</msg>
<arg>‚úÖ SSH connection verified and active</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:42.440538" elapsed="0.000258"/>
</kw>
<kw name="Log Test End" owner="tanium_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:42.441559" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:42.441441" elapsed="0.000218"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:42.441967" level="INFO">üèÅ Completed Test: Critical - Connect to Target Server | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:42.441784" elapsed="0.000275"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:42.442304" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:42.442172" elapsed="0.000220"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:44:42.441057" elapsed="0.001415"/>
</kw>
<doc>üîó Establish direct connection to target machine via SSH</doc>
<tag>connection</tag>
<tag>critical</tag>
<tag>infrastructure</tag>
<tag>ssh</tag>
<status status="PASS" start="2025-10-05T15:44:42.419264" elapsed="0.023262"/>
</test>
<test id="s1-s4-t2" name="Critical - Check Tanium Agent Installation" line="33">
<kw name="Log Test Start" owner="tanium_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:42.443821" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:42.443693" elapsed="0.000221"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:42.444165" level="INFO">üèÅ Starting Test: Critical - Check Tanium Agent Installation</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:42.444029" elapsed="0.000222"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:42.444490" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:42.444382" elapsed="0.000193"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:44:42.443393" elapsed="0.001257"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:42.444857" level="INFO">üîç Checking Tanium agent installation...</msg>
<arg>üîç Checking Tanium agent installation...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:42.444761" elapsed="0.000182"/>
</kw>
<kw name="Check Tanium Agent Installation" owner="tanium_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:42.445415" level="INFO">üì¶ Checking Tanium agent installation...</msg>
<arg>üì¶ Checking Tanium agent installation...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:42.445323" elapsed="0.000180"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:42.446056" level="INFO">Executing command 'rpm -qa | grep -i tanium 2&gt;/dev/null || dpkg -l | grep -i tanium 2&gt;/dev/null || echo "No Tanium packages found"'.</msg>
<msg time="2025-10-05T15:44:42.530258" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:42.530610" level="INFO">${output} = No Tanium packages found</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:42.445896" elapsed="0.084754"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:42.531570" elapsed="0.000095"/>
</return>
<msg time="2025-10-05T15:44:42.531887" level="INFO">${rpm_packages} = No Tanium packages found</msg>
<var>${rpm_packages}</var>
<arg>rpm -qa | grep -i tanium 2&gt;/dev/null || dpkg -l | grep -i tanium 2&gt;/dev/null || echo "No Tanium packages found"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:42.445659" elapsed="0.086256"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:42.532710" level="INFO">Executing command 'which TaniumClient 2&gt;/dev/null || ls -la /opt/Tanium/TaniumClient/TaniumClient 2&gt;/dev/null || echo "TaniumClient binary not found"'.</msg>
<msg time="2025-10-05T15:44:42.577078" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:42.577395" level="INFO">${output} = TaniumClient binary not found</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:42.532521" elapsed="0.044917"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:42.577526" elapsed="0.000056"/>
</return>
<msg time="2025-10-05T15:44:42.577749" level="INFO">${tanium_client} = TaniumClient binary not found</msg>
<var>${tanium_client}</var>
<arg>which TaniumClient 2&gt;/dev/null || ls -la ${TANIUM_INSTALL_DIR}/TaniumClient 2&gt;/dev/null || echo "TaniumClient binary not found"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:42.532151" elapsed="0.045625"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:42.579146" level="INFO">Executing command 'which taniumcli 2&gt;/dev/null || ls -la /opt/Tanium/TaniumClient/taniumcli 2&gt;/dev/null || echo "taniumcli not found"'.</msg>
<msg time="2025-10-05T15:44:42.643675" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:42.644014" level="INFO">${output} = taniumcli not found</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:42.578916" elapsed="0.065151"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:42.644370" elapsed="0.000129"/>
</return>
<msg time="2025-10-05T15:44:42.644812" level="INFO">${tanium_cli} = taniumcli not found</msg>
<var>${tanium_cli}</var>
<arg>which taniumcli 2&gt;/dev/null || ls -la ${TANIUM_INSTALL_DIR}/taniumcli 2&gt;/dev/null || echo "taniumcli not found"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:42.578090" elapsed="0.066770"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:42.646261" level="INFO">Executing command 'ls -la /opt/Tanium/TaniumClient 2&gt;/dev/null || echo "Tanium installation directory not found"'.</msg>
<msg time="2025-10-05T15:44:42.697087" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:42.697437" level="INFO">${output} = Tanium installation directory not found</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:42.645917" elapsed="0.051565"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:42.697589" elapsed="0.000067"/>
</return>
<msg time="2025-10-05T15:44:42.697864" level="INFO">${install_dir} = Tanium installation directory not found</msg>
<var>${install_dir}</var>
<arg>ls -la ${TANIUM_INSTALL_DIR} 2&gt;/dev/null || echo "Tanium installation directory not found"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:42.645238" elapsed="0.052661"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:42.699100" level="INFO">Executing command 'ls -la /opt/Tanium/TaniumClient 2&gt;/dev/null || echo "Tanium data directory not found"'.</msg>
<msg time="2025-10-05T15:44:42.769023" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:42.769366" level="INFO">${output} = Tanium data directory not found</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:42.698831" elapsed="0.070588"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:42.769549" elapsed="0.000080"/>
</return>
<msg time="2025-10-05T15:44:42.769922" level="INFO">${data_dir} = Tanium data directory not found</msg>
<var>${data_dir}</var>
<arg>ls -la ${TANIUM_DATA_DIR} 2&gt;/dev/null || echo "Tanium data directory not found"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:42.698180" elapsed="0.071813"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:42.771336" level="INFO">${agent_install} = === Tanium Packages ===
No Tanium packages found

=== TaniumClient Binary ===
TaniumClient binary not found

=== Tanium CLI ===
taniumcli not found

=== Installation Directory ===
Tanium installation ...</msg>
<var>${agent_install}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Tanium Packages ===</arg>
<arg>${rpm_packages}</arg>
<arg>=== TaniumClient Binary ===</arg>
<arg>${tanium_client}</arg>
<arg>=== Tanium CLI ===</arg>
<arg>${tanium_cli}</arg>
<arg>=== Installation Directory ===</arg>
<arg>${install_dir}</arg>
<arg>=== Data Directory ===</arg>
<arg>${data_dir}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:42.770288" elapsed="0.001141"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:44:42.772218" level="INFO">${AGENT_INSTALL_STATUS} = === Tanium Packages ===
No Tanium packages found

=== TaniumClient Binary ===
TaniumClient binary not found

=== Tanium CLI ===
taniumcli not found

=== Installation Directory ===
Tanium installation ...</msg>
<arg>${AGENT_INSTALL_STATUS}</arg>
<arg>${agent_install}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:44:42.771818" elapsed="0.000512"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:42.772908" level="INFO">‚úÖ Agent installation status collected</msg>
<arg>‚úÖ Agent installation status collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:42.772588" elapsed="0.000629"/>
</kw>
<return>
<value>${agent_install}</value>
<status status="PASS" start="2025-10-05T15:44:42.773359" elapsed="0.000097"/>
</return>
<msg time="2025-10-05T15:44:42.773817" level="INFO">${agent_install} = === Tanium Packages ===
No Tanium packages found

=== TaniumClient Binary ===
TaniumClient binary not found

=== Tanium CLI ===
taniumcli not found

=== Installation Directory ===
Tanium installation ...</msg>
<var>${agent_install}</var>
<doc>üì¶ Check if Tanium agent is installed</doc>
<status status="PASS" start="2025-10-05T15:44:42.445134" elapsed="0.328751"/>
</kw>
<kw name="Save Agent Installation to File" owner="tanium_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:44:42.775920" level="INFO">${timestamp} = 20251005_154442</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:44:42.775305" elapsed="0.000682"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:44:42.777487" level="INFO">${install_file} = results/test21_tanium_agent/data/agent_installation_20251005_154442.txt</msg>
<var>${install_file}</var>
<arg>${DATA_DIR}/agent_installation_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:44:42.776237" elapsed="0.001305"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:42.778507" level="INFO">${report} = =========================================
=== Tanium Agent Installation ===
=========================================
Timestamp: 20251005_154442
Target Server: alhxvdvitap01 (172.30.16.186)
Expected I...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== Tanium Agent Installation ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>Expected Install Dir: ${TANIUM_INSTALL_DIR}</arg>
<arg>${agent_install}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:42.777753" elapsed="0.000805"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:44:42.788744" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test21_tanium_agent/data/agent_installation_20251005_154442.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test21_tanium_agent/data/agent_installation_20251005_154442.txt&lt;/a&gt;'.</msg>
<arg>${install_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:44:42.778790" elapsed="0.010102"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:42.789463" level="INFO">üìÑ Agent installation saved to: results/test21_tanium_agent/data/agent_installation_20251005_154442.txt</msg>
<arg>üìÑ Agent installation saved to: ${install_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:42.789114" elapsed="0.000515"/>
</kw>
<return>
<value>${install_file}</value>
<status status="PASS" start="2025-10-05T15:44:42.789744" elapsed="0.000053"/>
</return>
<msg time="2025-10-05T15:44:42.790006" level="INFO">${install_file} = results/test21_tanium_agent/data/agent_installation_20251005_154442.txt</msg>
<var>${install_file}</var>
<arg>${agent_install}</arg>
<doc>üíæ Save agent installation details to file</doc>
<status status="PASS" start="2025-10-05T15:44:42.774367" elapsed="0.015676"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:42.790601" level="INFO">üìÑ Agent installation details saved to: results/test21_tanium_agent/data/agent_installation_20251005_154442.txt</msg>
<arg>üìÑ Agent installation details saved to: ${install_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:42.790224" elapsed="0.000530"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:42.791369" level="INFO">‚úÖ Tanium agent installation check completed</msg>
<arg>‚úÖ Tanium agent installation check completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:42.791044" elapsed="0.000431"/>
</kw>
<kw name="Log Test End" owner="tanium_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:42.792415" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:42.792278" elapsed="0.000253"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:42.792946" level="INFO">üèÅ Completed Test: Critical - Check Tanium Agent Installation | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:42.792703" elapsed="0.000379"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:42.793377" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:42.793231" elapsed="0.000252"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:44:42.791849" elapsed="0.001725"/>
</kw>
<doc>üì¶ Verify Tanium agent is installed on the system</doc>
<tag>agent</tag>
<tag>critical</tag>
<tag>installation</tag>
<tag>tanium</tag>
<status status="PASS" start="2025-10-05T15:44:42.442882" elapsed="0.350742"/>
</test>
<test id="s1-s4-t3" name="Critical - Validate Tanium Agent Service Status" line="48">
<kw name="Log Test Start" owner="tanium_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:42.795391" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:42.795019" elapsed="0.000502"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:42.795861" level="INFO">üèÅ Starting Test: Critical - Validate Tanium Agent Service Status</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:42.795678" elapsed="0.000304"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:42.796352" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:42.796200" elapsed="0.000281"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:44:42.794549" elapsed="0.002028"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:42.796840" level="INFO">üîç Validating Tanium agent service status...</msg>
<arg>üîç Validating Tanium agent service status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:42.796706" elapsed="0.000271"/>
</kw>
<kw name="Check Tanium Agent Service Status" owner="tanium_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:42.797933" level="INFO">üîß Checking Tanium agent service status...</msg>
<arg>üîß Checking Tanium agent service status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:42.797825" elapsed="0.000204"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:42.798600" level="INFO">Executing command 'systemctl status taniumclient 2&gt;&amp;1 || systemctl status taniumclient 2&gt;&amp;1 || echo "Service not found in systemctl"'.</msg>
<msg time="2025-10-05T15:44:42.825745" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:42.825990" level="INFO">${output} = Unit taniumclient.service could not be found.
Unit taniumclient.service could not be found.
Service not found in systemctl</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:42.798492" elapsed="0.028187"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:42.826894" elapsed="0.000095"/>
</return>
<msg time="2025-10-05T15:44:42.827273" level="INFO">${systemctl_status} = Unit taniumclient.service could not be found.
Unit taniumclient.service could not be found.
Service not found in systemctl</msg>
<var>${systemctl_status}</var>
<arg>systemctl status ${TANIUM_SERVICE_NAME} 2&gt;&amp;1 || systemctl status taniumclient 2&gt;&amp;1 || echo "Service not found in systemctl"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:42.798191" elapsed="0.029127"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:42.828087" level="INFO">Executing command 'service taniumclient status 2&gt;&amp;1 || service taniumclient status 2&gt;&amp;1 || echo "Service command not available"'.</msg>
<msg time="2025-10-05T15:44:42.918141" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:42.918518" level="INFO">${output} = Unit taniumclient.service could not be found.
Unit taniumclient.service could not be found.
Service command not available</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:42.827952" elapsed="0.090620"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:42.918702" elapsed="0.000309"/>
</return>
<msg time="2025-10-05T15:44:42.919704" level="INFO">${service_status} = Unit taniumclient.service could not be found.
Unit taniumclient.service could not be found.
Service command not available</msg>
<var>${service_status}</var>
<arg>service ${TANIUM_SERVICE_NAME} status 2&gt;&amp;1 || service taniumclient status 2&gt;&amp;1 || echo "Service command not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:42.827582" elapsed="0.092165"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:42.920787" level="INFO">Executing command 'systemctl is-enabled taniumclient 2&gt;&amp;1 || systemctl is-enabled taniumclient 2&gt;&amp;1 || echo "Not enabled"'.</msg>
<msg time="2025-10-05T15:44:42.978371" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:42.978662" level="INFO">${output} = not-found
not-found
Not enabled</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:42.920604" elapsed="0.058088"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:42.978841" elapsed="0.000079"/>
</return>
<msg time="2025-10-05T15:44:42.979214" level="INFO">${is_enabled} = not-found
not-found
Not enabled</msg>
<var>${is_enabled}</var>
<arg>systemctl is-enabled ${TANIUM_SERVICE_NAME} 2&gt;&amp;1 || systemctl is-enabled taniumclient 2&gt;&amp;1 || echo "Not enabled"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:42.920115" elapsed="0.059137"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:42.980201" level="INFO">Executing command 'systemctl is-active taniumclient 2&gt;&amp;1 || systemctl is-active taniumclient 2&gt;&amp;1 || echo "Not active"'.</msg>
<msg time="2025-10-05T15:44:43.049335" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:43.049586" level="INFO">${output} = inactive
inactive
Not active</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:42.980070" elapsed="0.069547"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:43.049723" elapsed="0.000084"/>
</return>
<msg time="2025-10-05T15:44:43.050027" level="INFO">${is_active} = inactive
inactive
Not active</msg>
<var>${is_active}</var>
<arg>systemctl is-active ${TANIUM_SERVICE_NAME} 2&gt;&amp;1 || systemctl is-active taniumclient 2&gt;&amp;1 || echo "Not active"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:42.979619" elapsed="0.070442"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:43.051106" level="INFO">Executing command 'ps aux | grep -i tanium | grep -v grep || echo "No Tanium processes running"'.</msg>
<msg time="2025-10-05T15:44:43.108692" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:43.108935" level="INFO">${output} = sac        13084 17.1  1.3 640324 109220 pts/0   Sl+  15:44   0:03 python3 -m robot --variable SSH_USERNAME:sac --variable SSH_PASSWORD:sac --variable TARGET_HOSTNAME:alhxvdvitap01 --variable TEST_SUI...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:43.050684" elapsed="0.058282"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:43.109056" elapsed="0.000056"/>
</return>
<msg time="2025-10-05T15:44:43.109306" level="INFO">${tanium_processes} = sac        13084 17.1  1.3 640324 109220 pts/0   Sl+  15:44   0:03 python3 -m robot --variable SSH_USERNAME:sac --variable SSH_PASSWORD:sac --variable TARGET_HOSTNAME:alhxvdvitap01 --variable TEST_SUI...</msg>
<var>${tanium_processes}</var>
<arg>ps aux | grep -i tanium | grep -v grep || echo "No Tanium processes running"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:43.050314" elapsed="0.059019"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:43.110074" level="INFO">${service_status_report} = === Systemctl Status ===
Unit taniumclient.service could not be found.
Unit taniumclient.service could not be found.
Service not found in systemctl

=== Service Command Status ===
Unit taniumclient.se...</msg>
<var>${service_status_report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Systemctl Status ===</arg>
<arg>${systemctl_status}</arg>
<arg>=== Service Command Status ===</arg>
<arg>${service_status}</arg>
<arg>=== Service Enabled ===</arg>
<arg>${is_enabled}</arg>
<arg>=== Service Active ===</arg>
<arg>${is_active}</arg>
<arg>=== Tanium Processes ===</arg>
<arg>${tanium_processes}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:43.109623" elapsed="0.000483"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:44:43.110476" level="INFO">${AGENT_SERVICE_STATUS} = === Systemctl Status ===
Unit taniumclient.service could not be found.
Unit taniumclient.service could not be found.
Service not found in systemctl

=== Service Command Status ===
Unit taniumclient.se...</msg>
<arg>${AGENT_SERVICE_STATUS}</arg>
<arg>${service_status_report}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:44:43.110267" elapsed="0.000251"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:43.110898" level="INFO">‚úÖ Service status collected</msg>
<arg>‚úÖ Service status collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:43.110629" elapsed="0.000440"/>
</kw>
<return>
<value>${service_status_report}</value>
<status status="PASS" start="2025-10-05T15:44:43.111147" elapsed="0.000141"/>
</return>
<msg time="2025-10-05T15:44:43.112192" level="INFO">${service_status} = === Systemctl Status ===
Unit taniumclient.service could not be found.
Unit taniumclient.service could not be found.
Service not found in systemctl

=== Service Command Status ===
Unit taniumclient.se...</msg>
<var>${service_status}</var>
<doc>üîß Check Tanium agent service status</doc>
<status status="PASS" start="2025-10-05T15:44:42.797296" elapsed="0.314931"/>
</kw>
<kw name="Save Agent Service Status to File" owner="tanium_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:44:43.112992" level="INFO">${timestamp} = 20251005_154443</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:44:43.112773" elapsed="0.000267"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:44:43.113935" level="INFO">${status_file} = results/test21_tanium_agent/data/agent_service_status_20251005_154443.txt</msg>
<var>${status_file}</var>
<arg>${DATA_DIR}/agent_service_status_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:44:43.113213" elapsed="0.000760"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:43.114471" level="INFO">${report} = =========================================
=== Tanium Agent Service Status ===
=========================================
Timestamp: 20251005_154443
Target Server: alhxvdvitap01 (172.30.16.186)
Service ...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== Tanium Agent Service Status ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>Service Name: ${TANIUM_SERVICE_NAME}</arg>
<arg>${service_status}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:43.114109" elapsed="0.000390"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:44:43.121334" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test21_tanium_agent/data/agent_service_status_20251005_154443.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test21_tanium_agent/data/agent_service_status_20251005_154443.txt&lt;/a&gt;'.</msg>
<arg>${status_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:44:43.114635" elapsed="0.006873"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:43.121834" level="INFO">üìÑ Service status saved to: results/test21_tanium_agent/data/agent_service_status_20251005_154443.txt</msg>
<arg>üìÑ Service status saved to: ${status_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:43.121647" elapsed="0.000295"/>
</kw>
<return>
<value>${status_file}</value>
<status status="PASS" start="2025-10-05T15:44:43.122016" elapsed="0.000042"/>
</return>
<msg time="2025-10-05T15:44:43.122235" level="INFO">${status_file} = results/test21_tanium_agent/data/agent_service_status_20251005_154443.txt</msg>
<var>${status_file}</var>
<arg>${service_status}</arg>
<doc>üíæ Save agent service status to file</doc>
<status status="PASS" start="2025-10-05T15:44:43.112453" elapsed="0.009807"/>
</kw>
<kw name="Should Contain Any" owner="BuiltIn">
<arg>${service_status}</arg>
<arg>running</arg>
<arg>active</arg>
<arg>msg=Tanium agent service should be running</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" start="2025-10-05T15:44:43.122378" elapsed="0.000183"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:43.122929" level="INFO">üìÑ Service status saved to: results/test21_tanium_agent/data/agent_service_status_20251005_154443.txt</msg>
<arg>üìÑ Service status saved to: ${status_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:43.122675" elapsed="0.000363"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:43.123493" level="INFO">‚úÖ Tanium agent service is running</msg>
<arg>‚úÖ Tanium agent service is running</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:43.123376" elapsed="0.000211"/>
</kw>
<kw name="Log Test End" owner="tanium_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:43.126319" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:43.126143" elapsed="0.000291"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:43.127114" level="INFO">üèÅ Completed Test: Critical - Validate Tanium Agent Service Status | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:43.126606" elapsed="0.000654"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:43.127570" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:43.127411" elapsed="0.000252"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:44:43.123824" elapsed="0.003914"/>
</kw>
<doc>üîß Verify Tanium agent service is running</doc>
<tag>critical</tag>
<tag>service</tag>
<tag>status</tag>
<tag>tanium</tag>
<status status="PASS" start="2025-10-05T15:44:42.793981" elapsed="0.333794"/>
</test>
<test id="s1-s4-t4" name="Critical - Check Tanium Server Connectivity" line="67">
<kw name="Log Test Start" owner="tanium_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:43.128898" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:43.128766" elapsed="0.000224"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:43.129244" level="INFO">üèÅ Starting Test: Critical - Check Tanium Server Connectivity</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:43.129108" elapsed="0.000223"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:43.129544" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:43.129445" elapsed="0.000183"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:44:43.128469" elapsed="0.001237"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:43.129936" level="INFO">üîç Testing Tanium server connectivity...</msg>
<arg>üîç Testing Tanium server connectivity...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:43.129835" elapsed="0.000637"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:43.130772" level="INFO">üìã Expected Tanium Server: tanium.domain.com</msg>
<arg>üìã Expected Tanium Server: ${EXPECTED_TANIUM_SERVER}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:43.130619" elapsed="0.000254"/>
</kw>
<kw name="Test Tanium Server Connectivity" owner="tanium_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:43.131510" level="INFO">üåê Testing Tanium server connectivity...</msg>
<arg>üåê Testing Tanium server connectivity...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:43.131401" elapsed="0.000201"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:43.132381" level="INFO">Executing command 'nslookup tanium.domain.com 2&gt;&amp;1 || dig tanium.domain.com 2&gt;&amp;1 || echo "DNS lookup not available"'.</msg>
<msg time="2025-10-05T15:44:43.163427" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:43.163620" level="INFO">${output} = bash: line 1: nslookup: command not found
bash: line 1: dig: command not found
DNS lookup not available</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:43.132268" elapsed="0.031379"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:43.163720" elapsed="0.000044"/>
</return>
<msg time="2025-10-05T15:44:43.163904" level="INFO">${dns_test} = bash: line 1: nslookup: command not found
bash: line 1: dig: command not found
DNS lookup not available</msg>
<var>${dns_test}</var>
<arg>nslookup ${EXPECTED_TANIUM_SERVER} 2&gt;&amp;1 || dig ${EXPECTED_TANIUM_SERVER} 2&gt;&amp;1 || echo "DNS lookup not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:43.131746" elapsed="0.032184"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:43.165204" level="INFO">Executing command 'ping -c 3 tanium.domain.com 2&gt;&amp;1 || echo "Ping test failed"'.</msg>
<msg time="2025-10-05T15:44:43.272427" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:43.272607" level="INFO">${output} = ping: tanium.domain.com: No address associated with hostname
Ping test failed</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:43.165046" elapsed="0.107585"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:43.272697" elapsed="0.000040"/>
</return>
<msg time="2025-10-05T15:44:43.272865" level="INFO">${ping_test} = ping: tanium.domain.com: No address associated with hostname
Ping test failed</msg>
<var>${ping_test}</var>
<arg>ping -c 3 ${EXPECTED_TANIUM_SERVER} 2&gt;&amp;1 || echo "Ping test failed"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:43.164175" elapsed="0.108711"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:43.273563" level="INFO">Executing command 'timeout 5 nc -zv tanium.domain.com 17472 2&gt;&amp;1 || timeout 5 telnet tanium.domain.com 17472 2&gt;&amp;1 | head -5 || echo "Port test failed"'.</msg>
<msg time="2025-10-05T15:44:43.375501" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:43.375788" level="INFO">${output} = nc: getaddrinfo for host "tanium.domain.com" port 17472: No address associated with hostname
timeout: failed to run command ‚Äòtelnet‚Äô: No such file or directory</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:43.273434" elapsed="0.102397"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:43.375942" elapsed="0.000057"/>
</return>
<msg time="2025-10-05T15:44:43.376169" level="INFO">${port_test} = nc: getaddrinfo for host "tanium.domain.com" port 17472: No address associated with hostname
timeout: failed to run command ‚Äòtelnet‚Äô: No such file or directory</msg>
<var>${port_test}</var>
<arg>timeout 5 nc -zv ${EXPECTED_TANIUM_SERVER} ${TANIUM_SERVER_PORT} 2&gt;&amp;1 || timeout 5 telnet ${EXPECTED_TANIUM_SERVER} ${TANIUM_SERVER_PORT} 2&gt;&amp;1 | head -5 || echo "Port test failed"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:43.273064" elapsed="0.103136"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:43.377043" level="INFO">Executing command 'grep -i "serverNameList|serverName" /opt/Tanium/TaniumClient/TaniumClient.ini 2&gt;/dev/null || echo "Server configuration not found"'.</msg>
<msg time="2025-10-05T15:44:43.428771" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:43.429197" level="INFO">${output} = Server configuration not found</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:43.376859" elapsed="0.052403"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:43.429448" elapsed="0.000099"/>
</return>
<msg time="2025-10-05T15:44:43.429873" level="INFO">${config_server} = Server configuration not found</msg>
<var>${config_server}</var>
<arg>grep -i "serverNameList\|serverName" ${TANIUM_CONFIG_FILE} 2&gt;/dev/null || echo "Server configuration not found"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:43.376435" elapsed="0.053489"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:43.431706" level="INFO">Executing command 'tail -50 /opt/Tanium/TaniumClient/Logs/taniumclient.log 2&gt;/dev/null | grep -i "connect|server" || echo "No connection logs"'.</msg>
<msg time="2025-10-05T15:44:43.485264" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:43.485680" level="INFO">${output} = No connection logs</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:43.431420" elapsed="0.054310"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:43.485859" elapsed="0.000071"/>
</return>
<msg time="2025-10-05T15:44:43.486197" level="INFO">${connection_log} = No connection logs</msg>
<var>${connection_log}</var>
<arg>tail -50 ${TANIUM_LOG_DIR}/taniumclient.log 2&gt;/dev/null | grep -i "connect\|server" || echo "No connection logs"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:43.430513" elapsed="0.055743"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:43.487962" level="INFO">${connectivity_result} = === DNS Resolution ===
bash: line 1: nslookup: command not found
bash: line 1: dig: command not found
DNS lookup not available

=== Ping Test ===
ping: tanium.domain.com: No address associated with ho...</msg>
<var>${connectivity_result}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== DNS Resolution ===</arg>
<arg>${dns_test}</arg>
<arg>=== Ping Test ===</arg>
<arg>${ping_test}</arg>
<arg>=== Port ${TANIUM_SERVER_PORT} Test ===</arg>
<arg>${port_test}</arg>
<arg>=== Server Configuration ===</arg>
<arg>${config_server}</arg>
<arg>=== Connection Logs ===</arg>
<arg>${connection_log}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:43.486614" elapsed="0.001410"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:43.489652" level="INFO">‚úÖ Server connectivity test completed</msg>
<arg>‚úÖ Server connectivity test completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:43.489349" elapsed="0.000487"/>
</kw>
<return>
<value>${connectivity_result}</value>
<status status="PASS" start="2025-10-05T15:44:43.489928" elapsed="0.000056"/>
</return>
<msg time="2025-10-05T15:44:43.490234" level="INFO">${connectivity_result} = === DNS Resolution ===
bash: line 1: nslookup: command not found
bash: line 1: dig: command not found
DNS lookup not available

=== Ping Test ===
ping: tanium.domain.com: No address associated with ho...</msg>
<var>${connectivity_result}</var>
<doc>üåê Test connectivity to Tanium server</doc>
<status status="PASS" start="2025-10-05T15:44:43.131105" elapsed="0.359170"/>
</kw>
<kw name="Save Connectivity Test to File" owner="tanium_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:44:43.492081" level="INFO">${timestamp} = 20251005_154443</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:44:43.491688" elapsed="0.000440"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:44:43.492619" level="INFO">${conn_file} = results/test21_tanium_agent/data/server_connectivity_20251005_154443.txt</msg>
<var>${conn_file}</var>
<arg>${DATA_DIR}/server_connectivity_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:44:43.492305" elapsed="0.000353"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:43.493342" level="INFO">${report} = =========================================
=== Tanium Server Connectivity Test ===
=========================================
Timestamp: 20251005_154443
Target Server: alhxvdvitap01 (172.30.16.186)
Tani...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== Tanium Server Connectivity Test ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>Tanium Server: ${EXPECTED_TANIUM_SERVER}</arg>
<arg>Tanium Port: ${TANIUM_SERVER_PORT}</arg>
<arg>${connectivity_result}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:43.492817" elapsed="0.000568"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:44:43.519909" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test21_tanium_agent/data/server_connectivity_20251005_154443.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test21_tanium_agent/data/server_connectivity_20251005_154443.txt&lt;/a&gt;'.</msg>
<arg>${conn_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:44:43.493576" elapsed="0.026550"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:43.521597" level="INFO">üìÑ Connectivity test saved to: results/test21_tanium_agent/data/server_connectivity_20251005_154443.txt</msg>
<arg>üìÑ Connectivity test saved to: ${conn_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:43.520887" elapsed="0.000991"/>
</kw>
<return>
<value>${conn_file}</value>
<status status="PASS" start="2025-10-05T15:44:43.522058" elapsed="0.000114"/>
</return>
<msg time="2025-10-05T15:44:43.522749" level="INFO">${conn_file} = results/test21_tanium_agent/data/server_connectivity_20251005_154443.txt</msg>
<var>${conn_file}</var>
<arg>${connectivity_result}</arg>
<doc>üíæ Save connectivity test results to file</doc>
<status status="PASS" start="2025-10-05T15:44:43.491111" elapsed="0.031731"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:43.523636" level="INFO">üìÑ Connectivity test saved to: results/test21_tanium_agent/data/server_connectivity_20251005_154443.txt</msg>
<arg>üìÑ Connectivity test saved to: ${conn_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:43.523271" elapsed="0.000561"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:43.524323" level="INFO">‚úÖ Tanium server connectivity test completed</msg>
<arg>‚úÖ Tanium server connectivity test completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:43.524045" elapsed="0.000430"/>
</kw>
<kw name="Log Test End" owner="tanium_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:43.525574" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:43.525393" elapsed="0.000329"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:43.526223" level="INFO">üèÅ Completed Test: Critical - Check Tanium Server Connectivity | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:43.525914" elapsed="0.000445"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:43.526735" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:43.526525" elapsed="0.000354"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:44:43.524883" elapsed="0.002094"/>
</kw>
<doc>üåê Test connectivity to Tanium server</doc>
<tag>connectivity</tag>
<tag>critical</tag>
<tag>network</tag>
<tag>tanium</tag>
<status status="PASS" start="2025-10-05T15:44:43.128017" elapsed="0.399040"/>
</test>
<test id="s1-s4-t5" name="Critical - Collect Tanium Agent Version" line="83">
<kw name="Log Test Start" owner="tanium_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:43.529804" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:43.529528" elapsed="0.000981"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:43.531109" level="INFO">üèÅ Starting Test: Critical - Collect Tanium Agent Version</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:43.530739" elapsed="0.000581"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:43.531705" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:43.531511" elapsed="0.001252"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:44:43.528967" elapsed="0.003927"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:43.533313" level="INFO">üîç Collecting Tanium agent version...</msg>
<arg>üîç Collecting Tanium agent version...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:43.533099" elapsed="0.000391"/>
</kw>
<kw name="Collect Tanium Agent Version" owner="tanium_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:43.535828" level="INFO">üìã Collecting Tanium agent version...</msg>
<arg>üìã Collecting Tanium agent version...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:43.535458" elapsed="0.000588"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:43.537035" level="INFO">Executing command '/opt/Tanium/TaniumClient/TaniumClient --version 2&gt;&amp;1 || echo "Version command not available"'.</msg>
<msg time="2025-10-05T15:44:43.550304" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:43.550572" level="INFO">${output} = bash: line 1: /opt/Tanium/TaniumClient/TaniumClient: No such file or directory
Version command not available</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:43.536836" elapsed="0.013773"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:43.550705" elapsed="0.000060"/>
</return>
<msg time="2025-10-05T15:44:43.551021" level="INFO">${client_version} = bash: line 1: /opt/Tanium/TaniumClient/TaniumClient: No such file or directory
Version command not available</msg>
<var>${client_version}</var>
<arg>${TANIUM_INSTALL_DIR}/TaniumClient --version 2&gt;&amp;1 || echo "Version command not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:43.536346" elapsed="0.014708"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:43.552064" level="INFO">Executing command 'rpm -q taniumclient 2&gt;/dev/null || dpkg -l taniumclient 2&gt;/dev/null | grep taniumclient || echo "Package version not available"'.</msg>
<msg time="2025-10-05T15:44:43.632322" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:43.632656" level="INFO">${output} = Package version not available</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:43.551908" elapsed="0.080781"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:43.632783" elapsed="0.000057"/>
</return>
<msg time="2025-10-05T15:44:43.633018" level="INFO">${pkg_version} = Package version not available</msg>
<var>${pkg_version}</var>
<arg>rpm -q taniumclient 2&gt;/dev/null || dpkg -l taniumclient 2&gt;/dev/null | grep taniumclient || echo "Package version not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:43.551503" elapsed="0.081543"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:43.634369" level="INFO">Executing command 'cat /opt/Tanium/TaniumClient/Version.txt 2&gt;/dev/null || echo "Version file not found"'.</msg>
<msg time="2025-10-05T15:44:43.682246" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:43.682521" level="INFO">${output} = Version file not found</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:43.633792" elapsed="0.048763"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:43.682656" elapsed="0.000061"/>
</return>
<msg time="2025-10-05T15:44:43.682994" level="INFO">${version_file} = Version file not found</msg>
<var>${version_file}</var>
<arg>cat ${TANIUM_DATA_DIR}/Version.txt 2&gt;/dev/null || echo "Version file not found"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:43.633296" elapsed="0.049730"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:43.684051" level="INFO">Executing command '/opt/Tanium/TaniumClient/TaniumClient config get 2&gt;&amp;1 | head -20 || echo "Agent config not available"'.</msg>
<msg time="2025-10-05T15:44:43.733432" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:43.733759" level="INFO">${output} = bash: line 1: /opt/Tanium/TaniumClient/TaniumClient: No such file or directory</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:43.683896" elapsed="0.049934"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:43.734335" elapsed="0.000109"/>
</return>
<msg time="2025-10-05T15:44:43.734882" level="INFO">${agent_info} = bash: line 1: /opt/Tanium/TaniumClient/TaniumClient: No such file or directory</msg>
<var>${agent_info}</var>
<arg>${TANIUM_INSTALL_DIR}/TaniumClient config get 2&gt;&amp;1 | head -20 || echo "Agent config not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:43.683444" elapsed="0.051540"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:43.735861" level="INFO">${agent_version} = === TaniumClient Version ===
bash: line 1: /opt/Tanium/TaniumClient/TaniumClient: No such file or directory
Version command not available

=== Package Version ===
Package version not available

=== Ve...</msg>
<var>${agent_version}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== TaniumClient Version ===</arg>
<arg>${client_version}</arg>
<arg>=== Package Version ===</arg>
<arg>${pkg_version}</arg>
<arg>=== Version File ===</arg>
<arg>${version_file}</arg>
<arg>=== Agent Info ===</arg>
<arg>${agent_info}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:43.735383" elapsed="0.000515"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:44:43.736378" level="INFO">${AGENT_VERSION} = === TaniumClient Version ===
bash: line 1: /opt/Tanium/TaniumClient/TaniumClient: No such file or directory
Version command not available

=== Package Version ===
Package version not available

=== Ve...</msg>
<arg>${AGENT_VERSION}</arg>
<arg>${agent_version}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:44:43.736101" elapsed="0.000330"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:43.736774" level="INFO">‚úÖ Agent version collected</msg>
<arg>‚úÖ Agent version collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:43.736569" elapsed="0.000354"/>
</kw>
<return>
<value>${agent_version}</value>
<status status="PASS" start="2025-10-05T15:44:43.737012" elapsed="0.000059"/>
</return>
<msg time="2025-10-05T15:44:43.737412" level="INFO">${agent_version} = === TaniumClient Version ===
bash: line 1: /opt/Tanium/TaniumClient/TaniumClient: No such file or directory
Version command not available

=== Package Version ===
Package version not available

=== Ve...</msg>
<var>${agent_version}</var>
<doc>üìã Collect Tanium agent version</doc>
<status status="PASS" start="2025-10-05T15:44:43.534014" elapsed="0.204149"/>
</kw>
<kw name="Save Agent Version to File" owner="tanium_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:44:43.739312" level="INFO">${timestamp} = 20251005_154443</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:44:43.738895" elapsed="0.000467"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:44:43.739812" level="INFO">${version_file} = results/test21_tanium_agent/data/agent_version_20251005_154443.txt</msg>
<var>${version_file}</var>
<arg>${DATA_DIR}/agent_version_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:44:43.739561" elapsed="0.000358"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:43.741240" level="INFO">${report} = =========================================
=== Tanium Agent Version ===
=========================================
Timestamp: 20251005_154443
Target Server: alhxvdvitap01 (172.30.16.186)

=== TaniumClie...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== Tanium Agent Version ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>${agent_version}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:43.740090" elapsed="0.001203"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:44:43.748073" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test21_tanium_agent/data/agent_version_20251005_154443.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test21_tanium_agent/data/agent_version_20251005_154443.txt&lt;/a&gt;'.</msg>
<arg>${version_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:44:43.741499" elapsed="0.006713"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:43.748835" level="INFO">üìÑ Agent version saved to: results/test21_tanium_agent/data/agent_version_20251005_154443.txt</msg>
<arg>üìÑ Agent version saved to: ${version_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:43.748563" elapsed="0.000445"/>
</kw>
<return>
<value>${version_file}</value>
<status status="PASS" start="2025-10-05T15:44:43.749094" elapsed="0.000062"/>
</return>
<msg time="2025-10-05T15:44:43.749341" level="INFO">${version_file} = results/test21_tanium_agent/data/agent_version_20251005_154443.txt</msg>
<var>${version_file}</var>
<arg>${agent_version}</arg>
<doc>üíæ Save agent version to file</doc>
<status status="PASS" start="2025-10-05T15:44:43.738533" elapsed="0.010835"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-10-05T15:44:43.749672" level="INFO">Length is 336.</msg>
<arg>${agent_version}</arg>
<arg>msg=Tanium agent version should be available</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-10-05T15:44:43.749498" elapsed="0.000215"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:43.749991" level="INFO">üìã Agent Version: === TaniumClient Version ===
bash: line 1: /opt/Tanium/TaniumClient/TaniumClient: No such file or directory
Version command not available

=== Package Version ===
Package version not available

=== Version File ===
Version file not found

=== Agent Info ===
bash: line 1: /opt/Tanium/TaniumClient/TaniumClient: No such file or directory</msg>
<arg>üìã Agent Version: ${agent_version}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:43.749819" elapsed="0.000295"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:43.750415" level="INFO">üìÑ Version information saved to: results/test21_tanium_agent/data/agent_version_20251005_154443.txt</msg>
<arg>üìÑ Version information saved to: ${version_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:43.750261" elapsed="0.000253"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:43.750754" level="INFO">‚úÖ Tanium agent version collected</msg>
<arg>‚úÖ Tanium agent version collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:43.750649" elapsed="0.000235"/>
</kw>
<kw name="Log Test End" owner="tanium_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:43.751790" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:43.751679" elapsed="0.000276"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:43.752279" level="INFO">üèÅ Completed Test: Critical - Collect Tanium Agent Version | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:43.752100" elapsed="0.000298"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:43.752647" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:43.752529" elapsed="0.000206"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:44:43.751316" elapsed="0.001494"/>
</kw>
<doc>üìã Collect Tanium agent version information</doc>
<tag>critical</tag>
<tag>info</tag>
<tag>tanium</tag>
<tag>version</tag>
<status status="PASS" start="2025-10-05T15:44:43.527464" elapsed="0.225408"/>
</test>
<test id="s1-s4-t6" name="Critical - Validate Tanium Agent Configuration" line="103">
<kw name="Log Test Start" owner="tanium_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:43.754310" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:43.753864" elapsed="0.000546"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:43.754797" level="INFO">üèÅ Starting Test: Critical - Validate Tanium Agent Configuration</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:43.754547" elapsed="0.000437"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:43.755347" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:43.755133" elapsed="0.000323"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:44:43.753628" elapsed="0.002434"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:43.756442" level="INFO">üîç Validating Tanium agent configuration...</msg>
<arg>üîç Validating Tanium agent configuration...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:43.756244" elapsed="0.000552"/>
</kw>
<kw name="Validate Tanium Agent Configuration" owner="tanium_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:43.757537" level="INFO">‚öôÔ∏è Validating agent configuration...</msg>
<arg>‚öôÔ∏è Validating agent configuration...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:43.757417" elapsed="0.000228"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:43.758520" level="INFO">Executing command 'cat /opt/Tanium/TaniumClient/TaniumClient.ini 2&gt;/dev/null || echo "Configuration file not found"'.</msg>
<msg time="2025-10-05T15:44:43.788036" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:43.788341" level="INFO">${output} = Configuration file not found</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:43.758107" elapsed="0.030270"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:43.788495" elapsed="0.000075"/>
</return>
<msg time="2025-10-05T15:44:43.788881" level="INFO">${config_file} = Configuration file not found</msg>
<var>${config_file}</var>
<arg>cat ${TANIUM_CONFIG_FILE} 2&gt;/dev/null || echo "Configuration file not found"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:43.757825" elapsed="0.031093"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:43.789769" level="INFO">Executing command 'cat /opt/Tanium/TaniumClient/tanium.dat 2&gt;/dev/null || echo "tanium.dat not found"'.</msg>
<msg time="2025-10-05T15:44:43.836211" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:43.836441" level="INFO">${output} = tanium.dat not found</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:43.789617" elapsed="0.046860"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:43.836569" elapsed="0.000056"/>
</return>
<msg time="2025-10-05T15:44:43.836807" level="INFO">${tanium_dat} = tanium.dat not found</msg>
<var>${tanium_dat}</var>
<arg>cat ${TANIUM_DATA_DIR}/tanium.dat 2&gt;/dev/null || echo "tanium.dat not found"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:43.789207" elapsed="0.047631"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:43.837815" level="INFO">Executing command '/opt/Tanium/TaniumClient/TaniumClient config list 2&gt;&amp;1 | head -50 || echo "Config list not available"'.</msg>
<msg time="2025-10-05T15:44:43.894096" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:43.894442" level="INFO">${output} = bash: line 1: /opt/Tanium/TaniumClient/TaniumClient: No such file or directory</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:43.837624" elapsed="0.056870"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:43.894735" elapsed="0.000200"/>
</return>
<msg time="2025-10-05T15:44:43.895494" level="INFO">${config_settings} = bash: line 1: /opt/Tanium/TaniumClient/TaniumClient: No such file or directory</msg>
<var>${config_settings}</var>
<arg>${TANIUM_INSTALL_DIR}/TaniumClient config list 2&gt;&amp;1 | head -50 || echo "Config list not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:43.837094" elapsed="0.058465"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:43.896737" level="INFO">Executing command '/opt/Tanium/TaniumClient/TaniumClient config get ServerNameList 2&gt;&amp;1 || echo "ServerNameList not available"'.</msg>
<msg time="2025-10-05T15:44:43.950518" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:43.950924" level="INFO">${output} = bash: line 1: /opt/Tanium/TaniumClient/TaniumClient: No such file or directory
ServerNameList not available</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:43.896525" elapsed="0.054517"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:43.951395" elapsed="0.000138"/>
</return>
<msg time="2025-10-05T15:44:43.951952" level="INFO">${server_list} = bash: line 1: /opt/Tanium/TaniumClient/TaniumClient: No such file or directory
ServerNameList not available</msg>
<var>${server_list}</var>
<arg>${TANIUM_INSTALL_DIR}/TaniumClient config get ServerNameList 2&gt;&amp;1 || echo "ServerNameList not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:43.895996" elapsed="0.056011"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:43.953428" level="INFO">Executing command '/opt/Tanium/TaniumClient/TaniumClient config get LogVerbosityLevel 2&gt;&amp;1 || echo "LogVerbosityLevel not available"'.</msg>
<msg time="2025-10-05T15:44:44.005507" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:44.005932" level="INFO">${output} = bash: line 1: /opt/Tanium/TaniumClient/TaniumClient: No such file or directory
LogVerbosityLevel not available</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:43.953167" elapsed="0.052815"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:44.006104" elapsed="0.000077"/>
</return>
<msg time="2025-10-05T15:44:44.006426" level="INFO">${log_level} = bash: line 1: /opt/Tanium/TaniumClient/TaniumClient: No such file or directory
LogVerbosityLevel not available</msg>
<var>${log_level}</var>
<arg>${TANIUM_INSTALL_DIR}/TaniumClient config get LogVerbosityLevel 2&gt;&amp;1 || echo "LogVerbosityLevel not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:43.952418" elapsed="0.054050"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.007631" level="INFO">${config_data} = === Configuration File (TaniumClient.ini) ===
Configuration file not found

=== tanium.dat ===
tanium.dat not found

=== Configuration Settings ===
bash: line 1: /opt/Tanium/TaniumClient/TaniumClient:...</msg>
<var>${config_data}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Configuration File (TaniumClient.ini) ===</arg>
<arg>${config_file}</arg>
<arg>=== tanium.dat ===</arg>
<arg>${tanium_dat}</arg>
<arg>=== Configuration Settings ===</arg>
<arg>${config_settings}</arg>
<arg>=== Server List ===</arg>
<arg>${server_list}</arg>
<arg>=== Log Level ===</arg>
<arg>${log_level}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:44.006761" elapsed="0.000918"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.009282" level="INFO">${AGENT_CONFIGURATION} = === Configuration File (TaniumClient.ini) ===
Configuration file not found

=== tanium.dat ===
tanium.dat not found

=== Configuration Settings ===
bash: line 1: /opt/Tanium/TaniumClient/TaniumClient:...</msg>
<arg>${AGENT_CONFIGURATION}</arg>
<arg>${config_data}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:44:44.008868" elapsed="0.000491"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.010225" level="INFO">‚úÖ Agent configuration collected</msg>
<arg>‚úÖ Agent configuration collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.009807" elapsed="0.000623"/>
</kw>
<return>
<value>${config_data}</value>
<status status="PASS" start="2025-10-05T15:44:44.010549" elapsed="0.000075"/>
</return>
<msg time="2025-10-05T15:44:44.010974" level="INFO">${config_data} = === Configuration File (TaniumClient.ini) ===
Configuration file not found

=== tanium.dat ===
tanium.dat not found

=== Configuration Settings ===
bash: line 1: /opt/Tanium/TaniumClient/TaniumClient:...</msg>
<var>${config_data}</var>
<doc>‚öôÔ∏è Validate Tanium agent configuration</doc>
<status status="PASS" start="2025-10-05T15:44:43.757119" elapsed="0.253955"/>
</kw>
<kw name="Save Agent Configuration to File" owner="tanium_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:44:44.012459" level="INFO">${timestamp} = 20251005_154444</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:44:44.012113" elapsed="0.000396"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.012958" level="INFO">${config_file} = results/test21_tanium_agent/data/agent_configuration_20251005_154444.txt</msg>
<var>${config_file}</var>
<arg>${DATA_DIR}/agent_configuration_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:44:44.012672" elapsed="0.000322"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.013633" level="INFO">${report} = =========================================
=== Tanium Agent Configuration ===
=========================================
Timestamp: 20251005_154444
Target Server: alhxvdvitap01 (172.30.16.186)
Config Fi...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== Tanium Agent Configuration ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>Config File: ${TANIUM_CONFIG_FILE}</arg>
<arg>${config_data}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:44.013131" elapsed="0.000543"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:44:44.021387" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test21_tanium_agent/data/agent_configuration_20251005_154444.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test21_tanium_agent/data/agent_configuration_20251005_154444.txt&lt;/a&gt;'.</msg>
<arg>${config_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:44:44.013844" elapsed="0.007635"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.021837" level="INFO">üìÑ Agent configuration saved to: results/test21_tanium_agent/data/agent_configuration_20251005_154444.txt</msg>
<arg>üìÑ Agent configuration saved to: ${config_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.021629" elapsed="0.000339"/>
</kw>
<return>
<value>${config_file}</value>
<status status="PASS" start="2025-10-05T15:44:44.022055" elapsed="0.000040"/>
</return>
<msg time="2025-10-05T15:44:44.022293" level="INFO">${config_file} = results/test21_tanium_agent/data/agent_configuration_20251005_154444.txt</msg>
<var>${config_file}</var>
<arg>${config_data}</arg>
<doc>üíæ Save agent configuration to file</doc>
<status status="PASS" start="2025-10-05T15:44:44.011615" elapsed="0.010717"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.022686" level="INFO">üìÑ Configuration saved to: results/test21_tanium_agent/data/agent_configuration_20251005_154444.txt</msg>
<arg>üìÑ Configuration saved to: ${config_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.022498" elapsed="0.000337"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.023270" level="INFO">‚úÖ Tanium agent configuration validated</msg>
<arg>‚úÖ Tanium agent configuration validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.023017" elapsed="0.000373"/>
</kw>
<kw name="Log Test End" owner="tanium_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.024384" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.024252" elapsed="0.000272"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.024843" level="INFO">üèÅ Completed Test: Critical - Validate Tanium Agent Configuration | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.024686" elapsed="0.000249"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.025172" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.025053" elapsed="0.000213"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:44:44.023839" elapsed="0.001500"/>
</kw>
<doc>‚öôÔ∏è Validate Tanium agent configuration files</doc>
<tag>configuration</tag>
<tag>critical</tag>
<tag>tanium</tag>
<tag>validation</tag>
<status status="PASS" start="2025-10-05T15:44:43.753118" elapsed="0.272255"/>
</test>
<test id="s1-s4-t7" name="Critical - Check Tanium Agent Registration Status" line="118">
<kw name="Log Test Start" owner="tanium_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.026671" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.026552" elapsed="0.000223"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.027075" level="INFO">üèÅ Starting Test: Critical - Check Tanium Agent Registration Status</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.026939" elapsed="0.000231"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.027874" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.027750" elapsed="0.000209"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:44:44.026098" elapsed="0.001943"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.028235" level="INFO">üîç Checking Tanium agent registration status...</msg>
<arg>üîç Checking Tanium agent registration status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.028142" elapsed="0.000176"/>
</kw>
<kw name="Check Tanium Agent Registration" owner="tanium_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.028767" level="INFO">üìù Checking agent registration...</msg>
<arg>üìù Checking agent registration...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.028671" elapsed="0.000186"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:44.029412" level="INFO">Executing command '/opt/Tanium/TaniumClient/TaniumClient config get ComputerID 2&gt;&amp;1 || echo "ComputerID not available"'.</msg>
<msg time="2025-10-05T15:44:44.056201" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:44.056479" level="INFO">${output} = bash: line 1: /opt/Tanium/TaniumClient/TaniumClient: No such file or directory
ComputerID not available</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:44.029309" elapsed="0.027208"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:44.056620" elapsed="0.000067"/>
</return>
<msg time="2025-10-05T15:44:44.056962" level="INFO">${registration_id} = bash: line 1: /opt/Tanium/TaniumClient/TaniumClient: No such file or directory
ComputerID not available</msg>
<var>${registration_id}</var>
<arg>${TANIUM_INSTALL_DIR}/TaniumClient config get ComputerID 2&gt;&amp;1 || echo "ComputerID not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:44.029019" elapsed="0.028003"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:44.058071" level="INFO">Executing command 'grep -i "registration|registered" /opt/Tanium/TaniumClient/Logs/taniumclient.log 2&gt;/dev/null | tail -10 || echo "No registration logs"'.</msg>
<msg time="2025-10-05T15:44:44.112433" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:44.112708" level="INFO">${output} = </msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:44.057843" elapsed="0.054909"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:44.112858" elapsed="0.000065"/>
</return>
<msg time="2025-10-05T15:44:44.113136" level="INFO">${last_reg_time} = </msg>
<var>${last_reg_time}</var>
<arg>grep -i "registration\|registered" ${TANIUM_LOG_DIR}/taniumclient.log 2&gt;/dev/null | tail -10 || echo "No registration logs"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:44.057318" elapsed="0.055853"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:44.114136" level="INFO">Executing command '/opt/Tanium/TaniumClient/TaniumClient config get PublicKeyFingerprint 2&gt;&amp;1 || echo "Fingerprint not available"'.</msg>
<msg time="2025-10-05T15:44:44.164369" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:44.164622" level="INFO">${output} = bash: line 1: /opt/Tanium/TaniumClient/TaniumClient: No such file or directory
Fingerprint not available</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:44.114022" elapsed="0.050631"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:44.164799" elapsed="0.000058"/>
</return>
<msg time="2025-10-05T15:44:44.165026" level="INFO">${fingerprint} = bash: line 1: /opt/Tanium/TaniumClient/TaniumClient: No such file or directory
Fingerprint not available</msg>
<var>${fingerprint}</var>
<arg>${TANIUM_INSTALL_DIR}/TaniumClient config get PublicKeyFingerprint 2&gt;&amp;1 || echo "Fingerprint not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:44.113694" elapsed="0.051359"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:44.165842" level="INFO">Executing command '/opt/Tanium/TaniumClient/TaniumClient status 2&gt;&amp;1 || echo "Status command not available"'.</msg>
<msg time="2025-10-05T15:44:44.213569" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:44.213980" level="INFO">${output} = bash: line 1: /opt/Tanium/TaniumClient/TaniumClient: No such file or directory
Status command not available</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:44.165719" elapsed="0.048336"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:44.214275" elapsed="0.000114"/>
</return>
<msg time="2025-10-05T15:44:44.214775" level="INFO">${client_status} = bash: line 1: /opt/Tanium/TaniumClient/TaniumClient: No such file or directory
Status command not available</msg>
<var>${client_status}</var>
<arg>${TANIUM_INSTALL_DIR}/TaniumClient status 2&gt;&amp;1 || echo "Status command not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:44.165344" elapsed="0.049556"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.216347" level="INFO">${registration_status} = === Computer ID (Registration ID) ===
bash: line 1: /opt/Tanium/TaniumClient/TaniumClient: No such file or directory
ComputerID not available

=== Last Registration Logs ===


=== Public Key Fingerpri...</msg>
<var>${registration_status}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Computer ID (Registration ID) ===</arg>
<arg>${registration_id}</arg>
<arg>=== Last Registration Logs ===</arg>
<arg>${last_reg_time}</arg>
<arg>=== Public Key Fingerprint ===</arg>
<arg>${fingerprint}</arg>
<arg>=== Client Status ===</arg>
<arg>${client_status}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:44.215448" elapsed="0.000968"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.217183" level="INFO">‚úÖ Registration status collected</msg>
<arg>‚úÖ Registration status collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.216835" elapsed="0.000586"/>
</kw>
<return>
<value>${registration_status}</value>
<status status="PASS" start="2025-10-05T15:44:44.217556" elapsed="0.000084"/>
</return>
<msg time="2025-10-05T15:44:44.217982" level="INFO">${registration_status} = === Computer ID (Registration ID) ===
bash: line 1: /opt/Tanium/TaniumClient/TaniumClient: No such file or directory
ComputerID not available

=== Last Registration Logs ===


=== Public Key Fingerpri...</msg>
<var>${registration_status}</var>
<doc>üìù Check agent registration status</doc>
<status status="PASS" start="2025-10-05T15:44:44.028489" elapsed="0.190432"/>
</kw>
<kw name="Save Registration Status to File" owner="tanium_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:44:44.220641" level="INFO">${timestamp} = 20251005_154444</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:44:44.220205" elapsed="0.000496"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.221359" level="INFO">${reg_file} = results/test21_tanium_agent/data/registration_status_20251005_154444.txt</msg>
<var>${reg_file}</var>
<arg>${DATA_DIR}/registration_status_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:44:44.220988" elapsed="0.000410"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.221967" level="INFO">${report} = =========================================
=== Tanium Agent Registration ===
=========================================
Timestamp: 20251005_154444
Target Server: alhxvdvitap01 (172.30.16.186)

=== Compu...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== Tanium Agent Registration ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>${registration_status}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:44.221542" elapsed="0.000472"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:44:44.231917" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test21_tanium_agent/data/registration_status_20251005_154444.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test21_tanium_agent/data/registration_status_20251005_154444.txt&lt;/a&gt;'.</msg>
<arg>${reg_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:44:44.222238" elapsed="0.009914"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.233111" level="INFO">üìÑ Registration status saved to: results/test21_tanium_agent/data/registration_status_20251005_154444.txt</msg>
<arg>üìÑ Registration status saved to: ${reg_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.232699" elapsed="0.000920"/>
</kw>
<return>
<value>${reg_file}</value>
<status status="PASS" start="2025-10-05T15:44:44.233844" elapsed="0.000072"/>
</return>
<msg time="2025-10-05T15:44:44.234164" level="INFO">${reg_file} = results/test21_tanium_agent/data/registration_status_20251005_154444.txt</msg>
<var>${reg_file}</var>
<arg>${registration_status}</arg>
<doc>üíæ Save registration status to file</doc>
<status status="PASS" start="2025-10-05T15:44:44.219564" elapsed="0.014640"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.235004" level="INFO">üìÑ Registration status saved to: results/test21_tanium_agent/data/registration_status_20251005_154444.txt</msg>
<arg>üìÑ Registration status saved to: ${reg_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.234471" elapsed="0.001497"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.236364" level="INFO">‚úÖ Agent registration status checked</msg>
<arg>‚úÖ Agent registration status checked</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.236170" elapsed="0.000669"/>
</kw>
<kw name="Log Test End" owner="tanium_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.240115" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.239922" elapsed="0.000262"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.240474" level="INFO">üèÅ Completed Test: Critical - Check Tanium Agent Registration Status | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.240298" elapsed="0.000231"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.240752" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.240631" elapsed="0.000215"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:44:44.237363" elapsed="0.003546"/>
</kw>
<doc>üìù Verify agent is registered with Tanium server</doc>
<tag>critical</tag>
<tag>registration</tag>
<tag>status</tag>
<tag>tanium</tag>
<status status="PASS" start="2025-10-05T15:44:44.025644" elapsed="0.215310"/>
</test>
<test id="s1-s4-t8" name="Critical - Validate Tanium Sensor Inventory" line="133">
<kw name="Log Test Start" owner="tanium_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.241980" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.241867" elapsed="0.000206"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.242303" level="INFO">üèÅ Starting Test: Critical - Validate Tanium Sensor Inventory</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.242173" elapsed="0.000208"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.242564" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.242473" elapsed="0.000165"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:44:44.241647" elapsed="0.001042"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.242871" level="INFO">üîç Validating Tanium sensor inventory...</msg>
<arg>üîç Validating Tanium sensor inventory...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.242777" elapsed="0.000167"/>
</kw>
<kw name="Collect Tanium Sensor Inventory" owner="tanium_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.243449" level="INFO">üìä Collecting sensor inventory...</msg>
<arg>üìä Collecting sensor inventory...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.243362" elapsed="0.000396"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:44.246021" level="INFO">Executing command 'ls -la /opt/Tanium/TaniumClient/Sensors/ 2&gt;/dev/null || echo "Sensors directory not found"'.</msg>
<msg time="2025-10-05T15:44:44.267365" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:44.267590" level="INFO">${output} = Sensors directory not found</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:44.245822" elapsed="0.021798"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:44.267695" elapsed="0.000048"/>
</return>
<msg time="2025-10-05T15:44:44.267921" level="INFO">${sensor_list} = Sensors directory not found</msg>
<var>${sensor_list}</var>
<arg>ls -la ${TANIUM_DATA_DIR}/Sensors/ 2&gt;/dev/null || echo "Sensors directory not found"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:44.245264" elapsed="0.022680"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:44.268645" level="INFO">Executing command 'ls -la /opt/Tanium/TaniumClient/SensorCache/ 2&gt;/dev/null || echo "Sensor cache not found"'.</msg>
<msg time="2025-10-05T15:44:44.317142" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:44.317408" level="INFO">${output} = Sensor cache not found</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:44.268466" elapsed="0.048979"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:44.317549" elapsed="0.000063"/>
</return>
<msg time="2025-10-05T15:44:44.317811" level="INFO">${sensor_cache} = Sensor cache not found</msg>
<var>${sensor_cache}</var>
<arg>ls -la ${TANIUM_DATA_DIR}/SensorCache/ 2&gt;/dev/null || echo "Sensor cache not found"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:44.268149" elapsed="0.049696"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:44.319076" level="INFO">Executing command 'grep -i "sensor" /opt/Tanium/TaniumClient/Logs/taniumclient.log 2&gt;/dev/null | tail -20 || echo "No sensor logs"'.</msg>
<msg time="2025-10-05T15:44:44.374371" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:44.375009" level="INFO">${output} = </msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:44.318755" elapsed="0.056349"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:44.375397" elapsed="0.000160"/>
</return>
<msg time="2025-10-05T15:44:44.375924" level="INFO">${sensor_logs} = </msg>
<var>${sensor_logs}</var>
<arg>grep -i "sensor" ${TANIUM_LOG_DIR}/taniumclient.log 2&gt;/dev/null | tail -20 || echo "No sensor logs"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:44.318196" elapsed="0.057797"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:44.377234" level="INFO">Executing command 'ls -la /opt/Tanium/TaniumClient/Tools/ 2&gt;/dev/null || echo "Tools directory not found"'.</msg>
<msg time="2025-10-05T15:44:44.429983" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:44.430327" level="INFO">${output} = Tools directory not found</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:44.376954" elapsed="0.053422"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:44.430689" elapsed="0.000176"/>
</return>
<msg time="2025-10-05T15:44:44.431449" level="INFO">${tools_dir} = Tools directory not found</msg>
<var>${tools_dir}</var>
<arg>ls -la ${TANIUM_DATA_DIR}/Tools/ 2&gt;/dev/null || echo "Tools directory not found"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:44.376394" elapsed="0.055108"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.432504" level="INFO">${sensor_inventory} = === Sensors Directory ===
Sensors directory not found

=== Sensor Cache ===
Sensor cache not found

=== Sensor Logs ===


=== Tools Directory ===
Tools directory not found</msg>
<var>${sensor_inventory}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Sensors Directory ===</arg>
<arg>${sensor_list}</arg>
<arg>=== Sensor Cache ===</arg>
<arg>${sensor_cache}</arg>
<arg>=== Sensor Logs ===</arg>
<arg>${sensor_logs}</arg>
<arg>=== Tools Directory ===</arg>
<arg>${tools_dir}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:44.431793" elapsed="0.000763"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.433049" level="INFO">‚úÖ Sensor inventory collected</msg>
<arg>‚úÖ Sensor inventory collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.432805" elapsed="0.000504"/>
</kw>
<return>
<value>${sensor_inventory}</value>
<status status="PASS" start="2025-10-05T15:44:44.433445" elapsed="0.000066"/>
</return>
<msg time="2025-10-05T15:44:44.433757" level="INFO">${sensor_inventory} = === Sensors Directory ===
Sensors directory not found

=== Sensor Cache ===
Sensor cache not found

=== Sensor Logs ===


=== Tools Directory ===
Tools directory not found</msg>
<var>${sensor_inventory}</var>
<doc>üìä Collect Tanium sensor inventory</doc>
<status status="PASS" start="2025-10-05T15:44:44.243108" elapsed="0.190696"/>
</kw>
<kw name="Save Sensor Inventory to File" owner="tanium_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:44:44.436205" level="INFO">${timestamp} = 20251005_154444</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:44:44.434762" elapsed="0.001501"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.437026" level="INFO">${inventory_file} = results/test21_tanium_agent/data/sensor_inventory_20251005_154444.txt</msg>
<var>${inventory_file}</var>
<arg>${DATA_DIR}/sensor_inventory_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:44:44.436495" elapsed="0.000583"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.437806" level="INFO">${report} = =========================================
=== Tanium Sensor Inventory ===
=========================================
Timestamp: 20251005_154444
Target Server: alhxvdvitap01 (172.30.16.186)

=== Sensors...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== Tanium Sensor Inventory ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>${sensor_inventory}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:44.437291" elapsed="0.000579"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:44:44.460294" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test21_tanium_agent/data/sensor_inventory_20251005_154444.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test21_tanium_agent/data/sensor_inventory_20251005_154444.txt&lt;/a&gt;'.</msg>
<arg>${inventory_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:44:44.438096" elapsed="0.023629"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.462541" level="INFO">üìÑ Sensor inventory saved to: results/test21_tanium_agent/data/sensor_inventory_20251005_154444.txt</msg>
<arg>üìÑ Sensor inventory saved to: ${inventory_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.462048" elapsed="0.000721"/>
</kw>
<return>
<value>${inventory_file}</value>
<status status="PASS" start="2025-10-05T15:44:44.462980" elapsed="0.000070"/>
</return>
<msg time="2025-10-05T15:44:44.463409" level="INFO">${inventory_file} = results/test21_tanium_agent/data/sensor_inventory_20251005_154444.txt</msg>
<var>${inventory_file}</var>
<arg>${sensor_inventory}</arg>
<doc>üíæ Save sensor inventory to file</doc>
<status status="PASS" start="2025-10-05T15:44:44.434159" elapsed="0.029294"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.464026" level="INFO">üìÑ Sensor inventory saved to: results/test21_tanium_agent/data/sensor_inventory_20251005_154444.txt</msg>
<arg>üìÑ Sensor inventory saved to: ${inventory_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.463716" elapsed="0.000457"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.464553" level="INFO">‚úÖ Sensor inventory validation completed</msg>
<arg>‚úÖ Sensor inventory validation completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.464389" elapsed="0.000294"/>
</kw>
<kw name="Log Test End" owner="tanium_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.465651" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.465497" elapsed="0.000297"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.466318" level="INFO">üèÅ Completed Test: Critical - Validate Tanium Sensor Inventory | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.466014" elapsed="0.000439"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.466829" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.466636" elapsed="0.000324"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:44:44.465069" elapsed="0.002065"/>
</kw>
<doc>üìä Validate Tanium is collecting sensor inventory data</doc>
<tag>critical</tag>
<tag>inventory</tag>
<tag>sensors</tag>
<tag>tanium</tag>
<status status="PASS" start="2025-10-05T15:44:44.241200" elapsed="0.226099"/>
</test>
<test id="s1-s4-t9" name="Critical - Test Tanium Query Responsiveness" line="148">
<kw name="Log Test Start" owner="tanium_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.469212" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.469104" elapsed="0.000187"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.469493" level="INFO">üèÅ Starting Test: Critical - Test Tanium Query Responsiveness</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.469380" elapsed="0.000180"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.469726" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.469644" elapsed="0.000144"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:44:44.468888" elapsed="0.000945"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.470042" level="INFO">üîç Testing Tanium query responsiveness...</msg>
<arg>üîç Testing Tanium query responsiveness...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.469912" elapsed="0.000225"/>
</kw>
<kw name="Test Tanium Query Response" owner="tanium_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.471681" level="INFO">‚ö° Testing query responsiveness...</msg>
<arg>‚ö° Testing query responsiveness...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.470855" elapsed="0.001041"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:44.472765" level="INFO">Executing command '/opt/Tanium/TaniumClient/TaniumClient query "Get Computer Name from all machines" 2&gt;&amp;1 | head -20 || echo "Query test not available"'.</msg>
<msg time="2025-10-05T15:44:44.485009" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:44.485217" level="INFO">${output} = bash: line 1: /opt/Tanium/TaniumClient/TaniumClient: No such file or directory</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:44.472548" elapsed="0.012691"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:44.485312" elapsed="0.000045"/>
</return>
<msg time="2025-10-05T15:44:44.485518" level="INFO">${query_test} = bash: line 1: /opt/Tanium/TaniumClient/TaniumClient: No such file or directory</msg>
<var>${query_test}</var>
<arg>${TANIUM_INSTALL_DIR}/TaniumClient query "Get Computer Name from all machines" 2&gt;&amp;1 | head -20 || echo "Query test not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:44.472154" elapsed="0.013384"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:44.486173" level="INFO">Executing command 'grep -i "query|question" /opt/Tanium/TaniumClient/Logs/taniumclient.log 2&gt;/dev/null | tail -20 || echo "No query logs"'.</msg>
<msg time="2025-10-05T15:44:44.533198" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:44.533591" level="INFO">${output} = </msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:44.486071" elapsed="0.047588"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:44.536289" elapsed="0.000111"/>
</return>
<msg time="2025-10-05T15:44:44.536803" level="INFO">${last_query} = </msg>
<var>${last_query}</var>
<arg>grep -i "query\|question" ${TANIUM_LOG_DIR}/taniumclient.log 2&gt;/dev/null | tail -20 || echo "No query logs"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:44.485788" elapsed="0.051063"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:44.537892" level="INFO">Executing command 'ls -la /opt/Tanium/TaniumClient/QueryResults/ 2&gt;/dev/null || echo "Query results directory not found"'.</msg>
<msg time="2025-10-05T15:44:44.587729" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:44.587985" level="INFO">${output} = Query results directory not found</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:44.537690" elapsed="0.050323"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:44.588095" elapsed="0.000051"/>
</return>
<msg time="2025-10-05T15:44:44.588302" level="INFO">${result_cache} = Query results directory not found</msg>
<var>${result_cache}</var>
<arg>ls -la ${TANIUM_DATA_DIR}/QueryResults/ 2&gt;/dev/null || echo "Query results directory not found"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:44.537193" elapsed="0.051133"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.588989" level="INFO">${query_results} = === Query Test ===
bash: line 1: /opt/Tanium/TaniumClient/TaniumClient: No such file or directory

=== Last Query Logs ===


=== Query Results Cache ===
Query results directory not found</msg>
<var>${query_results}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Query Test ===</arg>
<arg>${query_test}</arg>
<arg>=== Last Query Logs ===</arg>
<arg>${last_query}</arg>
<arg>=== Query Results Cache ===</arg>
<arg>${result_cache}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:44.588511" elapsed="0.000524"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.589615" level="INFO">‚úÖ Query test completed</msg>
<arg>‚úÖ Query test completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.589357" elapsed="0.000415"/>
</kw>
<return>
<value>${query_results}</value>
<status status="PASS" start="2025-10-05T15:44:44.589850" elapsed="0.000044"/>
</return>
<msg time="2025-10-05T15:44:44.590064" level="INFO">${query_test} = === Query Test ===
bash: line 1: /opt/Tanium/TaniumClient/TaniumClient: No such file or directory

=== Last Query Logs ===


=== Query Results Cache ===
Query results directory not found</msg>
<var>${query_test}</var>
<doc>‚ö° Test query responsiveness</doc>
<status status="PASS" start="2025-10-05T15:44:44.470377" elapsed="0.119724"/>
</kw>
<kw name="Save Query Test Results to File" owner="tanium_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:44:44.591341" level="INFO">${timestamp} = 20251005_154444</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:44:44.591044" elapsed="0.000338"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.591651" level="INFO">${query_file} = results/test21_tanium_agent/data/query_test_20251005_154444.txt</msg>
<var>${query_file}</var>
<arg>${DATA_DIR}/query_test_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:44:44.591492" elapsed="0.000181"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.592001" level="INFO">${report} = =========================================
=== Tanium Query Responsiveness Test ===
=========================================
Timestamp: 20251005_154444
Target Server: alhxvdvitap01 (172.30.16.186)

==...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== Tanium Query Responsiveness Test ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>${query_test}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:44.591760" elapsed="0.000264"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:44:44.602174" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test21_tanium_agent/data/query_test_20251005_154444.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test21_tanium_agent/data/query_test_20251005_154444.txt&lt;/a&gt;'.</msg>
<arg>${query_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:44:44.592124" elapsed="0.010207"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.602898" level="INFO">üìÑ Query test results saved to: results/test21_tanium_agent/data/query_test_20251005_154444.txt</msg>
<arg>üìÑ Query test results saved to: ${query_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.602558" elapsed="0.000473"/>
</kw>
<return>
<value>${query_file}</value>
<status status="PASS" start="2025-10-05T15:44:44.603093" elapsed="0.000043"/>
</return>
<msg time="2025-10-05T15:44:44.603412" level="INFO">${query_file} = results/test21_tanium_agent/data/query_test_20251005_154444.txt</msg>
<var>${query_file}</var>
<arg>${query_test}</arg>
<doc>üíæ Save query test results to file</doc>
<status status="PASS" start="2025-10-05T15:44:44.590632" elapsed="0.012808"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.603824" level="INFO">üìÑ Query test results saved to: results/test21_tanium_agent/data/query_test_20251005_154444.txt</msg>
<arg>üìÑ Query test results saved to: ${query_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.603589" elapsed="0.000326"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.604168" level="INFO">‚úÖ Query responsiveness test completed</msg>
<arg>‚úÖ Query responsiveness test completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.604058" elapsed="0.000190"/>
</kw>
<kw name="Log Test End" owner="tanium_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.604950" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.604845" elapsed="0.000189"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.605305" level="INFO">üèÅ Completed Test: Critical - Test Tanium Query Responsiveness | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.605133" elapsed="0.000245"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.605620" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.605486" elapsed="0.000909"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:44:44.604517" elapsed="0.001950"/>
</kw>
<doc>‚ö° Test agent's ability to respond to Tanium queries</doc>
<tag>critical</tag>
<tag>query</tag>
<tag>responsiveness</tag>
<tag>tanium</tag>
<status status="PASS" start="2025-10-05T15:44:44.468055" elapsed="0.138470"/>
</test>
<test id="s1-s4-t10" name="Normal - Check Tanium Module Installations" line="163">
<kw name="Log Test Start" owner="tanium_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.607745" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.607623" elapsed="0.000298"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.608287" level="INFO">üèÅ Starting Test: Normal - Check Tanium Module Installations</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.608073" elapsed="0.000297"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.608594" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.608470" elapsed="0.000196"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:44:44.607380" elapsed="0.001339"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.609036" level="INFO">üîç Checking Tanium module installations...</msg>
<arg>üîç Checking Tanium module installations...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.608848" elapsed="0.000464"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.609635" level="INFO">üìã Required Modules: ['Comply', 'Detect', 'Discover', 'Patch', 'Trends']</msg>
<arg>üìã Required Modules: ${REQUIRED_TANIUM_MODULES}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.609442" elapsed="0.000298"/>
</kw>
<kw name="Check Tanium Module Installations" owner="tanium_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.611087" level="INFO">üì¶ Checking Tanium module installations...</msg>
<arg>üì¶ Checking Tanium module installations...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.610534" elapsed="0.000965"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:44.612398" level="INFO">Executing command 'ls -la /opt/Tanium/TaniumClient/Modules/ 2&gt;/dev/null || echo "Modules directory not found"'.</msg>
<msg time="2025-10-05T15:44:44.639429" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:44.639947" level="INFO">${output} = Modules directory not found</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:44.612286" elapsed="0.027771"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:44.640271" elapsed="0.000150"/>
</return>
<msg time="2025-10-05T15:44:44.640961" level="INFO">${modules_dir} = Modules directory not found</msg>
<var>${modules_dir}</var>
<arg>ls -la ${TANIUM_DATA_DIR}/Modules/ 2&gt;/dev/null || echo "Modules directory not found"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:44.611824" elapsed="0.029218"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.641932" level="INFO">${module_check} = </msg>
<var>${module_check}</var>
<arg>SEPARATOR=\n</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:44.641447" elapsed="0.000535"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:44.643778" level="INFO">Executing command 'ls /opt/Tanium/TaniumClient/Modules/Comply* 2&gt;/dev/null || echo "Comply: Not found"'.</msg>
<msg time="2025-10-05T15:44:44.691829" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:44.692136" level="INFO">${output} = Comply: Not found</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:44.643597" elapsed="0.048570"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:44.692253" elapsed="0.000049"/>
</return>
<msg time="2025-10-05T15:44:44.692446" level="INFO">${check_result} = Comply: Not found</msg>
<var>${check_result}</var>
<arg>ls ${TANIUM_DATA_DIR}/Modules/${module}* 2&gt;/dev/null || echo "${module}: Not found"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:44.642935" elapsed="0.049535"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.692844" level="INFO">${module_check} = 
Comply: Not found</msg>
<var>${module_check}</var>
<arg>SEPARATOR=\n</arg>
<arg>${module_check}</arg>
<arg>${check_result}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:44.692627" elapsed="0.000241"/>
</kw>
<var name="${module}">Comply</var>
<status status="PASS" start="2025-10-05T15:44:44.642554" elapsed="0.050350"/>
</iter>
<iter>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:44.693637" level="INFO">Executing command 'ls /opt/Tanium/TaniumClient/Modules/Detect* 2&gt;/dev/null || echo "Detect: Not found"'.</msg>
<msg time="2025-10-05T15:44:44.744059" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:44.744386" level="INFO">${output} = Detect: Not found</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:44.693526" elapsed="0.050913"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:44.744575" elapsed="0.000087"/>
</return>
<msg time="2025-10-05T15:44:44.745146" level="INFO">${check_result} = Detect: Not found</msg>
<var>${check_result}</var>
<arg>ls ${TANIUM_DATA_DIR}/Modules/${module}* 2&gt;/dev/null || echo "${module}: Not found"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:44.693161" elapsed="0.052053"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.746103" level="INFO">${module_check} = 
Comply: Not found
Detect: Not found</msg>
<var>${module_check}</var>
<arg>SEPARATOR=\n</arg>
<arg>${module_check}</arg>
<arg>${check_result}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:44.745642" elapsed="0.000514"/>
</kw>
<var name="${module}">Detect</var>
<status status="PASS" start="2025-10-05T15:44:44.693014" elapsed="0.053230"/>
</iter>
<iter>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:44.748474" level="INFO">Executing command 'ls /opt/Tanium/TaniumClient/Modules/Discover* 2&gt;/dev/null || echo "Discover: Not found"'.</msg>
<msg time="2025-10-05T15:44:44.796977" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:44.797270" level="INFO">${output} = Discover: Not found</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:44.748217" elapsed="0.049090"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:44.797406" elapsed="0.000062"/>
</return>
<msg time="2025-10-05T15:44:44.797693" level="INFO">${check_result} = Discover: Not found</msg>
<var>${check_result}</var>
<arg>ls ${TANIUM_DATA_DIR}/Modules/${module}* 2&gt;/dev/null || echo "${module}: Not found"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:44.747582" elapsed="0.050144"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.798250" level="INFO">${module_check} = 
Comply: Not found
Detect: Not found
Discover: Not found</msg>
<var>${module_check}</var>
<arg>SEPARATOR=\n</arg>
<arg>${module_check}</arg>
<arg>${check_result}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:44.797941" elapsed="0.000341"/>
</kw>
<var name="${module}">Discover</var>
<status status="PASS" start="2025-10-05T15:44:44.747288" elapsed="0.051084"/>
</iter>
<iter>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:44.799536" level="INFO">Executing command 'ls /opt/Tanium/TaniumClient/Modules/Patch* 2&gt;/dev/null || echo "Patch: Not found"'.</msg>
<msg time="2025-10-05T15:44:44.852364" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:44.852591" level="INFO">${output} = Patch: Not found</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:44.799315" elapsed="0.053306"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:44.852702" elapsed="0.000051"/>
</return>
<msg time="2025-10-05T15:44:44.852925" level="INFO">${check_result} = Patch: Not found</msg>
<var>${check_result}</var>
<arg>ls ${TANIUM_DATA_DIR}/Modules/${module}* 2&gt;/dev/null || echo "${module}: Not found"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:44.798699" elapsed="0.054254"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.853365" level="INFO">${module_check} = 
Comply: Not found
Detect: Not found
Discover: Not found
Patch: Not found</msg>
<var>${module_check}</var>
<arg>SEPARATOR=\n</arg>
<arg>${module_check}</arg>
<arg>${check_result}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:44.853123" elapsed="0.000271"/>
</kw>
<var name="${module}">Patch</var>
<status status="PASS" start="2025-10-05T15:44:44.798512" elapsed="0.054925"/>
</iter>
<iter>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:44.854207" level="INFO">Executing command 'ls /opt/Tanium/TaniumClient/Modules/Trends* 2&gt;/dev/null || echo "Trends: Not found"'.</msg>
<msg time="2025-10-05T15:44:44.904151" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:44.904552" level="INFO">${output} = Trends: Not found</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:44.854083" elapsed="0.050541"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:44.904802" elapsed="0.000089"/>
</return>
<msg time="2025-10-05T15:44:44.905149" level="INFO">${check_result} = Trends: Not found</msg>
<var>${check_result}</var>
<arg>ls ${TANIUM_DATA_DIR}/Modules/${module}* 2&gt;/dev/null || echo "${module}: Not found"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:44.853703" elapsed="0.051477"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.905780" level="INFO">${module_check} = 
Comply: Not found
Detect: Not found
Discover: Not found
Patch: Not found
Trends: Not found</msg>
<var>${module_check}</var>
<arg>SEPARATOR=\n</arg>
<arg>${module_check}</arg>
<arg>${check_result}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:44.905433" elapsed="0.000380"/>
</kw>
<var name="${module}">Trends</var>
<status status="PASS" start="2025-10-05T15:44:44.853546" elapsed="0.052317"/>
</iter>
<var>${module}</var>
<value>@{REQUIRED_TANIUM_MODULES}</value>
<status status="PASS" start="2025-10-05T15:44:44.642146" elapsed="0.263765"/>
</for>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:44.906670" level="INFO">Executing command 'grep -i "module" /opt/Tanium/TaniumClient/Logs/taniumclient.log 2&gt;/dev/null | tail -20 || echo "No module logs"'.</msg>
<msg time="2025-10-05T15:44:44.956403" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:44.956653" level="INFO">${output} = </msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:44.906520" elapsed="0.050167"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:44.956779" elapsed="0.000056"/>
</return>
<msg time="2025-10-05T15:44:44.957058" level="INFO">${module_logs} = </msg>
<var>${module_logs}</var>
<arg>grep -i "module" ${TANIUM_LOG_DIR}/taniumclient.log 2&gt;/dev/null | tail -20 || echo "No module logs"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:44.906157" elapsed="0.050928"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.957595" level="INFO">${module_status} = === Modules Directory ===
Modules directory not found

=== Required Module Check ===

Comply: Not found
Detect: Not found
Discover: Not found
Patch: Not found
Trends: Not found

=== Module Logs ===
</msg>
<var>${module_status}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Modules Directory ===</arg>
<arg>${modules_dir}</arg>
<arg>=== Required Module Check ===</arg>
<arg>${module_check}</arg>
<arg>=== Module Logs ===</arg>
<arg>${module_logs}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:44.957278" elapsed="0.000345"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.957910" level="INFO">‚úÖ Module status collected</msg>
<arg>‚úÖ Module status collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.957762" elapsed="0.000284"/>
</kw>
<return>
<value>${module_status}</value>
<status status="PASS" start="2025-10-05T15:44:44.958108" elapsed="0.000042"/>
</return>
<msg time="2025-10-05T15:44:44.958294" level="INFO">${module_status} = === Modules Directory ===
Modules directory not found

=== Required Module Check ===

Comply: Not found
Detect: Not found
Discover: Not found
Patch: Not found
Trends: Not found

=== Module Logs ===
</msg>
<var>${module_status}</var>
<doc>üì¶ Check installed Tanium modules</doc>
<status status="PASS" start="2025-10-05T15:44:44.610078" elapsed="0.348244"/>
</kw>
<kw name="Save Module Status to File" owner="tanium_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:44:44.960026" level="INFO">${timestamp} = 20251005_154444</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:44:44.959736" elapsed="0.000339"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.960479" level="INFO">${module_file} = results/test21_tanium_agent/data/module_status_20251005_154444.txt</msg>
<var>${module_file}</var>
<arg>${DATA_DIR}/module_status_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:44:44.960238" elapsed="0.000270"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.961218" level="INFO">${report} = =========================================
=== Tanium Module Installations ===
=========================================
Timestamp: 20251005_154444
Target Server: alhxvdvitap01 (172.30.16.186)
Required...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== Tanium Module Installations ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>Required Modules: ${REQUIRED_TANIUM_MODULES}</arg>
<arg>${module_status}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:44.960645" elapsed="0.000604"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:44:44.980428" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test21_tanium_agent/data/module_status_20251005_154444.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test21_tanium_agent/data/module_status_20251005_154444.txt&lt;/a&gt;'.</msg>
<arg>${module_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:44:44.961378" elapsed="0.019275"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.981398" level="INFO">üìÑ Module status saved to: results/test21_tanium_agent/data/module_status_20251005_154444.txt</msg>
<arg>üìÑ Module status saved to: ${module_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.980972" elapsed="0.000616"/>
</kw>
<return>
<value>${module_file}</value>
<status status="PASS" start="2025-10-05T15:44:44.981692" elapsed="0.000075"/>
</return>
<msg time="2025-10-05T15:44:44.982009" level="INFO">${module_file} = results/test21_tanium_agent/data/module_status_20251005_154444.txt</msg>
<var>${module_file}</var>
<arg>${module_status}</arg>
<doc>üíæ Save module status to file</doc>
<status status="PASS" start="2025-10-05T15:44:44.959357" elapsed="0.022695"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.982538" level="INFO">üìÑ Module status saved to: results/test21_tanium_agent/data/module_status_20251005_154444.txt</msg>
<arg>üìÑ Module status saved to: ${module_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.982284" elapsed="0.000336"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.983061" level="INFO">‚úÖ Module installation check completed</msg>
<arg>‚úÖ Module installation check completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.982777" elapsed="0.000360"/>
</kw>
<kw name="Log Test End" owner="tanium_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.984141" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.983943" elapsed="0.000292"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.984796" level="INFO">üèÅ Completed Test: Normal - Check Tanium Module Installations | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.984409" elapsed="0.000818"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.985633" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.985420" elapsed="0.000343"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:44:44.983493" elapsed="0.002379"/>
</kw>
<doc>üì¶ Verify required Tanium modules are installed</doc>
<tag>modules</tag>
<tag>normal</tag>
<tag>packages</tag>
<tag>tanium</tag>
<status status="PASS" start="2025-10-05T15:44:44.606756" elapsed="0.379176"/>
</test>
<test id="s1-s4-t11" name="Normal - Validate Tanium Agent Logs" line="179">
<kw name="Log Test Start" owner="tanium_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.987693" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.987551" elapsed="0.000252"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.988072" level="INFO">üèÅ Starting Test: Normal - Validate Tanium Agent Logs</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.987928" elapsed="0.000295"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.988520" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.988382" elapsed="0.000222"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:44:44.987121" elapsed="0.001556"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.988880" level="INFO">üîç Validating Tanium agent logs...</msg>
<arg>üîç Validating Tanium agent logs...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.988779" elapsed="0.000853"/>
</kw>
<kw name="Collect Tanium Agent Logs" owner="tanium_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:44.990489" level="INFO">üìã Collecting agent logs...</msg>
<arg>üìã Collecting agent logs...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:44.990276" elapsed="0.000379"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:44.991952" level="INFO">Executing command 'tail -200 /opt/Tanium/TaniumClient/Logs/taniumclient.log 2&gt;/dev/null || echo "taniumclient.log not found"'.</msg>
<msg time="2025-10-05T15:44:45.011591" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:45.012412" level="INFO">${output} = taniumclient.log not found</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:44.991810" elapsed="0.020651"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:45.012559" elapsed="0.000061"/>
</return>
<msg time="2025-10-05T15:44:45.012839" level="INFO">${client_log} = taniumclient.log not found</msg>
<var>${client_log}</var>
<arg>tail -${LOG_LINES_TO_COLLECT} ${TANIUM_LOG_DIR}/taniumclient.log 2&gt;/dev/null || echo "taniumclient.log not found"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:44.991075" elapsed="0.021799"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:45.013974" level="INFO">Executing command 'tail -200 /opt/Tanium/TaniumClient/Logs/taniumclienterrors.log 2&gt;/dev/null || echo "No error log"'.</msg>
<msg time="2025-10-05T15:44:45.059868" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:45.060089" level="INFO">${output} = No error log</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:45.013785" elapsed="0.046329"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:45.060197" elapsed="0.000053"/>
</return>
<msg time="2025-10-05T15:44:45.060442" level="INFO">${error_log} = No error log</msg>
<var>${error_log}</var>
<arg>tail -${LOG_LINES_TO_COLLECT} ${TANIUM_LOG_DIR}/taniumclienterrors.log 2&gt;/dev/null || echo "No error log"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:45.013221" elapsed="0.047246"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:45.061216" level="INFO">Executing command 'ls -lh /opt/Tanium/TaniumClient/Logs/ 2&gt;/dev/null || echo "Log directory not found"'.</msg>
<msg time="2025-10-05T15:44:45.108474" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:45.108854" level="INFO">${output} = Log directory not found</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:45.061045" elapsed="0.047851"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:45.109017" elapsed="0.000073"/>
</return>
<msg time="2025-10-05T15:44:45.109296" level="INFO">${log_files} = Log directory not found</msg>
<var>${log_files}</var>
<arg>ls -lh ${TANIUM_LOG_DIR}/ 2&gt;/dev/null || echo "Log directory not found"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:45.060701" elapsed="0.048625"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.110010" level="INFO">${agent_logs} = === Log Files ===
Log directory not found

=== TaniumClient Log (Last 200 lines) ===
taniumclient.log not found

=== TaniumClient Errors Log ===
No error log</msg>
<var>${agent_logs}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Log Files ===</arg>
<arg>${log_files}</arg>
<arg>=== TaniumClient Log (Last ${LOG_LINES_TO_COLLECT} lines) ===</arg>
<arg>${client_log}</arg>
<arg>=== TaniumClient Errors Log ===</arg>
<arg>${error_log}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:45.109574" elapsed="0.000465"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.110378" level="INFO">‚úÖ Agent logs collected</msg>
<arg>‚úÖ Agent logs collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.110190" elapsed="0.000351"/>
</kw>
<return>
<value>${agent_logs}</value>
<status status="PASS" start="2025-10-05T15:44:45.110625" elapsed="0.000058"/>
</return>
<msg time="2025-10-05T15:44:45.110964" level="INFO">${agent_logs} = === Log Files ===
Log directory not found

=== TaniumClient Log (Last 200 lines) ===
taniumclient.log not found

=== TaniumClient Errors Log ===
No error log</msg>
<var>${agent_logs}</var>
<doc>üìã Collect Tanium agent logs</doc>
<status status="PASS" start="2025-10-05T15:44:44.989915" elapsed="0.121082"/>
</kw>
<kw name="Save Agent Logs to File" owner="tanium_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:44:45.112429" level="INFO">${timestamp} = 20251005_154445</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:44:45.111748" elapsed="0.000725"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.112924" level="INFO">${log_file} = results/test21_tanium_agent/data/agent_logs_20251005_154445.txt</msg>
<var>${log_file}</var>
<arg>${DATA_DIR}/agent_logs_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:44:45.112646" elapsed="0.000318"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.113554" level="INFO">${report} = =========================================
=== Tanium Agent Logs ===
=========================================
Timestamp: 20251005_154445
Target Server: alhxvdvitap01 (172.30.16.186)
Log Directory: /op...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== Tanium Agent Logs ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>Log Directory: ${TANIUM_LOG_DIR}</arg>
<arg>${agent_logs}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:45.113128" elapsed="0.000462"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:44:45.120298" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test21_tanium_agent/data/agent_logs_20251005_154445.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test21_tanium_agent/data/agent_logs_20251005_154445.txt&lt;/a&gt;'.</msg>
<arg>${log_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:44:45.113764" elapsed="0.006743"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.121055" level="INFO">üìÑ Agent logs saved to: results/test21_tanium_agent/data/agent_logs_20251005_154445.txt</msg>
<arg>üìÑ Agent logs saved to: ${log_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.120790" elapsed="0.000369"/>
</kw>
<return>
<value>${log_file}</value>
<status status="PASS" start="2025-10-05T15:44:45.121215" elapsed="0.000042"/>
</return>
<msg time="2025-10-05T15:44:45.121648" level="INFO">${log_file} = results/test21_tanium_agent/data/agent_logs_20251005_154445.txt</msg>
<var>${log_file}</var>
<arg>${agent_logs}</arg>
<doc>üíæ Save agent logs to file</doc>
<status status="PASS" start="2025-10-05T15:44:45.111370" elapsed="0.010314"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.122065" level="INFO">üìÑ Agent logs saved to: results/test21_tanium_agent/data/agent_logs_20251005_154445.txt</msg>
<arg>üìÑ Agent logs saved to: ${log_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.121897" elapsed="0.000306"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.122992" level="INFO">‚úÖ Agent logs collected</msg>
<arg>‚úÖ Agent logs collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.122756" elapsed="0.000346"/>
</kw>
<kw name="Log Test End" owner="tanium_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.124078" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.123929" elapsed="0.000258"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.124552" level="INFO">üèÅ Completed Test: Normal - Validate Tanium Agent Logs | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.124321" elapsed="0.000330"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.124948" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.124786" elapsed="0.000261"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:44:45.123531" elapsed="0.001606"/>
</kw>
<doc>üìã Collect and validate Tanium agent logs</doc>
<tag>logs</tag>
<tag>normal</tag>
<tag>tanium</tag>
<tag>validation</tag>
<status status="PASS" start="2025-10-05T15:44:44.986269" elapsed="0.138961"/>
</test>
<test id="s1-s4-t12" name="Normal - Check Tanium Agent Last Contact Time" line="194">
<kw name="Log Test Start" owner="tanium_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.126528" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.126416" elapsed="0.000194"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.126856" level="INFO">üèÅ Starting Test: Normal - Check Tanium Agent Last Contact Time</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.126718" elapsed="0.000219"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.127123" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.127037" elapsed="0.000162"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:44:45.126149" elapsed="0.001120"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.127463" level="INFO">üîç Checking agent last contact time...</msg>
<arg>üîç Checking agent last contact time...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.127377" elapsed="0.000159"/>
</kw>
<kw name="Check Agent Last Contact Time" owner="tanium_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.127942" level="INFO">‚è±Ô∏è Checking last contact time...</msg>
<arg>‚è±Ô∏è Checking last contact time...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.127865" elapsed="0.000160"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:45.128581" level="INFO">Executing command 'grep -i "server.*connect|registration.*success" /opt/Tanium/TaniumClient/Logs/taniumclient.log 2&gt;/dev/null | tail -5 || echo "No contact logs found"'.</msg>
<msg time="2025-10-05T15:44:45.163451" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:45.163821" level="INFO">${output} = </msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:45.128430" elapsed="0.035443"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:45.163998" elapsed="0.000087"/>
</return>
<msg time="2025-10-05T15:44:45.164401" level="INFO">${last_contact} = </msg>
<var>${last_contact}</var>
<arg>grep -i "server.*connect\|registration.*success" ${TANIUM_LOG_DIR}/taniumclient.log 2&gt;/dev/null | tail -5 || echo "No contact logs found"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:45.128159" elapsed="0.036295"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:45.165744" level="INFO">Executing command '/opt/Tanium/TaniumClient/TaniumClient status 2&gt;&amp;1 | grep -i "server|connect" || echo "Connection status not available"'.</msg>
<msg time="2025-10-05T15:44:45.215611" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:45.215850" level="INFO">${output} = Connection status not available</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:45.165487" elapsed="0.050394"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:45.215970" elapsed="0.000054"/>
</return>
<msg time="2025-10-05T15:44:45.216193" level="INFO">${connection_status} = Connection status not available</msg>
<var>${connection_status}</var>
<arg>${TANIUM_INSTALL_DIR}/TaniumClient status 2&gt;&amp;1 | grep -i "server\|connect" || echo "Connection status not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:45.164906" elapsed="0.051313"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.216687" level="INFO">${last_contact_info} = === Last Contact Logs ===


=== Connection Status ===
Connection status not available</msg>
<var>${last_contact_info}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Last Contact Logs ===</arg>
<arg>${last_contact}</arg>
<arg>=== Connection Status ===</arg>
<arg>${connection_status}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:45.216404" elapsed="0.000310"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.217207" level="INFO">‚è±Ô∏è Last contact info collected</msg>
<arg>‚è±Ô∏è Last contact info collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.216852" elapsed="0.000541"/>
</kw>
<return>
<value>${last_contact_info}</value>
<status status="PASS" start="2025-10-05T15:44:45.217498" elapsed="0.000062"/>
</return>
<msg time="2025-10-05T15:44:45.217816" level="INFO">${last_contact} = === Last Contact Logs ===


=== Connection Status ===
Connection status not available</msg>
<var>${last_contact}</var>
<doc>‚è±Ô∏è Check agent last contact with server</doc>
<status status="PASS" start="2025-10-05T15:44:45.127694" elapsed="0.090164"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.219410" level="INFO">‚è±Ô∏è Last Contact: === Last Contact Logs ===


=== Connection Status ===
Connection status not available</msg>
<arg>‚è±Ô∏è Last Contact: ${last_contact}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.218903" elapsed="0.000694"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.220069" level="INFO">‚úÖ Last contact time checked</msg>
<arg>‚úÖ Last contact time checked</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.219807" elapsed="0.000568"/>
</kw>
<kw name="Log Test End" owner="tanium_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.221558" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.221142" elapsed="0.000536"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.222087" level="INFO">üèÅ Completed Test: Normal - Check Tanium Agent Last Contact Time | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.221831" elapsed="0.000361"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.222458" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.222321" elapsed="0.000227"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:44:45.220691" elapsed="0.001931"/>
</kw>
<doc>‚è±Ô∏è Verify agent's last contact with Tanium server</doc>
<tag>contact</tag>
<tag>normal</tag>
<tag>tanium</tag>
<tag>time</tag>
<status status="PASS" start="2025-10-05T15:44:45.125515" elapsed="0.097150"/>
</test>
<test id="s1-s4-t13" name="Normal - Validate Tanium Agent Network Settings" line="206">
<kw name="Log Test Start" owner="tanium_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.224006" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.223790" elapsed="0.000343"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.224704" level="INFO">üèÅ Starting Test: Normal - Validate Tanium Agent Network Settings</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.224432" elapsed="0.000397"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.225289" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.225004" elapsed="0.000427"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:44:45.223515" elapsed="0.002012"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.225897" level="INFO">üîç Validating agent network settings...</msg>
<arg>üîç Validating agent network settings...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.225705" elapsed="0.000479"/>
</kw>
<kw name="Collect Agent Network Settings" owner="tanium_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.227565" level="INFO">üåê Collecting network settings...</msg>
<arg>üåê Collecting network settings...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.227325" elapsed="0.000398"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:45.228561" level="INFO">Executing command '/opt/Tanium/TaniumClient/TaniumClient config get ServerName 2&gt;&amp;1 || echo "ServerName not available"'.</msg>
<msg time="2025-10-05T15:44:45.268209" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:45.268668" level="INFO">${output} = bash: line 1: /opt/Tanium/TaniumClient/TaniumClient: No such file or directory
ServerName not available</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:45.228409" elapsed="0.040303"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:45.268862" elapsed="0.000118"/>
</return>
<msg time="2025-10-05T15:44:45.269345" level="INFO">${server_name} = bash: line 1: /opt/Tanium/TaniumClient/TaniumClient: No such file or directory
ServerName not available</msg>
<var>${server_name}</var>
<arg>${TANIUM_INSTALL_DIR}/TaniumClient config get ServerName 2&gt;&amp;1 || echo "ServerName not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:45.227941" elapsed="0.041465"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:45.270747" level="INFO">Executing command '/opt/Tanium/TaniumClient/TaniumClient config get ServerPort 2&gt;&amp;1 || echo "ServerPort not available"'.</msg>
<msg time="2025-10-05T15:44:45.316534" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:45.316856" level="INFO">${output} = bash: line 1: /opt/Tanium/TaniumClient/TaniumClient: No such file or directory
ServerPort not available</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:45.270487" elapsed="0.046425"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:45.317021" elapsed="0.000060"/>
</return>
<msg time="2025-10-05T15:44:45.317274" level="INFO">${server_port} = bash: line 1: /opt/Tanium/TaniumClient/TaniumClient: No such file or directory
ServerPort not available</msg>
<var>${server_port}</var>
<arg>${TANIUM_INSTALL_DIR}/TaniumClient config get ServerPort 2&gt;&amp;1 || echo "ServerPort not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:45.269869" elapsed="0.047435"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:45.318406" level="INFO">Executing command '/opt/Tanium/TaniumClient/TaniumClient config get ProxyServer 2&gt;&amp;1 || echo "No proxy configured"'.</msg>
<msg time="2025-10-05T15:44:45.367851" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:45.368195" level="INFO">${output} = bash: line 1: /opt/Tanium/TaniumClient/TaniumClient: No such file or directory
No proxy configured</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:45.318122" elapsed="0.050130"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:45.369170" elapsed="0.000068"/>
</return>
<msg time="2025-10-05T15:44:45.369459" level="INFO">${proxy_settings} = bash: line 1: /opt/Tanium/TaniumClient/TaniumClient: No such file or directory
No proxy configured</msg>
<var>${proxy_settings}</var>
<arg>${TANIUM_INSTALL_DIR}/TaniumClient config get ProxyServer 2&gt;&amp;1 || echo "No proxy configured"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:45.317579" elapsed="0.051910"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:45.370296" level="INFO">Executing command '/opt/Tanium/TaniumClient/TaniumClient config get ListenPort 2&gt;&amp;1 || echo "ListenPort not available"'.</msg>
<msg time="2025-10-05T15:44:45.416157" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:45.416433" level="INFO">${output} = bash: line 1: /opt/Tanium/TaniumClient/TaniumClient: No such file or directory
ListenPort not available</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:45.370153" elapsed="0.046323"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:45.416575" elapsed="0.000062"/>
</return>
<msg time="2025-10-05T15:44:45.416838" level="INFO">${listen_port} = bash: line 1: /opt/Tanium/TaniumClient/TaniumClient: No such file or directory
ListenPort not available</msg>
<var>${listen_port}</var>
<arg>${TANIUM_INSTALL_DIR}/TaniumClient config get ListenPort 2&gt;&amp;1 || echo "ListenPort not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:45.369716" elapsed="0.047158"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.417852" level="INFO">${network_settings} = === Server Name ===
bash: line 1: /opt/Tanium/TaniumClient/TaniumClient: No such file or directory
ServerName not available

=== Server Port ===
bash: line 1: /opt/Tanium/TaniumClient/TaniumClient: No...</msg>
<var>${network_settings}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Server Name ===</arg>
<arg>${server_name}</arg>
<arg>=== Server Port ===</arg>
<arg>${server_port}</arg>
<arg>=== Proxy Settings ===</arg>
<arg>${proxy_settings}</arg>
<arg>=== Listen Port ===</arg>
<arg>${listen_port}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:45.417245" elapsed="0.000659"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.418324" level="INFO">‚úÖ Network settings collected</msg>
<arg>‚úÖ Network settings collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.418138" elapsed="0.000358"/>
</kw>
<return>
<value>${network_settings}</value>
<status status="PASS" start="2025-10-05T15:44:45.418577" elapsed="0.000050"/>
</return>
<msg time="2025-10-05T15:44:45.418835" level="INFO">${network_settings} = === Server Name ===
bash: line 1: /opt/Tanium/TaniumClient/TaniumClient: No such file or directory
ServerName not available

=== Server Port ===
bash: line 1: /opt/Tanium/TaniumClient/TaniumClient: No...</msg>
<var>${network_settings}</var>
<doc>üåê Collect agent network settings</doc>
<status status="PASS" start="2025-10-05T15:44:45.226794" elapsed="0.192087"/>
</kw>
<kw name="Save Network Settings to File" owner="tanium_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:44:45.420045" level="INFO">${timestamp} = 20251005_154445</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:44:45.419794" elapsed="0.000298"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.420407" level="INFO">${network_file} = results/test21_tanium_agent/data/network_settings_20251005_154445.txt</msg>
<var>${network_file}</var>
<arg>${DATA_DIR}/network_settings_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:44:45.420216" elapsed="0.000217"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.420902" level="INFO">${report} = =========================================
=== Tanium Agent Network Settings ===
=========================================
Timestamp: 20251005_154445
Target Server: alhxvdvitap01 (172.30.16.186)

=== S...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== Tanium Agent Network Settings ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>${network_settings}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:45.420581" elapsed="0.000347"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:44:45.440261" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test21_tanium_agent/data/network_settings_20251005_154445.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test21_tanium_agent/data/network_settings_20251005_154445.txt&lt;/a&gt;'.</msg>
<arg>${network_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:44:45.421047" elapsed="0.019408"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.441344" level="INFO">üìÑ Network settings saved to: results/test21_tanium_agent/data/network_settings_20251005_154445.txt</msg>
<arg>üìÑ Network settings saved to: ${network_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.440782" elapsed="0.000796"/>
</kw>
<return>
<value>${network_file}</value>
<status status="PASS" start="2025-10-05T15:44:45.441754" elapsed="0.000087"/>
</return>
<msg time="2025-10-05T15:44:45.442268" level="INFO">${network_file} = results/test21_tanium_agent/data/network_settings_20251005_154445.txt</msg>
<var>${network_file}</var>
<arg>${network_settings}</arg>
<doc>üíæ Save network settings to file</doc>
<status status="PASS" start="2025-10-05T15:44:45.419290" elapsed="0.023031"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.442917" level="INFO">üìÑ Network settings saved to: results/test21_tanium_agent/data/network_settings_20251005_154445.txt</msg>
<arg>üìÑ Network settings saved to: ${network_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.442637" elapsed="0.000391"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.443400" level="INFO">‚úÖ Network settings validated</msg>
<arg>‚úÖ Network settings validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.443230" elapsed="0.000300"/>
</kw>
<kw name="Log Test End" owner="tanium_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.444151" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.444052" elapsed="0.000181"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.444608" level="INFO">üèÅ Completed Test: Normal - Validate Tanium Agent Network Settings | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.444327" elapsed="0.001268"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.445914" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.445745" elapsed="0.000275"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:44:45.443772" elapsed="0.002318"/>
</kw>
<doc>üåê Validate agent network configuration</doc>
<tag>network</tag>
<tag>normal</tag>
<tag>settings</tag>
<tag>tanium</tag>
<status status="PASS" start="2025-10-05T15:44:45.222951" elapsed="0.223182"/>
</test>
<test id="s1-s4-t14" name="Normal - Check Tanium Agent CPU and Memory Usage" line="221">
<kw name="Log Test Start" owner="tanium_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.447493" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.447371" elapsed="0.000219"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.447877" level="INFO">üèÅ Starting Test: Normal - Check Tanium Agent CPU and Memory Usage</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.447721" elapsed="0.000265"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.448204" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.448081" elapsed="0.000195"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:44:45.447002" elapsed="0.001321"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.448500" level="INFO">üîç Checking agent CPU and memory usage...</msg>
<arg>üîç Checking agent CPU and memory usage...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.448410" elapsed="0.000164"/>
</kw>
<kw name="Check Agent Resource Usage" owner="tanium_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.449669" level="INFO">üíª Checking resource usage...</msg>
<arg>üíª Checking resource usage...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.449152" elapsed="0.000966"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:45.451968" level="INFO">Executing command 'ps aux | grep -i tanium | grep -v grep || echo "No Tanium processes"'.</msg>
<msg time="2025-10-05T15:44:45.474220" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:45.474567" level="INFO">${output} = sac        13084 17.1  1.3 640324 109220 pts/0   Sl+  15:44   0:03 python3 -m robot --variable SSH_USERNAME:sac --variable SSH_PASSWORD:sac --variable TARGET_HOSTNAME:alhxvdvitap01 --variable TEST_SUI...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:45.451690" elapsed="0.022921"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:45.474702" elapsed="0.000055"/>
</return>
<msg time="2025-10-05T15:44:45.475033" level="INFO">${resource_usage} = sac        13084 17.1  1.3 640324 109220 pts/0   Sl+  15:44   0:03 python3 -m robot --variable SSH_USERNAME:sac --variable SSH_PASSWORD:sac --variable TARGET_HOSTNAME:alhxvdvitap01 --variable TEST_SUI...</msg>
<var>${resource_usage}</var>
<arg>ps aux | grep -i tanium | grep -v grep || echo "No Tanium processes"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:45.450476" elapsed="0.024585"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:45.475936" level="INFO">Executing command 'top -b -n 1 | grep -i tanium || echo "Top output not available"'.</msg>
<msg time="2025-10-05T15:44:45.732989" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:45.733212" level="INFO">${output} = Top output not available</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:45.475781" elapsed="0.257455"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:45.733330" elapsed="0.000065"/>
</return>
<msg time="2025-10-05T15:44:45.733599" level="INFO">${top_output} = Top output not available</msg>
<var>${top_output}</var>
<arg>top -b -n 1 | grep -i tanium || echo "Top output not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:45.475379" elapsed="0.258247"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.734362" level="INFO">${resource_info} = === Tanium Process Resources (ps) ===
sac        13084 17.1  1.3 640324 109220 pts/0   Sl+  15:44   0:03 python3 -m robot --variable SSH_USERNAME:sac --variable SSH_PASSWORD:sac --variable TARGET_HOST...</msg>
<var>${resource_info}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Tanium Process Resources (ps) ===</arg>
<arg>${resource_usage}</arg>
<arg>=== Top Output ===</arg>
<arg>${top_output}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:45.733868" elapsed="0.000595"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.735419" level="INFO">‚úÖ Resource usage collected</msg>
<arg>‚úÖ Resource usage collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.734907" elapsed="0.000767"/>
</kw>
<return>
<value>${resource_info}</value>
<status status="PASS" start="2025-10-05T15:44:45.735791" elapsed="0.000078"/>
</return>
<msg time="2025-10-05T15:44:45.736145" level="INFO">${resource_usage} = === Tanium Process Resources (ps) ===
sac        13084 17.1  1.3 640324 109220 pts/0   Sl+  15:44   0:03 python3 -m robot --variable SSH_USERNAME:sac --variable SSH_PASSWORD:sac --variable TARGET_HOST...</msg>
<var>${resource_usage}</var>
<doc>üíª Check agent CPU and memory usage</doc>
<status status="PASS" start="2025-10-05T15:44:45.448726" elapsed="0.287473"/>
</kw>
<kw name="Save Resource Usage to File" owner="tanium_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:44:45.737431" level="INFO">${timestamp} = 20251005_154445</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:44:45.737128" elapsed="0.000333"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.737908" level="INFO">${resource_file} = results/test21_tanium_agent/data/resource_usage_20251005_154445.txt</msg>
<var>${resource_file}</var>
<arg>${DATA_DIR}/resource_usage_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:44:45.737618" elapsed="0.000917"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.739083" level="INFO">${report} = =========================================
=== Tanium Agent Resource Usage ===
=========================================
Timestamp: 20251005_154445
Target Server: alhxvdvitap01 (172.30.16.186)

=== Tan...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== Tanium Agent Resource Usage ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>${resource_usage}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:45.738692" elapsed="0.000588"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:44:45.746739" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test21_tanium_agent/data/resource_usage_20251005_154445.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test21_tanium_agent/data/resource_usage_20251005_154445.txt&lt;/a&gt;'.</msg>
<arg>${resource_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:44:45.739607" elapsed="0.007318"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.747484" level="INFO">üìÑ Resource usage saved to: results/test21_tanium_agent/data/resource_usage_20251005_154445.txt</msg>
<arg>üìÑ Resource usage saved to: ${resource_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.747112" elapsed="0.000495"/>
</kw>
<return>
<value>${resource_file}</value>
<status status="PASS" start="2025-10-05T15:44:45.747671" elapsed="0.000040"/>
</return>
<msg time="2025-10-05T15:44:45.747862" level="INFO">${resource_file} = results/test21_tanium_agent/data/resource_usage_20251005_154445.txt</msg>
<var>${resource_file}</var>
<arg>${resource_usage}</arg>
<doc>üíæ Save resource usage to file</doc>
<status status="PASS" start="2025-10-05T15:44:45.736592" elapsed="0.011294"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.788479" level="INFO">üìÑ Resource usage saved to: results/test21_tanium_agent/data/resource_usage_20251005_154445.txt</msg>
<arg>üìÑ Resource usage saved to: ${resource_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.748020" elapsed="0.040751"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.789590" level="INFO">‚úÖ Resource usage checked</msg>
<arg>‚úÖ Resource usage checked</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.789192" elapsed="0.000617"/>
</kw>
<kw name="Log Test End" owner="tanium_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.791056" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.790880" elapsed="0.000323"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.791483" level="INFO">üèÅ Completed Test: Normal - Check Tanium Agent CPU and Memory Usage | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.791318" elapsed="0.000254"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.791791" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.791675" elapsed="0.000199"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:44:45.790329" elapsed="0.001627"/>
</kw>
<doc>üíª Check agent's resource usage</doc>
<tag>normal</tag>
<tag>performance</tag>
<tag>resources</tag>
<tag>tanium</tag>
<status status="PASS" start="2025-10-05T15:44:45.446405" elapsed="0.345593"/>
</test>
<test id="s1-s4-t15" name="Normal - Validate Tanium Agent Firewall Rules" line="236">
<kw name="Log Test Start" owner="tanium_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.793135" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.793017" elapsed="0.000213"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.793517" level="INFO">üèÅ Starting Test: Normal - Validate Tanium Agent Firewall Rules</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.793363" elapsed="0.000242"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.793822" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.793719" elapsed="0.000183"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:44:45.792759" elapsed="0.001215"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.794209" level="INFO">üîç Validating firewall rules for Tanium...</msg>
<arg>üîç Validating firewall rules for Tanium...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.794100" elapsed="0.000225"/>
</kw>
<kw name="Check Tanium Firewall Rules" owner="tanium_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.795153" level="INFO">üî• Checking firewall rules...</msg>
<arg>üî• Checking firewall rules...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.794973" elapsed="0.000352"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:45.796282" level="INFO">Executing command 'iptables -L -n | grep 17472 2&gt;&amp;1 || echo "No iptables rules for Tanium port"'.</msg>
<msg time="2025-10-05T15:44:45.808898" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:45.809171" level="INFO">${output} = No iptables rules for Tanium port</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:45.796047" elapsed="0.013225"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:45.809420" elapsed="0.000091"/>
</return>
<msg time="2025-10-05T15:44:45.809869" level="INFO">${iptables} = No iptables rules for Tanium port</msg>
<var>${iptables}</var>
<arg>iptables -L -n | grep ${TANIUM_SERVER_PORT} 2&gt;&amp;1 || echo "No iptables rules for Tanium port"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:45.795574" elapsed="0.015366"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:45.812208" level="INFO">Executing command 'firewall-cmd --list-all 2&gt;&amp;1 || echo "firewalld not active"'.</msg>
<msg time="2025-10-05T15:44:45.859819" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:45.860105" level="INFO">${output} = bash: line 1: firewall-cmd: command not found
firewalld not active</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:45.811985" elapsed="0.048182"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:45.860300" elapsed="0.000104"/>
</return>
<msg time="2025-10-05T15:44:45.860741" level="INFO">${firewalld} = bash: line 1: firewall-cmd: command not found
firewalld not active</msg>
<var>${firewalld}</var>
<arg>firewall-cmd --list-all 2&gt;&amp;1 || echo "firewalld not active"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:45.811445" elapsed="0.049358"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.861925" level="INFO">${firewall_rules} = === iptables (Port 17472) ===
No iptables rules for Tanium port

=== firewalld ===
bash: line 1: firewall-cmd: command not found
firewalld not active</msg>
<var>${firewall_rules}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== iptables (Port ${TANIUM_SERVER_PORT}) ===</arg>
<arg>${iptables}</arg>
<arg>=== firewalld ===</arg>
<arg>${firewalld}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:45.861154" elapsed="0.000842"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.862653" level="INFO">‚úÖ Firewall rules collected</msg>
<arg>‚úÖ Firewall rules collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.862335" elapsed="0.000533"/>
</kw>
<return>
<value>${firewall_rules}</value>
<status status="PASS" start="2025-10-05T15:44:45.862963" elapsed="0.000061"/>
</return>
<msg time="2025-10-05T15:44:45.863306" level="INFO">${firewall_rules} = === iptables (Port 17472) ===
No iptables rules for Tanium port

=== firewalld ===
bash: line 1: firewall-cmd: command not found
firewalld not active</msg>
<var>${firewall_rules}</var>
<doc>üî• Check firewall rules for Tanium</doc>
<status status="PASS" start="2025-10-05T15:44:45.794613" elapsed="0.068720"/>
</kw>
<kw name="Save Firewall Rules to File" owner="tanium_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:44:45.864576" level="INFO">${timestamp} = 20251005_154445</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:44:45.864358" elapsed="0.000247"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.864928" level="INFO">${firewall_file} = results/test21_tanium_agent/data/firewall_rules_20251005_154445.txt</msg>
<var>${firewall_file}</var>
<arg>${DATA_DIR}/firewall_rules_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:44:45.864720" elapsed="0.000235"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.865337" level="INFO">${report} = =========================================
=== Tanium Firewall Rules ===
=========================================
Timestamp: 20251005_154445
Target Server: alhxvdvitap01 (172.30.16.186)
Expected Port:...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== Tanium Firewall Rules ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>Expected Port: ${TANIUM_SERVER_PORT}</arg>
<arg>${firewall_rules}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:45.865057" elapsed="0.000302"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:44:45.873011" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test21_tanium_agent/data/firewall_rules_20251005_154445.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test21_tanium_agent/data/firewall_rules_20251005_154445.txt&lt;/a&gt;'.</msg>
<arg>${firewall_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:44:45.865459" elapsed="0.007780"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.874192" level="INFO">üìÑ Firewall rules saved to: results/test21_tanium_agent/data/firewall_rules_20251005_154445.txt</msg>
<arg>üìÑ Firewall rules saved to: ${firewall_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.873543" elapsed="0.001089"/>
</kw>
<return>
<value>${firewall_file}</value>
<status status="PASS" start="2025-10-05T15:44:45.874769" elapsed="0.000083"/>
</return>
<msg time="2025-10-05T15:44:45.875096" level="INFO">${firewall_file} = results/test21_tanium_agent/data/firewall_rules_20251005_154445.txt</msg>
<var>${firewall_file}</var>
<arg>${firewall_rules}</arg>
<doc>üíæ Save firewall rules to file</doc>
<status status="PASS" start="2025-10-05T15:44:45.863644" elapsed="0.011490"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.875748" level="INFO">üìÑ Firewall rules saved to: results/test21_tanium_agent/data/firewall_rules_20251005_154445.txt</msg>
<arg>üìÑ Firewall rules saved to: ${firewall_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.875414" elapsed="0.000498"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.876522" level="INFO">‚úÖ Firewall rules validated</msg>
<arg>‚úÖ Firewall rules validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.876250" elapsed="0.000456"/>
</kw>
<kw name="Log Test End" owner="tanium_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.877667" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.877515" elapsed="0.000249"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.878074" level="INFO">üèÅ Completed Test: Normal - Validate Tanium Agent Firewall Rules | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.877877" elapsed="0.000288"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.878386" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.878267" elapsed="0.000205"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:44:45.877062" elapsed="0.002228"/>
</kw>
<doc>üî• Verify firewall rules allow Tanium communication</doc>
<tag>firewall</tag>
<tag>network</tag>
<tag>normal</tag>
<tag>tanium</tag>
<status status="PASS" start="2025-10-05T15:44:45.792268" elapsed="0.087102"/>
</test>
<test id="s1-s4-t16" name="Normal - Check Tanium Agent Update Status" line="251">
<kw name="Log Test Start" owner="tanium_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.880773" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.880638" elapsed="0.000235"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.881167" level="INFO">üèÅ Starting Test: Normal - Check Tanium Agent Update Status</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.881021" elapsed="0.000237"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.881482" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.881378" elapsed="0.000187"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:44:45.880335" elapsed="0.001305"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.881841" level="INFO">üîç Checking Tanium agent update status...</msg>
<arg>üîç Checking Tanium agent update status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.881740" elapsed="0.000190"/>
</kw>
<kw name="Check Agent Update Status" owner="tanium_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.882452" level="INFO">üîÑ Checking update status...</msg>
<arg>üîÑ Checking update status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.882323" elapsed="0.000223"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:45.883203" level="INFO">Executing command 'grep -i "update|upgrade" /opt/Tanium/TaniumClient/Logs/taniumclient.log 2&gt;/dev/null | tail -20 || echo "No update logs"'.</msg>
<msg time="2025-10-05T15:44:45.907891" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:45.908151" level="INFO">${output} = </msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:45.883019" elapsed="0.025174"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:45.908308" elapsed="0.000112"/>
</return>
<msg time="2025-10-05T15:44:45.908663" level="INFO">${update_logs} = </msg>
<var>${update_logs}</var>
<arg>grep -i "update\|upgrade" ${TANIUM_LOG_DIR}/taniumclient.log 2&gt;/dev/null | tail -20 || echo "No update logs"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:45.882706" elapsed="0.025994"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:45.909734" level="INFO">Executing command 'ls -la /opt/Tanium/TaniumClient/Updates/ 2&gt;/dev/null || echo "Updates directory not found"'.</msg>
<msg time="2025-10-05T15:44:45.959746" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:45.960254" level="INFO">${output} = Updates directory not found</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:45.909538" elapsed="0.050800"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:45.960469" elapsed="0.000077"/>
</return>
<msg time="2025-10-05T15:44:45.960828" level="INFO">${update_dir} = Updates directory not found</msg>
<var>${update_dir}</var>
<arg>ls -la ${TANIUM_DATA_DIR}/Updates/ 2&gt;/dev/null || echo "Updates directory not found"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:45.909024" elapsed="0.051851"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.961615" level="INFO">${update_status} = === Update Logs ===


=== Updates Directory ===
Updates directory not found</msg>
<var>${update_status}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Update Logs ===</arg>
<arg>${update_logs}</arg>
<arg>=== Updates Directory ===</arg>
<arg>${update_dir}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:45.961168" elapsed="0.000480"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.962093" level="INFO">‚úÖ Update status collected</msg>
<arg>‚úÖ Update status collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.961863" elapsed="0.000659"/>
</kw>
<return>
<value>${update_status}</value>
<status status="PASS" start="2025-10-05T15:44:45.962608" elapsed="0.000058"/>
</return>
<msg time="2025-10-05T15:44:45.962998" level="INFO">${update_status} = === Update Logs ===


=== Updates Directory ===
Updates directory not found</msg>
<var>${update_status}</var>
<doc>üîÑ Check agent update status</doc>
<status status="PASS" start="2025-10-05T15:44:45.882134" elapsed="0.080918"/>
</kw>
<kw name="Save Update Status to File" owner="tanium_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:44:45.964550" level="INFO">${timestamp} = 20251005_154445</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:44:45.963863" elapsed="0.000731"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.965094" level="INFO">${update_file} = results/test21_tanium_agent/data/update_status_20251005_154445.txt</msg>
<var>${update_file}</var>
<arg>${DATA_DIR}/update_status_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:44:45.964815" elapsed="0.000317"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.965754" level="INFO">${report} = =========================================
=== Tanium Agent Update Status ===
=========================================
Timestamp: 20251005_154445
Target Server: alhxvdvitap01 (172.30.16.186)

=== Upda...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== Tanium Agent Update Status ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>${update_status}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:45.965293" elapsed="0.000525"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:44:45.976082" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test21_tanium_agent/data/update_status_20251005_154445.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test21_tanium_agent/data/update_status_20251005_154445.txt&lt;/a&gt;'.</msg>
<arg>${update_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:44:45.966033" elapsed="0.010770"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.977339" level="INFO">üìÑ Update status saved to: results/test21_tanium_agent/data/update_status_20251005_154445.txt</msg>
<arg>üìÑ Update status saved to: ${update_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.977043" elapsed="0.000423"/>
</kw>
<return>
<value>${update_file}</value>
<status status="PASS" start="2025-10-05T15:44:45.977543" elapsed="0.000053"/>
</return>
<msg time="2025-10-05T15:44:45.977775" level="INFO">${update_file} = results/test21_tanium_agent/data/update_status_20251005_154445.txt</msg>
<var>${update_file}</var>
<arg>${update_status}</arg>
<doc>üíæ Save update status to file</doc>
<status status="PASS" start="2025-10-05T15:44:45.963490" elapsed="0.014318"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.978121" level="INFO">üìÑ Update status saved to: results/test21_tanium_agent/data/update_status_20251005_154445.txt</msg>
<arg>üìÑ Update status saved to: ${update_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.977962" elapsed="0.000238"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.978444" level="INFO">‚úÖ Update status checked</msg>
<arg>‚úÖ Update status checked</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.978332" elapsed="0.000207"/>
</kw>
<kw name="Log Test End" owner="tanium_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.979422" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.979277" elapsed="0.000253"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.979873" level="INFO">üèÅ Completed Test: Normal - Check Tanium Agent Update Status | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.979671" elapsed="0.000309"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.980284" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.980130" elapsed="0.000252"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:44:45.978861" elapsed="0.001598"/>
</kw>
<doc>üîÑ Check if agent updates are available or pending</doc>
<tag>maintenance</tag>
<tag>normal</tag>
<tag>tanium</tag>
<tag>updates</tag>
<status status="PASS" start="2025-10-05T15:44:45.879734" elapsed="0.100791"/>
</test>
<test id="s1-s4-t17" name="Normal - Validate Tanium Agent Certificates" line="266">
<kw name="Log Test Start" owner="tanium_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.981920" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.981744" elapsed="0.000273"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.982411" level="INFO">üèÅ Starting Test: Normal - Validate Tanium Agent Certificates</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.982148" elapsed="0.000357"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.982748" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.982627" elapsed="0.000217"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:44:45.981435" elapsed="0.001491"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.983284" level="INFO">üîç Validating Tanium agent certificates...</msg>
<arg>üîç Validating Tanium agent certificates...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.983064" elapsed="0.000315"/>
</kw>
<kw name="Check Agent Certificates" owner="tanium_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:45.984043" level="INFO">üîí Checking agent certificates...</msg>
<arg>üîí Checking agent certificates...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:45.983912" elapsed="0.000229"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:45.985021" level="INFO">Executing command 'ls -la /opt/Tanium/TaniumClient/*.pem /opt/Tanium/TaniumClient/*.crt 2&gt;/dev/null || echo "No certificate files found"'.</msg>
<msg time="2025-10-05T15:44:46.010682" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:46.010863" level="INFO">${output} = No certificate files found</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:45.984900" elapsed="0.025988"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:46.010950" elapsed="0.000039"/>
</return>
<msg time="2025-10-05T15:44:46.011142" level="INFO">${cert_dir} = No certificate files found</msg>
<var>${cert_dir}</var>
<arg>ls -la ${TANIUM_DATA_DIR}/*.pem ${TANIUM_DATA_DIR}/*.crt 2&gt;/dev/null || echo "No certificate files found"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:45.984371" elapsed="0.026801"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:46.011810" level="INFO">Executing command 'grep -i "certificate|ssl|tls" /opt/Tanium/TaniumClient/Logs/taniumclient.log 2&gt;/dev/null | tail -20 || echo "No certificate logs"'.</msg>
<msg time="2025-10-05T15:44:46.072018" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:46.072389" level="INFO">${output} = </msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:46.011707" elapsed="0.060742"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:46.072590" elapsed="0.000090"/>
</return>
<msg time="2025-10-05T15:44:46.072990" level="INFO">${cert_logs} = </msg>
<var>${cert_logs}</var>
<arg>grep -i "certificate\|ssl\|tls" ${TANIUM_LOG_DIR}/taniumclient.log 2&gt;/dev/null | tail -20 || echo "No certificate logs"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:46.011436" elapsed="0.062702"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.075569" level="INFO">${cert_status} = === Certificate Files ===
No certificate files found

=== Certificate Logs ===
</msg>
<var>${cert_status}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Certificate Files ===</arg>
<arg>${cert_dir}</arg>
<arg>=== Certificate Logs ===</arg>
<arg>${cert_logs}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:46.074653" elapsed="0.001087"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.076575" level="INFO">‚úÖ Certificate status collected</msg>
<arg>‚úÖ Certificate status collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:46.076184" elapsed="0.000664"/>
</kw>
<return>
<value>${cert_status}</value>
<status status="PASS" start="2025-10-05T15:44:46.076989" elapsed="0.000095"/>
</return>
<msg time="2025-10-05T15:44:46.077513" level="INFO">${cert_status} = === Certificate Files ===
No certificate files found

=== Certificate Logs ===
</msg>
<var>${cert_status}</var>
<doc>üîí Check agent certificates</doc>
<status status="PASS" start="2025-10-05T15:44:45.983599" elapsed="0.093990"/>
</kw>
<kw name="Save Certificate Status to File" owner="tanium_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:44:46.079865" level="INFO">${timestamp} = 20251005_154446</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:44:46.079339" elapsed="0.000602"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.081562" level="INFO">${cert_file} = results/test21_tanium_agent/data/certificate_status_20251005_154446.txt</msg>
<var>${cert_file}</var>
<arg>${DATA_DIR}/certificate_status_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:44:46.080187" elapsed="0.001706"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.082921" level="INFO">${report} = =========================================
=== Tanium Agent Certificates ===
=========================================
Timestamp: 20251005_154446
Target Server: alhxvdvitap01 (172.30.16.186)

=== Certi...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== Tanium Agent Certificates ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>${cert_status}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:46.082268" elapsed="0.000738"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:44:46.092912" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test21_tanium_agent/data/certificate_status_20251005_154446.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test21_tanium_agent/data/certificate_status_20251005_154446.txt&lt;/a&gt;'.</msg>
<arg>${cert_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:44:46.083411" elapsed="0.009753"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.094220" level="INFO">üìÑ Certificate status saved to: results/test21_tanium_agent/data/certificate_status_20251005_154446.txt</msg>
<arg>üìÑ Certificate status saved to: ${cert_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:46.093534" elapsed="0.001054"/>
</kw>
<return>
<value>${cert_file}</value>
<status status="PASS" start="2025-10-05T15:44:46.094792" elapsed="0.000165"/>
</return>
<msg time="2025-10-05T15:44:46.095728" level="INFO">${cert_file} = results/test21_tanium_agent/data/certificate_status_20251005_154446.txt</msg>
<var>${cert_file}</var>
<arg>${cert_status}</arg>
<doc>üíæ Save certificate status to file</doc>
<status status="PASS" start="2025-10-05T15:44:46.078139" elapsed="0.017709"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.097468" level="INFO">üìÑ Certificate status saved to: results/test21_tanium_agent/data/certificate_status_20251005_154446.txt</msg>
<arg>üìÑ Certificate status saved to: ${cert_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:46.096540" elapsed="0.001289"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.098647" level="INFO">‚úÖ Certificate validation completed</msg>
<arg>‚úÖ Certificate validation completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:46.098320" elapsed="0.000629"/>
</kw>
<kw name="Log Test End" owner="tanium_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.100579" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:46.100356" elapsed="0.000416"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.101453" level="INFO">üèÅ Completed Test: Normal - Validate Tanium Agent Certificates | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:46.101108" elapsed="0.000505"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.102089" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:46.101863" elapsed="0.000381"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:44:46.099615" elapsed="0.002738"/>
</kw>
<doc>üîí Validate agent SSL/TLS certificates</doc>
<tag>certificates</tag>
<tag>normal</tag>
<tag>security</tag>
<tag>tanium</tag>
<status status="PASS" start="2025-10-05T15:44:45.980827" elapsed="0.121596"/>
</test>
<test id="s1-s4-t18" name="Normal - Check Tanium Agent Error History" line="281">
<kw name="Log Test Start" owner="tanium_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.105978" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:46.105591" elapsed="0.000610"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.106873" level="INFO">üèÅ Starting Test: Normal - Check Tanium Agent Error History</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:46.106530" elapsed="0.000504"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.108407" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:46.108175" elapsed="0.000403"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:44:46.104695" elapsed="0.004021"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.109433" level="INFO">üîç Checking agent error history...</msg>
<arg>üîç Checking agent error history...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:46.108930" elapsed="0.000792"/>
</kw>
<kw name="Check Agent Error History" owner="tanium_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.111001" level="INFO">‚ö†Ô∏è Checking error history...</msg>
<arg>‚ö†Ô∏è Checking error history...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:46.110784" elapsed="0.000698"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:46.113013" level="INFO">Executing command 'grep -iE "error|fail|exception" /opt/Tanium/TaniumClient/Logs/taniumclient.log 2&gt;/dev/null | tail -50 || echo "No errors in main log"'.</msg>
<msg time="2025-10-05T15:44:46.126465" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:46.126753" level="INFO">${output} = </msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:46.112677" elapsed="0.014131"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:46.126961" elapsed="0.000060"/>
</return>
<msg time="2025-10-05T15:44:46.127388" level="INFO">${errors_main} = </msg>
<var>${errors_main}</var>
<arg>grep -iE "error|fail|exception" ${TANIUM_LOG_DIR}/taniumclient.log 2&gt;/dev/null | tail -50 || echo "No errors in main log"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:46.111811" elapsed="0.015615"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:46.128396" level="INFO">Executing command 'tail -100 /opt/Tanium/TaniumClient/Logs/taniumclienterrors.log 2&gt;/dev/null || echo "No error log file"'.</msg>
<msg time="2025-10-05T15:44:46.177214" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:46.177583" level="INFO">${output} = No error log file</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:46.128167" elapsed="0.049486"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:46.177816" elapsed="0.000098"/>
</return>
<msg time="2025-10-05T15:44:46.178268" level="INFO">${errors_file} = No error log file</msg>
<var>${errors_file}</var>
<arg>tail -100 ${TANIUM_LOG_DIR}/taniumclienterrors.log 2&gt;/dev/null || echo "No error log file"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:46.127686" elapsed="0.050643"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.179436" level="INFO">${error_history} = === Errors from Main Log ===


=== Error Log File ===
No error log file</msg>
<var>${error_history}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Errors from Main Log ===</arg>
<arg>${errors_main}</arg>
<arg>=== Error Log File ===</arg>
<arg>${errors_file}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:46.178748" elapsed="0.000754"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.180058" level="INFO">‚úÖ Error history collected</msg>
<arg>‚úÖ Error history collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:46.179831" elapsed="0.000456"/>
</kw>
<return>
<value>${error_history}</value>
<status status="PASS" start="2025-10-05T15:44:46.180429" elapsed="0.000079"/>
</return>
<msg time="2025-10-05T15:44:46.180793" level="INFO">${error_history} = === Errors from Main Log ===


=== Error Log File ===
No error log file</msg>
<var>${error_history}</var>
<doc>‚ö†Ô∏è Check agent error history</doc>
<status status="PASS" start="2025-10-05T15:44:46.110293" elapsed="0.070549"/>
</kw>
<kw name="Save Error History to File" owner="tanium_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:44:46.182559" level="INFO">${timestamp} = 20251005_154446</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:44:46.181933" elapsed="0.000717"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.183753" level="INFO">${error_file} = results/test21_tanium_agent/data/error_history_20251005_154446.txt</msg>
<var>${error_file}</var>
<arg>${DATA_DIR}/error_history_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:44:46.183058" elapsed="0.000756"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.186186" level="INFO">${report} = =========================================
=== Tanium Agent Error History ===
=========================================
Timestamp: 20251005_154446
Target Server: alhxvdvitap01 (172.30.16.186)

=== Erro...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== Tanium Agent Error History ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>${error_history}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:46.184156" elapsed="0.002161"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:44:46.199175" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test21_tanium_agent/data/error_history_20251005_154446.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test21_tanium_agent/data/error_history_20251005_154446.txt&lt;/a&gt;'.</msg>
<arg>${error_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:44:46.186642" elapsed="0.012860"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.200742" level="INFO">üìÑ Error history saved to: results/test21_tanium_agent/data/error_history_20251005_154446.txt</msg>
<arg>üìÑ Error history saved to: ${error_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:46.200049" elapsed="0.001028"/>
</kw>
<return>
<value>${error_file}</value>
<status status="PASS" start="2025-10-05T15:44:46.201235" elapsed="0.000091"/>
</return>
<msg time="2025-10-05T15:44:46.201653" level="INFO">${error_file} = results/test21_tanium_agent/data/error_history_20251005_154446.txt</msg>
<var>${error_file}</var>
<arg>${error_history}</arg>
<doc>üíæ Save error history to file</doc>
<status status="PASS" start="2025-10-05T15:44:46.181235" elapsed="0.020508"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.202334" level="INFO">üìÑ Error history saved to: results/test21_tanium_agent/data/error_history_20251005_154446.txt</msg>
<arg>üìÑ Error history saved to: ${error_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:46.202017" elapsed="0.001576"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.204353" level="INFO">‚úÖ Error history checked</msg>
<arg>‚úÖ Error history checked</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:46.204023" elapsed="0.000660"/>
</kw>
<kw name="Log Test End" owner="tanium_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.206011" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:46.205748" elapsed="0.000440"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.206755" level="INFO">üèÅ Completed Test: Normal - Check Tanium Agent Error History | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:46.206391" elapsed="0.000569"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.207446" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:46.207204" elapsed="0.000397"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:44:46.205163" elapsed="0.002553"/>
</kw>
<doc>‚ö†Ô∏è Check agent logs for error history</doc>
<tag>errors</tag>
<tag>normal</tag>
<tag>tanium</tag>
<tag>troubleshooting</tag>
<status status="PASS" start="2025-10-05T15:44:46.102972" elapsed="0.104814"/>
</test>
<test id="s1-s4-t19" name="Normal - Validate Tanium Agent Data Collection" line="296">
<kw name="Log Test Start" owner="tanium_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.209863" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:46.209635" elapsed="0.000424"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.210703" level="INFO">üèÅ Starting Test: Normal - Validate Tanium Agent Data Collection</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:46.210365" elapsed="0.000539"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.211535" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:46.211300" elapsed="0.000377"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:44:46.209152" elapsed="0.002765"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.212412" level="INFO">üîç Validating agent data collection...</msg>
<arg>üîç Validating agent data collection...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:46.212114" elapsed="0.000450"/>
</kw>
<kw name="Validate Agent Data Collection" owner="tanium_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.213763" level="INFO">üìä Validating data collection...</msg>
<arg>üìä Validating data collection...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:46.213585" elapsed="0.000632"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:46.215406" level="INFO">Executing command 'grep -i "data collection|inventory|report" /opt/Tanium/TaniumClient/Logs/taniumclient.log 2&gt;/dev/null | tail -20 || echo "No data collection logs"'.</msg>
<msg time="2025-10-05T15:44:46.231723" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:46.231952" level="INFO">${output} = </msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:46.215219" elapsed="0.016769"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:46.232074" elapsed="0.000061"/>
</return>
<msg time="2025-10-05T15:44:46.232312" level="INFO">${data_collection} = </msg>
<var>${data_collection}</var>
<arg>grep -i "data collection\|inventory\|report" ${TANIUM_LOG_DIR}/taniumclient.log 2&gt;/dev/null | tail -20 || echo "No data collection logs"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:46.214668" elapsed="0.017672"/>
</kw>
<kw name="Execute Command" owner="tanium_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:44:46.233163" level="INFO">Executing command 'ls -la /opt/Tanium/TaniumClient/ResultSets/ 2&gt;/dev/null || echo "ResultSets directory not found"'.</msg>
<msg time="2025-10-05T15:44:46.283485" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:44:46.283760" level="INFO">${output} = ResultSets directory not found</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:44:46.232981" elapsed="0.050824"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:44:46.283886" elapsed="0.000049"/>
</return>
<msg time="2025-10-05T15:44:46.284108" level="INFO">${result_sets} = ResultSets directory not found</msg>
<var>${result_sets}</var>
<arg>ls -la ${TANIUM_DATA_DIR}/ResultSets/ 2&gt;/dev/null || echo "ResultSets directory not found"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:44:46.232577" elapsed="0.051558"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.285122" level="INFO">${collection_status} = === Data Collection Logs ===


=== Result Sets ===
ResultSets directory not found</msg>
<var>${collection_status}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Data Collection Logs ===</arg>
<arg>${data_collection}</arg>
<arg>=== Result Sets ===</arg>
<arg>${result_sets}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:46.284377" elapsed="0.000820"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.285773" level="INFO">‚úÖ Data collection validated</msg>
<arg>‚úÖ Data collection validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:46.285487" elapsed="0.000565"/>
</kw>
<return>
<value>${collection_status}</value>
<status status="PASS" start="2025-10-05T15:44:46.286164" elapsed="0.000070"/>
</return>
<msg time="2025-10-05T15:44:46.286410" level="INFO">${data_collection} = === Data Collection Logs ===


=== Result Sets ===
ResultSets directory not found</msg>
<var>${data_collection}</var>
<doc>üìä Validate agent data collection</doc>
<status status="PASS" start="2025-10-05T15:44:46.213231" elapsed="0.073851"/>
</kw>
<kw name="Save Data Collection Status to File" owner="tanium_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:44:46.288332" level="INFO">${timestamp} = 20251005_154446</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:44:46.288100" elapsed="0.000260"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.288628" level="INFO">${data_file} = results/test21_tanium_agent/data/data_collection_20251005_154446.txt</msg>
<var>${data_file}</var>
<arg>${DATA_DIR}/data_collection_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:44:46.288468" elapsed="0.000182"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.289054" level="INFO">${report} = =========================================
=== Tanium Agent Data Collection ===
=========================================
Timestamp: 20251005_154446
Target Server: alhxvdvitap01 (172.30.16.186)

=== Da...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== Tanium Agent Data Collection ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>${data_collection}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:44:46.288739" elapsed="0.000358"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:44:46.297619" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test21_tanium_agent/data/data_collection_20251005_154446.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test21_tanium_agent/data/data_collection_20251005_154446.txt&lt;/a&gt;'.</msg>
<arg>${data_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:44:46.289302" elapsed="0.008512"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.298355" level="INFO">üìÑ Data collection status saved to: results/test21_tanium_agent/data/data_collection_20251005_154446.txt</msg>
<arg>üìÑ Data collection status saved to: ${data_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:46.298060" elapsed="0.000429"/>
</kw>
<return>
<value>${data_file}</value>
<status status="PASS" start="2025-10-05T15:44:46.298577" elapsed="0.000056"/>
</return>
<msg time="2025-10-05T15:44:46.298815" level="INFO">${data_file} = results/test21_tanium_agent/data/data_collection_20251005_154446.txt</msg>
<var>${data_file}</var>
<arg>${data_collection}</arg>
<doc>üíæ Save data collection status to file</doc>
<status status="PASS" start="2025-10-05T15:44:46.287565" elapsed="0.011300"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.299460" level="INFO">üìÑ Data collection status saved to: results/test21_tanium_agent/data/data_collection_20251005_154446.txt</msg>
<arg>üìÑ Data collection status saved to: ${data_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:46.299087" elapsed="0.000511"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.299989" level="INFO">‚úÖ Data collection validated</msg>
<arg>‚úÖ Data collection validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:46.299790" elapsed="0.000335"/>
</kw>
<kw name="Log Test End" owner="tanium_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.301233" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:46.301015" elapsed="0.000362"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.301804" level="INFO">üèÅ Completed Test: Normal - Validate Tanium Agent Data Collection | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:46.301559" elapsed="0.000367"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.302198" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:46.302067" elapsed="0.000220"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:44:46.300544" elapsed="0.001807"/>
</kw>
<doc>üìä Verify agent is collecting and reporting data</doc>
<tag>data_collection</tag>
<tag>normal</tag>
<tag>reporting</tag>
<tag>tanium</tag>
<status status="PASS" start="2025-10-05T15:44:46.208242" elapsed="0.094158"/>
</test>
<test id="s1-s4-t20" name="Normal - Comprehensive Tanium Agent Summary" line="311">
<kw name="Log Test Start" owner="tanium_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.303714" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:46.303601" elapsed="0.000291"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.304261" level="INFO">üèÅ Starting Test: Normal - Comprehensive Tanium Agent Summary</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:46.304053" elapsed="0.000322"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.304682" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:46.304535" elapsed="0.000253"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:44:46.303359" elapsed="0.001549"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.305260" level="INFO">üîç Generating comprehensive Tanium agent summary...</msg>
<arg>üîç Generating comprehensive Tanium agent summary...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:46.305099" elapsed="0.000286"/>
</kw>
<kw name="Validate All Tanium Agent Settings" owner="tanium_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.306102" level="INFO">üìä Validating all Tanium agent settings...</msg>
<arg>üìä Validating all Tanium agent settings...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:46.305923" elapsed="0.000305"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.307535" level="INFO">‚úÖ All Tanium agent data collected and validated</msg>
<arg>‚úÖ All Tanium agent data collected and validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:46.307266" elapsed="0.000416"/>
</kw>
<doc>üìä Validate all Tanium agent settings</doc>
<status status="PASS" start="2025-10-05T15:44:46.305601" elapsed="0.002172"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.308087" level="INFO">üìä Comprehensive Tanium agent summary:</msg>
<arg>üìä Comprehensive Tanium agent summary:</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:46.307929" elapsed="0.000286"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.308457" level="INFO">üìä - Agent Installation: Validated ‚úÖ</msg>
<arg>üìä - Agent Installation: Validated ‚úÖ</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:46.308339" elapsed="0.000212"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.308762" level="INFO">üìä - Service Status: Running ‚úÖ</msg>
<arg>üìä - Service Status: Running ‚úÖ</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:46.308659" elapsed="0.000184"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.309035" level="INFO">üìä - Server Connectivity: Tested ‚úÖ</msg>
<arg>üìä - Server Connectivity: Tested ‚úÖ</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:46.308943" elapsed="0.000167"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.309321" level="INFO">üìä - Agent Version: Collected ‚úÖ</msg>
<arg>üìä - Agent Version: Collected ‚úÖ</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:46.309224" elapsed="0.000189"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.309602" level="INFO">üìä - Configuration: Validated ‚úÖ</msg>
<arg>üìä - Configuration: Validated ‚úÖ</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:46.309518" elapsed="0.000154"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.309846" level="INFO">üìä - Registration: Checked ‚úÖ</msg>
<arg>üìä - Registration: Checked ‚úÖ</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:46.309760" elapsed="0.000157"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.310088" level="INFO">üìä - Sensor Inventory: Validated ‚úÖ</msg>
<arg>üìä - Sensor Inventory: Validated ‚úÖ</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:46.310006" elapsed="0.000151"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.310321" level="INFO">üìä - Query Response: Tested ‚úÖ</msg>
<arg>üìä - Query Response: Tested ‚úÖ</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:46.310242" elapsed="0.000146"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.310548" level="INFO">üìä - Modules: Checked ‚úÖ</msg>
<arg>üìä - Modules: Checked ‚úÖ</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:46.310470" elapsed="0.000143"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.310769" level="INFO">‚úÖ Comprehensive Tanium agent validation: COMPLETED</msg>
<arg>‚úÖ Comprehensive Tanium agent validation: COMPLETED</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:46.310694" elapsed="0.000152"/>
</kw>
<kw name="Log Test End" owner="tanium_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.311531" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:46.311413" elapsed="0.000200"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.311849" level="INFO">üèÅ Completed Test: Normal - Comprehensive Tanium Agent Summary | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:46.311706" elapsed="0.000221"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.312123" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:46.312017" elapsed="0.000177"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:44:46.311060" elapsed="0.001194"/>
</kw>
<doc>üìä Generate comprehensive summary of Tanium agent status</doc>
<tag>compliance</tag>
<tag>comprehensive</tag>
<tag>normal</tag>
<tag>summary</tag>
<status status="PASS" start="2025-10-05T15:44:46.302617" elapsed="0.009705"/>
</test>
<kw name="Close All SSH Connections" owner="tanium_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.313274" level="INFO">üîå Closing SSH connections...</msg>
<arg>üîå Closing SSH connections...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:46.313165" elapsed="0.000434"/>
</kw>
<kw name="Close All Connections" owner="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" start="2025-10-05T15:44:46.313718" elapsed="0.000289"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:44:46.314229" level="INFO">‚úÖ SSH connections closed</msg>
<arg>‚úÖ SSH connections closed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:44:46.314112" elapsed="0.000232"/>
</kw>
<doc>üîå Close all SSH connections</doc>
<status status="PASS" start="2025-10-05T15:44:46.312964" elapsed="0.001455"/>
</kw>
<doc>üîç Tanium Agent Reporting Status Test Suite - Test-21
üîç Process: Find hostname in EDS ‚Üí SSH to server ‚Üí Check Tanium agent status ‚Üí Validate reporting in console
‚úÖ Validates: Agent installation, service status, server connectivity, inventory reporting, module installations, query responsiveness
üìä Documents: Agent version, service status, server communication, installed modules, query results, console listings
üéØ Focus: Verify Tanium agent is properly installed, running, and reporting to Tanium console</doc>
<status status="PASS" start="2025-10-05T15:44:29.613988" elapsed="16.700466"/>
</suite>
<suite id="s1-s5" name="Event Logs" source="/mnt/c/Users/sacpa/Projects/robot/robotframework/tests/test22_event_logs/event_logs.robot">
<kw name="Initialize Event Logs Test Environment" owner="logs_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:09.836192" level="INFO">üöÄ Initializing Test-22: Event Logs &amp; Critical Error Validation Environment...</msg>
<arg>üöÄ Initializing Test-22: Event Logs &amp; Critical Error Validation Environment...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:09.835945" elapsed="0.000398"/>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2025-10-05T15:45:09.837592" level="INFO" html="true">Directory '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data&lt;/a&gt;' already exists.</msg>
<arg>${DATA_DIR}</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2025-10-05T15:45:09.836520" elapsed="0.001203"/>
</kw>
<kw name="Lookup Server Config" owner="EDSLookup">
<msg time="2025-10-05T15:45:09.869118" level="INFO">Found matching row for hostname 'alhxvdvitap01'</msg>
<msg time="2025-10-05T15:45:09.869334" level="INFO">Extracted IP from EDS: 172.30.16.186</msg>
<msg time="2025-10-05T15:45:09.869373" level="INFO">Extracted subnet from EDS: 10.26.216.0/24</msg>
<msg time="2025-10-05T15:45:09.869402" level="INFO">Extracted mask from EDS: 255.255.255.0</msg>
<msg time="2025-10-05T15:45:09.869423" level="INFO">Extracted gateway from EDS: 10.26.216.4</msg>
<msg time="2025-10-05T15:45:09.869445" level="INFO">Extracted CNAME from EDS: alhxvdvitap01</msg>
<msg time="2025-10-05T15:45:09.869465" level="INFO">Extracted domain from EDS: gnscet.com</msg>
<msg time="2025-10-05T15:45:09.869490" level="INFO">Extracted CPU cores from EDS: 8</msg>
<msg time="2025-10-05T15:45:09.869512" level="INFO">Extracted RAM from EDS: 16</msg>
<msg time="2025-10-05T15:45:09.869535" level="INFO">Extracted storage type from EDS: VSAN</msg>
<msg time="2025-10-05T15:45:09.869572" level="INFO">Extracted storage total TB from EDS: 0.465</msg>
<msg time="2025-10-05T15:45:09.869595" level="INFO">Extracted drive/volume group from EDS: rootvg:</msg>
<msg time="2025-10-05T15:45:09.869616" level="INFO">Extracted file system from EDS: /dev/mapper/rootvg-rootlv</msg>
<msg time="2025-10-05T15:45:09.869638" level="INFO">Extracted logical volume/partition from EDS: /</msg>
<msg time="2025-10-05T15:45:09.869660" level="INFO">Extracted storage allocation GB from EDS: 20</msg>
<msg time="2025-10-05T15:45:09.869680" level="INFO">Extracted recommended storage allocation GB from EDS: 20</msg>
<msg time="2025-10-05T15:45:09.869700" level="INFO">Extracted drive purpose from EDS: OS</msg>
<msg time="2025-10-05T15:45:09.869719" level="INFO">Extracted OS type from EDS: RHEL 9.6</msg>
<msg time="2025-10-05T15:45:09.869741" level="INFO">EDS configuration for alhxvdvitap01: {'ip': '172.30.16.186', 'subnet': '10.26.216.0/24', 'mask': '255.255.255.0', 'gateway': '10.26.216.4', 'cname': 'alhxvdvitap01', 'domain': 'gnscet.com', 'cpu_cores': '8', 'ram': '16', 'storage_type': 'VSAN', 'storage_total_tb': '0.465', 'drive_volume_group': 'rootvg:', 'file_system': '/dev/mapper/rootvg-rootlv', 'logical_volume_partition': '/', 'storage_allocation_gb': '20', 'recommended_storage_gb': '20', 'drive_purpose': 'OS', 'os_type': 'RHEL 9.6'}</msg>
<msg time="2025-10-05T15:45:09.869864" level="INFO">${eds_config} = {'ip': '172.30.16.186', 'subnet': '10.26.216.0/24', 'mask': '255.255.255.0', 'gateway': '10.26.216.4', 'cname': 'alhxvdvitap01', 'domain': 'gnscet.com', 'cpu_cores': '8', 'ram': '16', 'storage_type': ...</msg>
<var>${eds_config}</var>
<arg>${TARGET_HOSTNAME}</arg>
<doc>Lookup server configuration from EDS sheet based on hostname</doc>
<status status="PASS" start="2025-10-05T15:45:09.837900" elapsed="0.031989"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:09.871881" level="INFO">${TARGET_IP} = 172.30.16.186</msg>
<arg>${TARGET_IP}</arg>
<arg>${eds_config['ip']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:45:09.870096" elapsed="0.001847"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:09.872333" level="INFO">üìã Target Server: alhxvdvitap01</msg>
<arg>üìã Target Server: ${TARGET_HOSTNAME}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:09.872080" elapsed="0.000382"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:09.872796" level="INFO">üìã Target IP: 172.30.16.186</msg>
<arg>üìã Target IP: ${TARGET_IP}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:09.872608" elapsed="0.000312"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:09.873215" level="INFO">üîó Connecting to target server: 172.30.16.186...</msg>
<arg>üîó Connecting to target server: ${TARGET_IP}...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:09.873061" elapsed="0.000294"/>
</kw>
<kw name="Open Connection" owner="SSHLibrary">
<arg>${TARGET_IP}</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" start="2025-10-05T15:45:09.873535" elapsed="0.000222"/>
</kw>
<kw name="Login" owner="SSHLibrary">
<msg time="2025-10-05T15:45:09.874059" level="INFO">Logging into '172.30.16.186:22' as 'sac'.</msg>
<msg time="2025-10-05T15:45:11.175888" level="INFO">Read output: Welcome to Ubuntu 24.04.3 LTS (GNU/Linux 6.6.87.2-microsoft-standard-WSL2 x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/pro

 System information as of Sun Oct  5 15:44:11 CDT 2025

  System load:  0.79                Processes:             40
  Usage of /:   0.7% of 1006.85GB   Users logged in:       1
  Memory usage: 6%                  IPv4 address for eth0: 172.30.16.186
  Swap usage:   0%

 * Strictly confined Kubernetes makes edge and IoT secure. Learn how MicroK8s
   just raised the bar for easy, resilient and secure K8s cluster deployment.

   https://ubuntu.com/engage/secure-kubernetes-at-the-edge
Last login: Sun Oct  5 15:44:41 2025 from 172.30.16.186
[?2004hsac@alhxvdvitap01:~$</msg>
<arg>${SSH_USERNAME}</arg>
<arg>${SSH_PASSWORD}</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<status status="PASS" start="2025-10-05T15:45:09.873863" elapsed="1.302473"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:11.177809" level="INFO">‚úÖ SSH connection established successfully</msg>
<arg>‚úÖ SSH connection established successfully</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:11.176966" elapsed="0.001191"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:11.179169" level="INFO">‚úÖ Test-22 environment initialized</msg>
<arg>‚úÖ Test-22 environment initialized</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:11.178619" elapsed="0.000887"/>
</kw>
<doc>üèóÔ∏è Set up test environment for event log validation</doc>
<status status="PASS" start="2025-10-05T15:45:09.835279" elapsed="1.344481"/>
</kw>
<test id="s1-s5-t1" name="Critical - Connect to Target Server" line="20">
<kw name="Log Test Start" owner="logs_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:11.183674" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:11.183153" elapsed="0.000837"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:11.192964" level="INFO">üèÅ Starting Test: Critical - Connect to Target Server</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:11.192389" elapsed="0.000839"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:11.194572" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:11.193568" elapsed="0.001249"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:45:11.181969" elapsed="0.013132"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:11.195743" level="INFO">üîç Verifying SSH connection to target server...</msg>
<arg>üîç Verifying SSH connection to target server...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:11.195441" elapsed="0.000556"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:11.196768" level="INFO">üìã Target: alhxvdvitap01 (172.30.16.186)</msg>
<arg>üìã Target: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:11.196301" elapsed="0.000673"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:11.207002" level="INFO">Executing command 'echo "Connection active"'.</msg>
<msg time="2025-10-05T15:45:11.219869" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:11.220223" level="INFO">${output} = Connection active</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:11.206598" elapsed="0.013670"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:11.220447" elapsed="0.000122"/>
</return>
<msg time="2025-10-05T15:45:11.220849" level="INFO">${connection_status} = Connection active</msg>
<var>${connection_status}</var>
<arg>echo "Connection active"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:11.197441" elapsed="0.023446"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${connection_status}</arg>
<arg>Connection active</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-10-05T15:45:11.221173" elapsed="0.000296"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:11.221904" level="INFO">‚úÖ SSH connection verified and active</msg>
<arg>‚úÖ SSH connection verified and active</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:11.221654" elapsed="0.000436"/>
</kw>
<kw name="Log Test End" owner="logs_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:11.223535" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:11.223284" elapsed="0.000435"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:11.224303" level="INFO">üèÅ Completed Test: Critical - Connect to Target Server | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:11.223940" elapsed="0.000520"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:11.224892" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:11.224660" elapsed="0.000381"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:45:11.222606" elapsed="0.002540"/>
</kw>
<doc>üîó Establish direct connection to target machine via SSH</doc>
<tag>connection</tag>
<tag>critical</tag>
<tag>infrastructure</tag>
<tag>ssh</tag>
<status status="PASS" start="2025-10-05T15:45:11.180001" elapsed="0.045231"/>
</test>
<test id="s1-s5-t2" name="Critical - Collect System Journal Logs (journalctl)" line="33">
<kw name="Log Test Start" owner="logs_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:11.227654" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:11.227389" elapsed="0.000416"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:11.228253" level="INFO">üèÅ Starting Test: Critical - Collect System Journal Logs (journalctl)</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:11.227997" elapsed="0.000410"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:11.228837" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:11.228620" elapsed="0.000371"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:45:11.226784" elapsed="0.002315"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:11.229560" level="INFO">üîç Collecting system journal logs...</msg>
<arg>üîç Collecting system journal logs...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:11.229311" elapsed="0.000375"/>
</kw>
<kw name="Collect Journalctl Logs" owner="logs_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:11.232595" level="INFO">üìã Collecting journalctl logs...</msg>
<arg>üìã Collecting journalctl logs...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:11.230376" elapsed="0.002437"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:11.237832" level="INFO">Executing command 'journalctl --no-pager -n 500 2&gt;&amp;1 || echo "journalctl not available"'.</msg>
<msg time="2025-10-05T15:45:11.582456" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:11.582872" level="INFO">${output} = Oct 05 15:18:05 alhxvdvitap01 systemd-resolved[153]: Clock change detected. Flushing caches.
Oct 05 15:18:24 alhxvdvitap01 wsl-pro-service[173]: INFO Daemon: connecting to Windows Agent
Oct 05 15:18:2...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:11.237573" elapsed="0.345357"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:11.583721" elapsed="0.000093"/>
</return>
<msg time="2025-10-05T15:45:11.584003" level="INFO">${journal_all} = Oct 05 15:18:05 alhxvdvitap01 systemd-resolved[153]: Clock change detected. Flushing caches.
Oct 05 15:18:24 alhxvdvitap01 wsl-pro-service[173]: INFO Daemon: connecting to Windows Agent
Oct 05 15:18:2...</msg>
<var>${journal_all}</var>
<arg>journalctl --no-pager -n ${LOG_LINES_TO_COLLECT} 2&gt;&amp;1 || echo "journalctl not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:11.236829" elapsed="0.347201"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:11.584753" level="INFO">Executing command 'journalctl --no-pager -p warning -n 500 2&gt;&amp;1 || echo "Priority filter not available"'.</msg>
<msg time="2025-10-05T15:45:11.903675" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:11.903926" level="INFO">${output} = Sep 28 09:14:09 DESKTOP-933PGUE Exception: 
Sep 28 09:14:09 DESKTOP-933PGUE unknown: Operation canceled @p9io.cpp:258 (AcceptAsync)
Sep 28 09:14:09 DESKTOP-933PGUE unknown: 
Sep 28 09:14:09 DESKTOP-93...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:11.584617" elapsed="0.319354"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:11.904068" elapsed="0.000097"/>
</return>
<msg time="2025-10-05T15:45:11.904388" level="INFO">${journal_priority} = Sep 28 09:14:09 DESKTOP-933PGUE Exception: 
Sep 28 09:14:09 DESKTOP-933PGUE unknown: Operation canceled @p9io.cpp:258 (AcceptAsync)
Sep 28 09:14:09 DESKTOP-933PGUE unknown: 
Sep 28 09:14:09 DESKTOP-93...</msg>
<var>${journal_priority}</var>
<arg>journalctl --no-pager -p ${MIN_LOG_PRIORITY} -n ${LOG_LINES_TO_COLLECT} 2&gt;&amp;1 || echo "Priority filter not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:11.584251" elapsed="0.320173"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:11.905699" level="INFO">Executing command 'journalctl --no-pager -b 2&gt;&amp;1 | tail -500 || echo "Boot log not available"'.</msg>
<msg time="2025-10-05T15:45:12.046414" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:12.046662" level="INFO">${output} = Oct 05 15:20:07 alhxvdvitap01 python3[7754]: ansible-find Invoked with paths=['/mnt/c/Users/sacpa/Projects/robot/robotframework/tests/test11_services_validation'] patterns=['*.robot'] file_type=file r...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:11.905503" elapsed="0.141189"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:12.046792" elapsed="0.000123"/>
</return>
<msg time="2025-10-05T15:45:12.047118" level="INFO">${journal_boot} = Oct 05 15:20:07 alhxvdvitap01 python3[7754]: ansible-find Invoked with paths=['/mnt/c/Users/sacpa/Projects/robot/robotframework/tests/test11_services_validation'] patterns=['*.robot'] file_type=file r...</msg>
<var>${journal_boot}</var>
<arg>journalctl --no-pager -b 2&gt;&amp;1 | tail -${LOG_LINES_TO_COLLECT} || echo "Boot log not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:11.904706" elapsed="0.142438"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:12.047896" level="INFO">Executing command 'journalctl --no-pager -p err -n 500 2&gt;&amp;1 || echo "Error priority filter not available"'.</msg>
<msg time="2025-10-05T15:45:12.233641" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:12.233918" level="INFO">${output} = Sep 07 15:13:15 DESKTOP-933PGUE unknown: WSL (218) ERROR: CheckConnection: getaddrinfo() failed: -5
Sep 07 18:19:19 DESKTOP-933PGUE unknown: WSL (218) ERROR: CheckConnection: getaddrinfo() failed: -5
...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:12.047727" elapsed="0.186229"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:12.234062" elapsed="0.000065"/>
</return>
<msg time="2025-10-05T15:45:12.234345" level="INFO">${journal_errors} = Sep 07 15:13:15 DESKTOP-933PGUE unknown: WSL (218) ERROR: CheckConnection: getaddrinfo() failed: -5
Sep 07 18:19:19 DESKTOP-933PGUE unknown: WSL (218) ERROR: CheckConnection: getaddrinfo() failed: -5
...</msg>
<var>${journal_errors}</var>
<arg>journalctl --no-pager -p err -n ${LOG_LINES_TO_COLLECT} 2&gt;&amp;1 || echo "Error priority filter not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:12.047396" elapsed="0.186988"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.235414" level="INFO">${journal_logs} = === Journal - Recent 500 Entries ===
Oct 05 15:18:05 alhxvdvitap01 systemd-resolved[153]: Clock change detected. Flushing caches.
Oct 05 15:18:24 alhxvdvitap01 wsl-pro-service[173]: INFO Daemon: conne...</msg>
<var>${journal_logs}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Journal - Recent ${LOG_LINES_TO_COLLECT} Entries ===</arg>
<arg>${journal_all}</arg>
<arg>=== Journal - Priority ${MIN_LOG_PRIORITY} and Above ===</arg>
<arg>${journal_priority}</arg>
<arg>=== Journal - Current Boot ===</arg>
<arg>${journal_boot}</arg>
<arg>=== Journal - Error Level Only ===</arg>
<arg>${journal_errors}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:12.234717" elapsed="0.000724"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.235842" level="INFO">${JOURNAL_LOGS} = === Journal - Recent 500 Entries ===
Oct 05 15:18:05 alhxvdvitap01 systemd-resolved[153]: Clock change detected. Flushing caches.
Oct 05 15:18:24 alhxvdvitap01 wsl-pro-service[173]: INFO Daemon: conne...</msg>
<arg>${JOURNAL_LOGS}</arg>
<arg>${journal_logs}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:45:12.235598" elapsed="0.000284"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.236151" level="INFO">‚úÖ Journalctl logs collected</msg>
<arg>‚úÖ Journalctl logs collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.235990" elapsed="0.000278"/>
</kw>
<return>
<value>${journal_logs}</value>
<status status="PASS" start="2025-10-05T15:45:12.236331" elapsed="0.000040"/>
</return>
<msg time="2025-10-05T15:45:12.236485" level="INFO">${journal_logs} = === Journal - Recent 500 Entries ===
Oct 05 15:18:05 alhxvdvitap01 systemd-resolved[153]: Clock change detected. Flushing caches.
Oct 05 15:18:24 alhxvdvitap01 wsl-pro-service[173]: INFO Daemon: conne...</msg>
<var>${journal_logs}</var>
<doc>üìã Collect system journal logs using journalctl</doc>
<status status="PASS" start="2025-10-05T15:45:11.230001" elapsed="1.006504"/>
</kw>
<kw name="Save Journal Logs to File" owner="logs_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:45:12.237212" level="INFO">${timestamp} = 20251005_154512</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:45:12.236990" elapsed="0.000247"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.238140" level="INFO">${journal_file} = results/test22_event_logs/data/journalctl_20251005_154512.txt</msg>
<var>${journal_file}</var>
<arg>${DATA_DIR}/journalctl_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:45:12.237940" elapsed="0.000244"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.238988" level="INFO">${report} = =========================================
=== System Journal Logs (journalctl) ===
=========================================
Timestamp: 20251005_154512
Target Server: alhxvdvitap01 (172.30.16.186)
Lin...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== System Journal Logs (journalctl) ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>Lines Collected: ${LOG_LINES_TO_COLLECT}</arg>
<arg>Minimum Priority: ${MIN_LOG_PRIORITY}</arg>
<arg>${journal_logs}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:12.238291" elapsed="0.000736"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:45:12.247106" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/journalctl_20251005_154512.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/journalctl_20251005_154512.txt&lt;/a&gt;'.</msg>
<arg>${journal_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:45:12.239187" elapsed="0.008036"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.247617" level="INFO">üìÑ Journal logs saved to: results/test22_event_logs/data/journalctl_20251005_154512.txt</msg>
<arg>üìÑ Journal logs saved to: ${journal_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.247409" elapsed="0.000357"/>
</kw>
<return>
<value>${journal_file}</value>
<status status="PASS" start="2025-10-05T15:45:12.247838" elapsed="0.000056"/>
</return>
<msg time="2025-10-05T15:45:12.248047" level="INFO">${journal_file} = results/test22_event_logs/data/journalctl_20251005_154512.txt</msg>
<var>${journal_file}</var>
<arg>${journal_logs}</arg>
<doc>üíæ Save journal logs to file</doc>
<status status="PASS" start="2025-10-05T15:45:12.236683" elapsed="0.011387"/>
</kw>
<kw name="File Should Exist" owner="SSHLibrary">
<msg time="2025-10-05T15:45:12.248184" level="WARN">Keyword 'File Should Exist' found both from a custom library 'SSHLibrary' and a standard library 'OperatingSystem'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'SSHLibrary.File Should Exist' or 'OperatingSystem.File Should Exist'.</msg>
<msg time="2025-10-05T15:45:12.275526" level="INFO">[chan 6] Opened sftp connection (server version 3)</msg>
<msg time="2025-10-05T15:45:12.276896" level="FAIL">File 'results/test22_event_logs/data/journalctl_20251005_154512.txt' does not exist.</msg>
<arg>${journal_file}</arg>
<doc>Fails if the given ``path`` does NOT point to an existing file.</doc>
<status status="FAIL" start="2025-10-05T15:45:12.248223" elapsed="0.037217">File 'results/test22_event_logs/data/journalctl_20251005_154512.txt' does not exist.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>üìÑ Journal logs saved to: ${journal_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:45:12.285666" elapsed="0.000027"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>‚úÖ System journal logs collected successfully</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:45:12.285787" elapsed="0.000015"/>
</kw>
<kw name="Log Test End" owner="logs_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.286844" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.286642" elapsed="0.000347"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.287361" level="INFO">üèÅ Completed Test: Critical - Collect System Journal Logs (journalctl) | Status: FAIL</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.287130" elapsed="0.000331"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.287717" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.287588" elapsed="0.000219"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:45:12.286135" elapsed="0.001746"/>
</kw>
<doc>üìã Collect system journal logs using journalctl</doc>
<tag>critical</tag>
<tag>journalctl</tag>
<tag>logs</tag>
<tag>systemd</tag>
<status status="FAIL" start="2025-10-05T15:45:11.225735" elapsed="1.062193">File 'results/test22_event_logs/data/journalctl_20251005_154512.txt' does not exist.</status>
</test>
<test id="s1-s5-t3" name="Critical - Collect Boot Messages (dmesg)" line="51">
<kw name="Log Test Start" owner="logs_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.289218" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.289061" elapsed="0.000250"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.289623" level="INFO">üèÅ Starting Test: Critical - Collect Boot Messages (dmesg)</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.289455" elapsed="0.000257"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.289930" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.289823" elapsed="0.000191"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:45:12.288743" elapsed="0.001378"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.290397" level="INFO">üîç Collecting kernel boot messages...</msg>
<arg>üîç Collecting kernel boot messages...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.290282" elapsed="0.000311"/>
</kw>
<kw name="Collect Dmesg Output" owner="logs_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.291526" level="INFO">üöÄ Collecting dmesg output...</msg>
<arg>üöÄ Collecting dmesg output...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.291413" elapsed="0.000247"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:12.292583" level="INFO">Executing command 'dmesg 2&gt;&amp;1 || echo "dmesg not available"'.</msg>
<msg time="2025-10-05T15:45:12.324753" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:12.325055" level="INFO">${output} = [    0.000000] Linux version 6.6.87.2-microsoft-standard-WSL2 (root@439a258ad544) (gcc (GCC) 11.2.0, GNU ld (GNU Binutils) 2.37) #1 SMP PREEMPT_DYNAMIC Thu Jun  5 18:30:46 UTC 2025
[    0.000000] Comm...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:12.292478" elapsed="0.032611"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:12.325184" elapsed="0.000055"/>
</return>
<msg time="2025-10-05T15:45:12.325411" level="INFO">${dmesg_all} = [    0.000000] Linux version 6.6.87.2-microsoft-standard-WSL2 (root@439a258ad544) (gcc (GCC) 11.2.0, GNU ld (GNU Binutils) 2.37) #1 SMP PREEMPT_DYNAMIC Thu Jun  5 18:30:46 UTC 2025
[    0.000000] Comm...</msg>
<var>${dmesg_all}</var>
<arg>dmesg 2&gt;&amp;1 || echo "dmesg not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:12.292256" elapsed="0.033185"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:12.326248" level="INFO">Executing command 'dmesg --level=err,crit,alert,emerg 2&gt;&amp;1 || dmesg | grep -i "error|fail|critical" || echo "dmesg error filter not available"'.</msg>
<msg time="2025-10-05T15:45:12.377469" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:12.377886" level="INFO">${output} = [    0.367906] PCI: Fatal: No config space access function found
[    3.296026] misc dxg: dxgk: dxgkio_is_feature_enabled: Ioctl failed: -22
[    3.300988] misc dxg: dxgk: dxgkio_query_adapter_info: I...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:12.326050" elapsed="0.051895"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:12.378072" elapsed="0.000078"/>
</return>
<msg time="2025-10-05T15:45:12.378502" level="INFO">${dmesg_errors} = [    0.367906] PCI: Fatal: No config space access function found
[    3.296026] misc dxg: dxgk: dxgkio_is_feature_enabled: Ioctl failed: -22
[    3.300988] misc dxg: dxgk: dxgkio_query_adapter_info: I...</msg>
<var>${dmesg_errors}</var>
<arg>dmesg --level=err,crit,alert,emerg 2&gt;&amp;1 || dmesg | grep -i "error\|fail\|critical" || echo "dmesg error filter not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:12.325686" elapsed="0.052917"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:12.380040" level="INFO">Executing command 'dmesg --level=warn 2&gt;&amp;1 || dmesg | grep -i "warn" || echo "dmesg warning filter not available"'.</msg>
<msg time="2025-10-05T15:45:12.443348" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:12.443685" level="INFO">${output} = [    0.301784] Hyper-V: Disabling IBT because of Hyper-V bug
[    0.411062] PCI: System does not support PCI
[    0.614724] device-mapper: core: CONFIG_IMA_DISABLE_HTABLE is disabled. Duplicate IMA me...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:12.379805" elapsed="0.063934"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:12.443900" elapsed="0.000086"/>
</return>
<msg time="2025-10-05T15:45:12.444394" level="INFO">${dmesg_warnings} = [    0.301784] Hyper-V: Disabling IBT because of Hyper-V bug
[    0.411062] PCI: System does not support PCI
[    0.614724] device-mapper: core: CONFIG_IMA_DISABLE_HTABLE is disabled. Duplicate IMA me...</msg>
<var>${dmesg_warnings}</var>
<arg>dmesg --level=warn 2&gt;&amp;1 || dmesg | grep -i "warn" || echo "dmesg warning filter not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:12.379205" elapsed="0.065242"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:12.446224" level="INFO">Executing command 'dmesg -T 2&gt;&amp;1 | tail -500 || echo "dmesg timestamp format not available"'.</msg>
<msg time="2025-10-05T15:45:12.499662" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:12.499976" level="INFO">${output} = [Sun Oct  5 13:05:26 2025] Linux version 6.6.87.2-microsoft-standard-WSL2 (root@439a258ad544) (gcc (GCC) 11.2.0, GNU ld (GNU Binutils) 2.37) #1 SMP PREEMPT_DYNAMIC Thu Jun  5 18:30:46 UTC 2025
[Sun Oc...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:12.445809" elapsed="0.054215"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:12.500149" elapsed="0.000075"/>
</return>
<msg time="2025-10-05T15:45:12.500494" level="INFO">${dmesg_human} = [Sun Oct  5 13:05:26 2025] Linux version 6.6.87.2-microsoft-standard-WSL2 (root@439a258ad544) (gcc (GCC) 11.2.0, GNU ld (GNU Binutils) 2.37) #1 SMP PREEMPT_DYNAMIC Thu Jun  5 18:30:46 UTC 2025
[Sun Oc...</msg>
<var>${dmesg_human}</var>
<arg>dmesg -T 2&gt;&amp;1 | tail -${LOG_LINES_TO_COLLECT} || echo "dmesg timestamp format not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:12.444826" elapsed="0.055734"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.501509" level="INFO">${dmesg_output} = === dmesg - All Messages ===
[    0.000000] Linux version 6.6.87.2-microsoft-standard-WSL2 (root@439a258ad544) (gcc (GCC) 11.2.0, GNU ld (GNU Binutils) 2.37) #1 SMP PREEMPT_DYNAMIC Thu Jun  5 18:30:46...</msg>
<var>${dmesg_output}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== dmesg - All Messages ===</arg>
<arg>${dmesg_all}</arg>
<arg>=== dmesg - Errors and Critical ===</arg>
<arg>${dmesg_errors}</arg>
<arg>=== dmesg - Warnings ===</arg>
<arg>${dmesg_warnings}</arg>
<arg>=== dmesg - Recent (Human Readable) ===</arg>
<arg>${dmesg_human}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:12.500841" elapsed="0.000741"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.502205" level="INFO">${DMESG_OUTPUT} = === dmesg - All Messages ===
[    0.000000] Linux version 6.6.87.2-microsoft-standard-WSL2 (root@439a258ad544) (gcc (GCC) 11.2.0, GNU ld (GNU Binutils) 2.37) #1 SMP PREEMPT_DYNAMIC Thu Jun  5 18:30:46...</msg>
<arg>${DMESG_OUTPUT}</arg>
<arg>${dmesg_output}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:45:12.501884" elapsed="0.000389"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.503063" level="INFO">‚úÖ dmesg output collected</msg>
<arg>‚úÖ dmesg output collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.502554" elapsed="0.000745"/>
</kw>
<return>
<value>${dmesg_output}</value>
<status status="PASS" start="2025-10-05T15:45:12.503463" elapsed="0.000080"/>
</return>
<msg time="2025-10-05T15:45:12.503833" level="INFO">${dmesg_output} = === dmesg - All Messages ===
[    0.000000] Linux version 6.6.87.2-microsoft-standard-WSL2 (root@439a258ad544) (gcc (GCC) 11.2.0, GNU ld (GNU Binutils) 2.37) #1 SMP PREEMPT_DYNAMIC Thu Jun  5 18:30:46...</msg>
<var>${dmesg_output}</var>
<doc>üöÄ Collect kernel boot messages using dmesg</doc>
<status status="PASS" start="2025-10-05T15:45:12.290959" elapsed="0.213819"/>
</kw>
<kw name="Save Dmesg to File" owner="logs_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:45:12.506273" level="INFO">${timestamp} = 20251005_154512</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:45:12.505843" elapsed="0.000481"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.507197" level="INFO">${dmesg_file} = results/test22_event_logs/data/dmesg_20251005_154512.txt</msg>
<var>${dmesg_file}</var>
<arg>${DATA_DIR}/dmesg_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:45:12.506669" elapsed="0.000602"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.508019" level="INFO">${report} = =========================================
=== Kernel Boot Messages (dmesg) ===
=========================================
Timestamp: 20251005_154512
Target Server: alhxvdvitap01 (172.30.16.186)

=== dm...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== Kernel Boot Messages (dmesg) ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>${dmesg_output}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:12.507503" elapsed="0.000558"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:45:12.517654" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/dmesg_20251005_154512.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/dmesg_20251005_154512.txt&lt;/a&gt;'.</msg>
<arg>${dmesg_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:45:12.508255" elapsed="0.009505"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.518183" level="INFO">üìÑ dmesg output saved to: results/test22_event_logs/data/dmesg_20251005_154512.txt</msg>
<arg>üìÑ dmesg output saved to: ${dmesg_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.517941" elapsed="0.000440"/>
</kw>
<return>
<value>${dmesg_file}</value>
<status status="PASS" start="2025-10-05T15:45:12.518540" elapsed="0.000058"/>
</return>
<msg time="2025-10-05T15:45:12.518787" level="INFO">${dmesg_file} = results/test22_event_logs/data/dmesg_20251005_154512.txt</msg>
<var>${dmesg_file}</var>
<arg>${dmesg_output}</arg>
<doc>üíæ Save dmesg output to file</doc>
<status status="PASS" start="2025-10-05T15:45:12.505276" elapsed="0.013591"/>
</kw>
<kw name="File Should Exist" owner="SSHLibrary">
<msg time="2025-10-05T15:45:12.519072" level="WARN">Keyword 'File Should Exist' found both from a custom library 'SSHLibrary' and a standard library 'OperatingSystem'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'SSHLibrary.File Should Exist' or 'OperatingSystem.File Should Exist'.</msg>
<msg time="2025-10-05T15:45:12.536409" level="FAIL">File 'results/test22_event_logs/data/dmesg_20251005_154512.txt' does not exist.</msg>
<arg>${dmesg_file}</arg>
<doc>Fails if the given ``path`` does NOT point to an existing file.</doc>
<status status="FAIL" start="2025-10-05T15:45:12.519127" elapsed="0.021032">File 'results/test22_event_logs/data/dmesg_20251005_154512.txt' does not exist.</status>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<arg>${dmesg_output}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="NOT RUN" start="2025-10-05T15:45:12.540494" elapsed="0.000049"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>üìÑ dmesg output saved to: ${dmesg_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:45:12.540707" elapsed="0.000033"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>‚úÖ Kernel boot messages collected successfully</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:45:12.540916" elapsed="0.000027"/>
</kw>
<kw name="Log Test End" owner="logs_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.542364" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.542081" elapsed="0.000547"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.544046" level="INFO">üèÅ Completed Test: Critical - Collect Boot Messages (dmesg) | Status: FAIL</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.542967" elapsed="0.001294"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.544904" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.544624" elapsed="0.000518"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:45:12.541520" elapsed="0.003786"/>
</kw>
<doc>üöÄ Collect kernel boot messages using dmesg</doc>
<tag>boot</tag>
<tag>critical</tag>
<tag>dmesg</tag>
<tag>kernel</tag>
<tag>logs</tag>
<status status="FAIL" start="2025-10-05T15:45:12.288216" elapsed="0.257169">File 'results/test22_event_logs/data/dmesg_20251005_154512.txt' does not exist.</status>
</test>
<test id="s1-s5-t4" name="Critical - Collect System Log Files" line="70">
<kw name="Log Test Start" owner="logs_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.547821" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.547606" elapsed="0.000404"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.548399" level="INFO">üèÅ Starting Test: Critical - Collect System Log Files</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.548185" elapsed="0.001725"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.550591" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.550257" elapsed="0.001880"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:45:12.547234" elapsed="0.005027"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.553221" level="INFO">üîç Collecting system log files from /var/log...</msg>
<arg>üîç Collecting system log files from /var/log...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.553050" elapsed="0.000286"/>
</kw>
<kw name="Collect System Log Files" owner="logs_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.553929" level="INFO">üìÇ Collecting system log files from /var/log...</msg>
<arg>üìÇ Collecting system log files from /var/log...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.553811" elapsed="0.000230"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:12.554918" level="INFO">Executing command 'tail -500 /var/log/messages 2&gt;/dev/null || echo "No /var/log/messages"'.</msg>
<msg time="2025-10-05T15:45:12.567370" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:12.567566" level="INFO">${output} = No /var/log/messages</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:12.554660" elapsed="0.012929"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:12.567664" elapsed="0.000049"/>
</return>
<msg time="2025-10-05T15:45:12.567846" level="INFO">${messages} = No /var/log/messages</msg>
<var>${messages}</var>
<arg>tail -${LOG_LINES_TO_COLLECT} /var/log/messages 2&gt;/dev/null || echo "No /var/log/messages"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:12.554279" elapsed="0.013590"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:12.568616" level="INFO">Executing command 'tail -500 /var/log/syslog 2&gt;/dev/null || echo "No /var/log/syslog"'.</msg>
<msg time="2025-10-05T15:45:12.617511" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:12.617957" level="INFO">${output} = 2025-10-05T15:01:19.103982-05:00 DESKTOP-933PGUE wsl-pro-service[173]: #033[36mINFO#033[0m Reconnecting to Windows host in 60 seconds
2025-10-05T15:01:19.104033-05:00 DESKTOP-933PGUE wsl-pro-service[1...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:12.568461" elapsed="0.049556"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:12.618140" elapsed="0.000077"/>
</return>
<msg time="2025-10-05T15:45:12.618580" level="INFO">${syslog} = 2025-10-05T15:01:19.103982-05:00 DESKTOP-933PGUE wsl-pro-service[173]: #033[36mINFO#033[0m Reconnecting to Windows host in 60 seconds
2025-10-05T15:01:19.104033-05:00 DESKTOP-933PGUE wsl-pro-service[1...</msg>
<var>${syslog}</var>
<arg>tail -${LOG_LINES_TO_COLLECT} /var/log/syslog 2&gt;/dev/null || echo "No /var/log/syslog"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:12.568082" elapsed="0.050572"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:12.620196" level="INFO">Executing command 'tail -500 /var/log/secure 2&gt;/dev/null || tail -500 /var/log/auth.log 2&gt;/dev/null || echo "No secure/auth.log"'.</msg>
<msg time="2025-10-05T15:45:12.694480" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:12.694984" level="INFO">${output} = 2025-09-28T08:48:24.976178-05:00 DESKTOP-933PGUE systemd-logind[174]: New seat seat0.
2025-09-28T08:48:26.751638-05:00 DESKTOP-933PGUE login[300]: PAM unable to dlopen(pam_lastlog.so): /usr/lib/securi...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:12.619916" elapsed="0.075127"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:12.695180" elapsed="0.000085"/>
</return>
<msg time="2025-10-05T15:45:12.695514" level="INFO">${secure} = 2025-09-28T08:48:24.976178-05:00 DESKTOP-933PGUE systemd-logind[174]: New seat seat0.
2025-09-28T08:48:26.751638-05:00 DESKTOP-933PGUE login[300]: PAM unable to dlopen(pam_lastlog.so): /usr/lib/securi...</msg>
<var>${secure}</var>
<arg>tail -${LOG_LINES_TO_COLLECT} /var/log/secure 2&gt;/dev/null || tail -${LOG_LINES_TO_COLLECT} /var/log/auth.log 2&gt;/dev/null || echo "No secure/auth.log"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:12.619277" elapsed="0.076275"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:12.696889" level="INFO">Executing command 'tail -500 /var/log/cron 2&gt;/dev/null || tail -500 /var/log/cron.log 2&gt;/dev/null || echo "No cron log"'.</msg>
<msg time="2025-10-05T15:45:12.759780" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:12.760193" level="INFO">${output} = No cron log</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:12.696622" elapsed="0.063655"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:12.760414" elapsed="0.000082"/>
</return>
<msg time="2025-10-05T15:45:12.760754" level="INFO">${cron} = No cron log</msg>
<var>${cron}</var>
<arg>tail -${LOG_LINES_TO_COLLECT} /var/log/cron 2&gt;/dev/null || tail -${LOG_LINES_TO_COLLECT} /var/log/cron.log 2&gt;/dev/null || echo "No cron log"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:12.695981" elapsed="0.064817"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:12.762393" level="INFO">Executing command 'tail -500 /var/log/boot.log 2&gt;/dev/null || echo "No /var/log/boot.log"'.</msg>
<msg time="2025-10-05T15:45:12.809981" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:12.810285" level="INFO">${output} = No /var/log/boot.log</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:12.762046" elapsed="0.048278"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:12.810484" elapsed="0.000112"/>
</return>
<msg time="2025-10-05T15:45:12.810907" level="INFO">${boot} = No /var/log/boot.log</msg>
<var>${boot}</var>
<arg>tail -${LOG_LINES_TO_COLLECT} /var/log/boot.log 2&gt;/dev/null || echo "No /var/log/boot.log"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:12.761306" elapsed="0.049636"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:12.814668" level="INFO">Executing command 'tail -500 /var/log/kern.log 2&gt;/dev/null || echo "No /var/log/kern.log"'.</msg>
<msg time="2025-10-05T15:45:12.879937" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:12.880364" level="INFO">${output} = 2025-09-29T22:05:14.153276-05:00 DESKTOP-933PGUE kernel: hv_pci cb70a81e-f157-4555-9eeb-a7bd93232cad: PCI VMBus probing: Using version 0x10004
2025-09-29T22:05:14.153277-05:00 DESKTOP-933PGUE kernel: ...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:12.811843" elapsed="0.068578"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:12.881331" elapsed="0.000069"/>
</return>
<msg time="2025-10-05T15:45:12.881648" level="INFO">${kern} = 2025-09-29T22:05:14.153276-05:00 DESKTOP-933PGUE kernel: hv_pci cb70a81e-f157-4555-9eeb-a7bd93232cad: PCI VMBus probing: Using version 0x10004
2025-09-29T22:05:14.153277-05:00 DESKTOP-933PGUE kernel: ...</msg>
<var>${kern}</var>
<arg>tail -${LOG_LINES_TO_COLLECT} /var/log/kern.log 2&gt;/dev/null || echo "No /var/log/kern.log"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:12.811257" elapsed="0.070423"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:12.882667" level="INFO">Executing command 'ls -lh /var/log/*.log /var/log/messages /var/log/syslog 2&gt;/dev/null || echo "Log file listing not available"'.</msg>
<msg time="2025-10-05T15:45:12.939793" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:12.940149" level="INFO">${output} = -rw-r--r-- 1 root   root  32K Sep 28 10:17 /var/log/alternatives.log
-rw-r----- 1 syslog adm   57K Oct  5 15:45 /var/log/auth.log
-rw-r--r-- 1 root   root 116K Aug  5 11:55 /var/log/bootstrap.log
-rw-...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:12.882403" elapsed="0.057908"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:12.940506" elapsed="0.000090"/>
</return>
<msg time="2025-10-05T15:45:12.940882" level="INFO">${log_list} = -rw-r--r-- 1 root   root  32K Sep 28 10:17 /var/log/alternatives.log
-rw-r----- 1 syslog adm   57K Oct  5 15:45 /var/log/auth.log
-rw-r--r-- 1 root   root 116K Aug  5 11:55 /var/log/bootstrap.log
-rw-...</msg>
<var>${log_list}</var>
<arg>ls -lh /var/log/*.log /var/log/messages /var/log/syslog 2&gt;/dev/null || echo "Log file listing not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:12.882005" elapsed="0.058928"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.942222" level="INFO">${system_logs} = === /var/log Directory ===
-rw-r--r-- 1 root   root  32K Sep 28 10:17 /var/log/alternatives.log
-rw-r----- 1 syslog adm   57K Oct  5 15:45 /var/log/auth.log
-rw-r--r-- 1 root   root 116K Aug  5 11:55 ...</msg>
<var>${system_logs}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== /var/log Directory ===</arg>
<arg>${log_list}</arg>
<arg>=== /var/log/messages ===</arg>
<arg>${messages}</arg>
<arg>=== /var/log/syslog ===</arg>
<arg>${syslog}</arg>
<arg>=== /var/log/secure (auth.log) ===</arg>
<arg>${secure}</arg>
<arg>=== /var/log/cron ===</arg>
<arg>${cron}</arg>
<arg>=== /var/log/boot.log ===</arg>
<arg>${boot}</arg>
<arg>=== /var/log/kern.log ===</arg>
<arg>${kern}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:12.941279" elapsed="0.000996"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.943392" level="INFO">${SYSTEM_LOGS} = === /var/log Directory ===
-rw-r--r-- 1 root   root  32K Sep 28 10:17 /var/log/alternatives.log
-rw-r----- 1 syslog adm   57K Oct  5 15:45 /var/log/auth.log
-rw-r--r-- 1 root   root 116K Aug  5 11:55 ...</msg>
<arg>${SYSTEM_LOGS}</arg>
<arg>${system_logs}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:45:12.942948" elapsed="0.000524"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.943974" level="INFO">‚úÖ System log files collected</msg>
<arg>‚úÖ System log files collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.943672" elapsed="0.000516"/>
</kw>
<return>
<value>${system_logs}</value>
<status status="PASS" start="2025-10-05T15:45:12.944315" elapsed="0.000068"/>
</return>
<msg time="2025-10-05T15:45:12.944616" level="INFO">${system_logs} = === /var/log Directory ===
-rw-r--r-- 1 root   root  32K Sep 28 10:17 /var/log/alternatives.log
-rw-r----- 1 syslog adm   57K Oct  5 15:45 /var/log/auth.log
-rw-r--r-- 1 root   root 116K Aug  5 11:55 ...</msg>
<var>${system_logs}</var>
<doc>üìÇ Collect important system log files from /var/log</doc>
<status status="PASS" start="2025-10-05T15:45:12.553579" elapsed="0.391082"/>
</kw>
<kw name="Save System Logs to File" owner="logs_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:45:12.946388" level="INFO">${timestamp} = 20251005_154512</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:45:12.946002" elapsed="0.000465"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.947438" level="INFO">${syslog_file} = results/test22_event_logs/data/system_logs_20251005_154512.txt</msg>
<var>${syslog_file}</var>
<arg>${DATA_DIR}/system_logs_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:45:12.946870" elapsed="0.000621"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.948605" level="INFO">${report} = =========================================
=== System Log Files (/var/log) ===
=========================================
Timestamp: 20251005_154512
Target Server: alhxvdvitap01 (172.30.16.186)
Lines pe...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== System Log Files (/var/log) ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>Lines per Log: ${LOG_LINES_TO_COLLECT}</arg>
<arg>${system_logs}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:12.947698" elapsed="0.000960"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:45:12.961000" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/system_logs_20251005_154512.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/system_logs_20251005_154512.txt&lt;/a&gt;'.</msg>
<arg>${syslog_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:45:12.948925" elapsed="0.012240"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.961688" level="INFO">üìÑ System logs saved to: results/test22_event_logs/data/system_logs_20251005_154512.txt</msg>
<arg>üìÑ System logs saved to: ${syslog_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.961357" elapsed="0.000480"/>
</kw>
<return>
<value>${syslog_file}</value>
<status status="PASS" start="2025-10-05T15:45:12.961936" elapsed="0.000052"/>
</return>
<msg time="2025-10-05T15:45:12.962166" level="INFO">${syslog_file} = results/test22_event_logs/data/system_logs_20251005_154512.txt</msg>
<var>${syslog_file}</var>
<arg>${system_logs}</arg>
<doc>üíæ Save system logs to file</doc>
<status status="PASS" start="2025-10-05T15:45:12.945198" elapsed="0.016999"/>
</kw>
<kw name="File Should Exist" owner="SSHLibrary">
<msg time="2025-10-05T15:45:12.962322" level="WARN">Keyword 'File Should Exist' found both from a custom library 'SSHLibrary' and a standard library 'OperatingSystem'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'SSHLibrary.File Should Exist' or 'OperatingSystem.File Should Exist'.</msg>
<msg time="2025-10-05T15:45:12.972317" level="FAIL">File 'results/test22_event_logs/data/system_logs_20251005_154512.txt' does not exist.</msg>
<arg>${syslog_file}</arg>
<doc>Fails if the given ``path`` does NOT point to an existing file.</doc>
<status status="FAIL" start="2025-10-05T15:45:12.962369" elapsed="0.013026">File 'results/test22_event_logs/data/system_logs_20251005_154512.txt' does not exist.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>üìÑ System logs saved to: ${syslog_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:45:12.975765" elapsed="0.000059"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>‚úÖ System log files collected successfully</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:45:12.975996" elapsed="0.000031"/>
</kw>
<kw name="Log Test End" owner="logs_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.977388" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.977155" elapsed="0.000407"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.978035" level="INFO">üèÅ Completed Test: Critical - Collect System Log Files | Status: FAIL</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.977744" elapsed="0.000436"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.978656" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.978347" elapsed="0.000465"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:45:12.976473" elapsed="0.002491"/>
</kw>
<doc>üìÇ Collect important system log files from /var/log</doc>
<tag>critical</tag>
<tag>logs</tag>
<tag>system</tag>
<tag>var_log</tag>
<status status="FAIL" start="2025-10-05T15:45:12.546148" elapsed="0.432904">File 'results/test22_event_logs/data/system_logs_20251005_154512.txt' does not exist.</status>
</test>
<test id="s1-s5-t5" name="Critical - Check for Critical Errors in Journalctl" line="88">
<kw name="Log Test Start" owner="logs_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.980875" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.980698" elapsed="0.000322"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.981464" level="INFO">üèÅ Starting Test: Critical - Check for Critical Errors in Journalctl</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.981214" elapsed="0.000388"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.981954" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.981799" elapsed="0.000282"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:45:12.980354" elapsed="0.001830"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.982694" level="INFO">üîç Searching for critical errors in journal...</msg>
<arg>üîç Searching for critical errors in journal...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.982351" elapsed="0.000648"/>
</kw>
<kw name="Search Critical Errors in Journal" owner="logs_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:12.983853" level="INFO">‚ö†Ô∏è Searching for critical errors...</msg>
<arg>‚ö†Ô∏è Searching for critical errors...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:12.983688" elapsed="0.000269"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:12.984518" level="INFO">Executing command 'journalctl --no-pager -p emerg -n 100 2&gt;&amp;1 || echo "Emergency level search not available"'.</msg>
<msg time="2025-10-05T15:45:12.997236" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:12.997459" level="INFO">${output} = -- No entries --</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:12.984399" elapsed="0.013085"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:12.997560" elapsed="0.000049"/>
</return>
<msg time="2025-10-05T15:45:12.997852" level="INFO">${emerg_errors} = -- No entries --</msg>
<var>${emerg_errors}</var>
<arg>journalctl --no-pager -p emerg -n 100 2&gt;&amp;1 || echo "Emergency level search not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:12.984132" elapsed="0.013760"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:12.998945" level="INFO">Executing command 'journalctl --no-pager -p alert -n 100 2&gt;&amp;1 || echo "Alert level search not available"'.</msg>
<msg time="2025-10-05T15:45:13.063235" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:13.063481" level="INFO">${output} = Oct 05 12:31:21 alhxvdvitap01 sudo[626]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 12:31:55 alhxvdvitap01 sudo[953]:      sac : unable to resolve hos...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:12.998714" elapsed="0.064804"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:13.063597" elapsed="0.000048"/>
</return>
<msg time="2025-10-05T15:45:13.063814" level="INFO">${alert_errors} = Oct 05 12:31:21 alhxvdvitap01 sudo[626]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 12:31:55 alhxvdvitap01 sudo[953]:      sac : unable to resolve hos...</msg>
<var>${alert_errors}</var>
<arg>journalctl --no-pager -p alert -n 100 2&gt;&amp;1 || echo "Alert level search not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:12.998235" elapsed="0.065644"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:13.064640" level="INFO">Executing command 'journalctl --no-pager -p crit -n 100 2&gt;&amp;1 || echo "Critical level search not available"'.</msg>
<msg time="2025-10-05T15:45:13.125629" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:13.125906" level="INFO">${output} = Sep 28 08:51:05 DESKTOP-933PGUE sudo[1026]: pam_unix(sudo:auth): auth could not identify password for [sac]
-- Boot 1eee50944e4745269e3cc8421a05f8ec --
Sep 29 14:21:47 DESKTOP-933PGUE sudo[10015]: pam...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:13.064502" elapsed="0.061444"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:13.126051" elapsed="0.000064"/>
</return>
<msg time="2025-10-05T15:45:13.126315" level="INFO">${crit_errors} = Sep 28 08:51:05 DESKTOP-933PGUE sudo[1026]: pam_unix(sudo:auth): auth could not identify password for [sac]
-- Boot 1eee50944e4745269e3cc8421a05f8ec --
Sep 29 14:21:47 DESKTOP-933PGUE sudo[10015]: pam...</msg>
<var>${crit_errors}</var>
<arg>journalctl --no-pager -p crit -n 100 2&gt;&amp;1 || echo "Critical level search not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:13.064156" elapsed="0.062193"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:13.127491" level="INFO">Executing command 'journalctl --no-pager -n 500 | grep -i "critical|emergency|fatal|panic" || echo "No critical keywords found"'.</msg>
<msg time="2025-10-05T15:45:13.245734" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:13.246064" level="INFO">${output} = No critical keywords found</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:13.127354" elapsed="0.118755"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:13.246242" elapsed="0.000084"/>
</return>
<msg time="2025-10-05T15:45:13.246728" level="INFO">${error_keywords} = No critical keywords found</msg>
<var>${error_keywords}</var>
<arg>journalctl --no-pager -n ${LOG_LINES_TO_COLLECT} | grep -i "critical\|emergency\|fatal\|panic" || echo "No critical keywords found"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:13.126770" elapsed="0.120026"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:13.247753" level="INFO">${critical_errors} = === Emergency Level (Priority 0) ===
-- No entries --

=== Alert Level (Priority 1) ===
Oct 05 12:31:21 alhxvdvitap01 sudo[626]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in n...</msg>
<var>${critical_errors}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Emergency Level (Priority 0) ===</arg>
<arg>${emerg_errors}</arg>
<arg>=== Alert Level (Priority 1) ===</arg>
<arg>${alert_errors}</arg>
<arg>=== Critical Level (Priority 2) ===</arg>
<arg>${crit_errors}</arg>
<arg>=== Critical Keywords in Recent Logs ===</arg>
<arg>${error_keywords}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:13.247231" elapsed="0.000586"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:13.248317" level="INFO">${CRITICAL_ERRORS} = === Emergency Level (Priority 0) ===
-- No entries --

=== Alert Level (Priority 1) ===
Oct 05 12:31:21 alhxvdvitap01 sudo[626]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in n...</msg>
<arg>${CRITICAL_ERRORS}</arg>
<arg>${critical_errors}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:45:13.248032" elapsed="0.000356"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:13.248831" level="INFO">‚úÖ Critical error search completed</msg>
<arg>‚úÖ Critical error search completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:13.248605" elapsed="0.000382"/>
</kw>
<return>
<value>${critical_errors}</value>
<status status="PASS" start="2025-10-05T15:45:13.249067" elapsed="0.000062"/>
</return>
<msg time="2025-10-05T15:45:13.249373" level="INFO">${critical_errors} = === Emergency Level (Priority 0) ===
-- No entries --

=== Alert Level (Priority 1) ===
Oct 05 12:31:21 alhxvdvitap01 sudo[626]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in n...</msg>
<var>${critical_errors}</var>
<doc>‚ö†Ô∏è Search for critical and emergency level errors</doc>
<status status="PASS" start="2025-10-05T15:45:12.983282" elapsed="0.266131"/>
</kw>
<kw name="Save Critical Errors to File" owner="logs_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:45:13.250524" level="INFO">${timestamp} = 20251005_154513</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:45:13.250201" elapsed="0.000366"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:13.251078" level="INFO">${errors_file} = results/test22_event_logs/data/critical_errors_20251005_154513.txt</msg>
<var>${errors_file}</var>
<arg>${DATA_DIR}/critical_errors_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:45:13.250747" elapsed="0.000361"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:13.251598" level="INFO">${report} = =========================================
=== Critical Errors Analysis ===
=========================================
Timestamp: 20251005_154513
Target Server: alhxvdvitap01 (172.30.16.186)
Search Keyw...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== Critical Errors Analysis ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>Search Keywords: ${CRITICAL_ERROR_KEYWORDS}</arg>
<arg>${critical_errors}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:13.251218" elapsed="0.000409"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:45:13.258326" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/critical_errors_20251005_154513.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/critical_errors_20251005_154513.txt&lt;/a&gt;'.</msg>
<arg>${errors_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:45:13.251753" elapsed="0.006779"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:13.259220" level="INFO">üìÑ Critical errors saved to: results/test22_event_logs/data/critical_errors_20251005_154513.txt</msg>
<arg>üìÑ Critical errors saved to: ${errors_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:13.258881" elapsed="0.000481"/>
</kw>
<return>
<value>${errors_file}</value>
<status status="PASS" start="2025-10-05T15:45:13.259428" elapsed="0.000051"/>
</return>
<msg time="2025-10-05T15:45:13.259681" level="INFO">${errors_file} = results/test22_event_logs/data/critical_errors_20251005_154513.txt</msg>
<var>${errors_file}</var>
<arg>${critical_errors}</arg>
<doc>üíæ Save critical errors to file</doc>
<status status="PASS" start="2025-10-05T15:45:13.249729" elapsed="0.009983"/>
</kw>
<kw name="Count Critical Errors" owner="logs_keywords">
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:13.261675" level="INFO">Executing command 'echo "=== Emergency Level (Priority 0) ===
-- No entries --

=== Alert Level (Priority 1) ===
Oct 05 12:31:21 alhxvdvitap01 sudo[626]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 12:31:55 alhxvdvitap01 sudo[953]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 12:32:45 alhxvdvitap01 sudo[1371]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 13:09:11 alhxvdvitap01 sudo[1844]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 13:09:34 alhxvdvitap01 sudo[1869]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 13:09:54 alhxvdvitap01 sudo[1872]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 13:10:18 alhxvdvitap01 sudo[1899]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 13:10:41 alhxvdvitap01 sudo[1924]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 13:11:01 alhxvdvitap01 sudo[1929]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 13:11:25 alhxvdvitap01 sudo[1934]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 13:11:45 alhxvdvitap01 sudo[1959]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 13:12:08 alhxvdvitap01 sudo[1962]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 14:13:59 alhxvdvitap01 sudo[4020]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 15:24:43 alhxvdvitap01 sudo[8900]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 15:25:28 alhxvdvitap01 sudo[9185]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 15:30:32 alhxvdvitap01 sudo[11090]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 15:30:53 alhxvdvitap01 sudo[11117]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 15:31:16 alhxvdvitap01 sudo[11120]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 15:31:39 alhxvdvitap01 sudo[11179]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 15:32:00 alhxvdvitap01 sudo[11205]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 15:32:22 alhxvdvitap01 sudo[11296]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 15:32:45 alhxvdvitap01 sudo[11341]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 15:33:06 alhxvdvitap01 sudo[11400]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 15:33:29 alhxvdvitap01 sudo[11403]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution

=== Critical Level (Priority 2) ===
Sep 28 08:51:05 DESKTOP-933PGUE sudo[1026]: pam_unix(sudo:auth): auth could not identify password for [sac]
-- Boot 1eee50944e4745269e3cc8421a05f8ec --
Sep 29 14:21:47 DESKTOP-933PGUE sudo[10015]: pam_unix(sudo:auth): auth could not identify password for [sac]
-- Boot c3e9f72d9501467cb833a308f82df79a --
Oct 05 12:31:21 alhxvdvitap01 sudo[626]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 12:31:55 alhxvdvitap01 sudo[953]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 12:32:45 alhxvdvitap01 sudo[1371]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 13:09:11 alhxvdvitap01 sudo[1844]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 13:09:11 alhxvdvitap01 sudo[1844]: pam_unix(sudo:auth): auth could not identify password for [sac]
Oct 05 13:09:34 alhxvdvitap01 sudo[1869]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 13:09:34 alhxvdvitap01 sudo[1869]: pam_unix(sudo:auth): auth could not identify password for [sac]
Oct 05 13:09:54 alhxvdvitap01 sudo[1872]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 13:09:54 alhxvdvitap01 sudo[1872]: pam_unix(sudo:auth): auth could not identify password for [sac]
Oct 05 13:10:18 alhxvdvitap01 sudo[1899]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 13:10:18 alhxvdvitap01 sudo[1899]: pam_unix(sudo:auth): auth could not identify password for [sac]
Oct 05 13:10:41 alhxvdvitap01 sudo[1924]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 13:10:41 alhxvdvitap01 sudo[1924]: pam_unix(sudo:auth): auth could not identify password for [sac]
Oct 05 13:11:01 alhxvdvitap01 sudo[1929]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 13:11:01 alhxvdvitap01 sudo[1929]: pam_unix(sudo:auth): auth could not identify password for [sac]
Oct 05 13:11:25 alhxvdvitap01 sudo[1934]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 13:11:25 alhxvdvitap01 sudo[1934]: pam_unix(sudo:auth): auth could not identify password for [sac]
Oct 05 13:11:45 alhxvdvitap01 sudo[1959]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 13:11:45 alhxvdvitap01 sudo[1959]: pam_unix(sudo:auth): auth could not identify password for [sac]
Oct 05 13:12:08 alhxvdvitap01 sudo[1962]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 13:12:08 alhxvdvitap01 sudo[1962]: pam_unix(sudo:auth): auth could not identify password for [sac]
Oct 05 14:13:59 alhxvdvitap01 sudo[4020]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 15:24:43 alhxvdvitap01 sudo[8900]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 15:25:28 alhxvdvitap01 sudo[9185]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 15:30:32 alhxvdvitap01 sudo[11090]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 15:30:32 alhxvdvitap01 sudo[11090]: pam_unix(sudo:auth): auth could not identify password for [sac]
Oct 05 15:30:53 alhxvdvitap01 sudo[11117]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 15:30:53 alhxvdvitap01 sudo[11117]: pam_unix(sudo:auth): auth could not identify password for [sac]
Oct 05 15:31:16 alhxvdvitap01 sudo[11120]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 15:31:16 alhxvdvitap01 sudo[11120]: pam_unix(sudo:auth): auth could not identify password for [sac]
Oct 05 15:31:39 alhxvdvitap01 sudo[11179]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 15:31:39 alhxvdvitap01 sudo[11179]: pam_unix(sudo:auth): auth could not identify password for [sac]
Oct 05 15:32:00 alhxvdvitap01 sudo[11205]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 15:32:00 alhxvdvitap01 sudo[11205]: pam_unix(sudo:auth): auth could not identify password for [sac]
Oct 05 15:32:22 alhxvdvitap01 sudo[11296]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 15:32:22 alhxvdvitap01 sudo[11296]: pam_unix(sudo:auth): auth could not identify password for [sac]
Oct 05 15:32:45 alhxvdvitap01 sudo[11341]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 15:32:45 alhxvdvitap01 sudo[11341]: pam_unix(sudo:auth): auth could not identify password for [sac]
Oct 05 15:33:06 alhxvdvitap01 sudo[11400]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 15:33:06 alhxvdvitap01 sudo[11400]: pam_unix(sudo:auth): auth could not identify password for [sac]
Oct 05 15:33:29 alhxvdvitap01 sudo[11403]:      sac : unable to resolve host alhxvdvitap01: Temporary failure in name resolution
Oct 05 15:33:29 alhxvdvitap01 sudo[11403]: pam_unix(sudo:auth): auth could not identify password for [sac]

=== Critical Keywords in Recent Logs ===
No critical keywords found" | grep -viE "no entries|not available|no critical" | wc -l'.</msg>
<msg time="2025-10-05T15:45:13.308783" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:13.308968" level="INFO">${output} = 77</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:13.261416" elapsed="0.047575"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:13.309063" elapsed="0.000044"/>
</return>
<msg time="2025-10-05T15:45:13.309391" level="INFO">${error_lines} = 77</msg>
<var>${error_lines}</var>
<arg>echo "${critical_errors}" | grep -viE "no entries|not available|no critical" | wc -l</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:13.260302" elapsed="0.049144"/>
</kw>
<kw name="Convert To Integer" owner="BuiltIn">
<msg time="2025-10-05T15:45:13.310189" level="INFO">${error_count} = 77</msg>
<var>${error_count}</var>
<arg>${error_lines}</arg>
<doc>Converts the given item to an integer number.</doc>
<status status="PASS" start="2025-10-05T15:45:13.309739" elapsed="0.000492"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:13.310820" level="INFO">üìä Critical error count: 77</msg>
<arg>üìä Critical error count: ${error_count}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:13.310471" elapsed="0.000511"/>
</kw>
<return>
<value>${error_count}</value>
<status status="PASS" start="2025-10-05T15:45:13.311070" elapsed="0.000038"/>
</return>
<msg time="2025-10-05T15:45:13.311230" level="INFO">${error_count} = 77</msg>
<var>${error_count}</var>
<arg>${critical_errors}</arg>
<doc>üî¢ Count the number of critical errors found</doc>
<status status="PASS" start="2025-10-05T15:45:13.259966" elapsed="0.051284"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:13.311506" level="INFO">‚ö†Ô∏è Critical error count: 77</msg>
<arg>‚ö†Ô∏è Critical error count: ${error_count}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:13.311357" elapsed="0.000246"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:13.311898" level="INFO">üìÑ Critical errors saved to: results/test22_event_logs/data/critical_errors_20251005_154513.txt</msg>
<arg>üìÑ Critical errors saved to: ${errors_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:13.311731" elapsed="0.000272"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:13.312225" level="INFO">‚úÖ Critical error validation completed</msg>
<arg>‚úÖ Critical error validation completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:13.312125" elapsed="0.000186"/>
</kw>
<kw name="Log Test End" owner="logs_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:13.313280" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:13.313166" elapsed="0.000206"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:13.313647" level="INFO">üèÅ Completed Test: Critical - Check for Critical Errors in Journalctl | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:13.313490" elapsed="0.000246"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:13.313967" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:13.313852" elapsed="0.000204"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:45:13.312547" elapsed="0.001592"/>
</kw>
<doc>‚ö†Ô∏è Search for critical and emergency level errors in journal</doc>
<tag>critical</tag>
<tag>errors</tag>
<tag>journalctl</tag>
<tag>validation</tag>
<status status="PASS" start="2025-10-05T15:45:12.979511" elapsed="0.334689"/>
</test>
<test id="s1-s5-t6" name="Critical - Validate Clean Boot Sequence" line="107">
<kw name="Log Test Start" owner="logs_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:13.315620" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:13.315492" elapsed="0.000222"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:13.315965" level="INFO">üèÅ Starting Test: Critical - Validate Clean Boot Sequence</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:13.315832" elapsed="0.000220"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:13.316289" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:13.316167" elapsed="0.000203"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:45:13.315214" elapsed="0.001253"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:13.316666" level="INFO">üîç Validating boot sequence...</msg>
<arg>üîç Validating boot sequence...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:13.316572" elapsed="0.000178"/>
</kw>
<kw name="Analyze Boot Sequence" owner="logs_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:13.317201" level="INFO">üöÄ Analyzing boot sequence...</msg>
<arg>üöÄ Analyzing boot sequence...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:13.317110" elapsed="0.000175"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:13.318089" level="INFO">Executing command 'systemd-analyze time 2&gt;&amp;1 || echo "systemd-analyze not available"'.</msg>
<msg time="2025-10-05T15:45:13.365629" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:13.365916" level="INFO">${output} = Startup finished in 2.752s (userspace) 
graphical.target reached after 2.700s in userspace.</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:13.317686" elapsed="0.048267"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:13.366069" elapsed="0.000072"/>
</return>
<msg time="2025-10-05T15:45:13.366379" level="INFO">${boot_time} = Startup finished in 2.752s (userspace) 
graphical.target reached after 2.700s in userspace.</msg>
<var>${boot_time}</var>
<arg>systemd-analyze time 2&gt;&amp;1 || echo "systemd-analyze not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:13.317444" elapsed="0.048985"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:13.368394" level="INFO">Executing command 'systemd-analyze blame 2&gt;&amp;1 | head -30 || echo "systemd-analyze blame not available"'.</msg>
<msg time="2025-10-05T15:45:13.795087" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:13.795298" level="INFO">${output} = 1.538s landscape-client.service
 465ms snapd.seeded.service
 381ms dev-sdd.device
 334ms snapd.service
 321ms user@1000.service
 279ms wsl-pro.service
 269ms systemd-resolved.service
 198ms systemd-tm...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:13.368151" elapsed="0.427174"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:13.795406" elapsed="0.000050"/>
</return>
<msg time="2025-10-05T15:45:13.795603" level="INFO">${boot_blame} = 1.538s landscape-client.service
 465ms snapd.seeded.service
 381ms dev-sdd.device
 334ms snapd.service
 321ms user@1000.service
 279ms wsl-pro.service
 269ms systemd-resolved.service
 198ms systemd-tm...</msg>
<var>${boot_blame}</var>
<arg>systemd-analyze blame 2&gt;&amp;1 | head -30 || echo "systemd-analyze blame not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:13.367569" elapsed="0.428063"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:13.796348" level="INFO">Executing command 'systemd-analyze critical-chain 2&gt;&amp;1 | head -30 || echo "systemd-analyze critical-chain not available"'.</msg>
<msg time="2025-10-05T15:45:14.268884" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:14.269153" level="INFO">${output} = The time when unit became active or started is printed after the "@" character.
The time the unit took to start is printed after the "+" character.

graphical.target @2.700s
‚îî‚îÄmulti-user.target @2.695...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:13.796212" elapsed="0.472982"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:14.269367" elapsed="0.000081"/>
</return>
<msg time="2025-10-05T15:45:14.269640" level="INFO">${boot_critical} = The time when unit became active or started is printed after the "@" character.
The time the unit took to start is printed after the "+" character.

graphical.target @2.700s
‚îî‚îÄmulti-user.target @2.695...</msg>
<var>${boot_critical}</var>
<arg>systemd-analyze critical-chain 2&gt;&amp;1 | head -30 || echo "systemd-analyze critical-chain not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:13.795854" elapsed="0.473819"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:14.270453" level="INFO">Executing command 'journalctl --no-pager -b | head -100 2&gt;&amp;1 || echo "Boot journal not available"'.</msg>
<msg time="2025-10-05T15:45:14.325789" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:14.326063" level="INFO">${output} = Oct 05 12:06:43 DESKTOP-933PGUE kernel: Linux version 6.6.87.2-microsoft-standard-WSL2 (root@439a258ad544) (gcc (GCC) 11.2.0, GNU ld (GNU Binutils) 2.37) #1 SMP PREEMPT_DYNAMIC Thu Jun  5 18:30:46 UTC...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:14.270283" elapsed="0.055827"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:14.326224" elapsed="0.000068"/>
</return>
<msg time="2025-10-05T15:45:14.326603" level="INFO">${boot_messages} = Oct 05 12:06:43 DESKTOP-933PGUE kernel: Linux version 6.6.87.2-microsoft-standard-WSL2 (root@439a258ad544) (gcc (GCC) 11.2.0, GNU ld (GNU Binutils) 2.37) #1 SMP PREEMPT_DYNAMIC Thu Jun  5 18:30:46 UTC...</msg>
<var>${boot_messages}</var>
<arg>journalctl --no-pager -b | head -100 2&gt;&amp;1 || echo "Boot journal not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:14.269913" elapsed="0.056742"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:14.327597" level="INFO">Executing command 'journalctl --no-pager -b -p err 2&gt;&amp;1 || echo "Boot errors not available"'.</msg>
<msg time="2025-10-05T15:45:14.385690" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:14.385892" level="INFO">${output} = Oct 05 12:06:43 DESKTOP-933PGUE kernel: PCI: Fatal: No config space access function found
Oct 05 12:06:43 DESKTOP-933PGUE kernel: misc dxg: dxgk: dxgkio_is_feature_enabled: Ioctl failed: -22
Oct 05 12...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:14.327457" elapsed="0.058459"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:14.385994" elapsed="0.000047"/>
</return>
<msg time="2025-10-05T15:45:14.386175" level="INFO">${boot_failed} = Oct 05 12:06:43 DESKTOP-933PGUE kernel: PCI: Fatal: No config space access function found
Oct 05 12:06:43 DESKTOP-933PGUE kernel: misc dxg: dxgk: dxgkio_is_feature_enabled: Ioctl failed: -22
Oct 05 12...</msg>
<var>${boot_failed}</var>
<arg>journalctl --no-pager -b -p err 2&gt;&amp;1 || echo "Boot errors not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:14.327136" elapsed="0.059062"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.386784" level="INFO">${boot_analysis} = === Boot Time Analysis ===
Startup finished in 2.752s (userspace) 
graphical.target reached after 2.700s in userspace.

=== Boot Blame (Slowest Services) ===
1.538s landscape-client.service
 465ms sna...</msg>
<var>${boot_analysis}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Boot Time Analysis ===</arg>
<arg>${boot_time}</arg>
<arg>=== Boot Blame (Slowest Services) ===</arg>
<arg>${boot_blame}</arg>
<arg>=== Boot Critical Chain ===</arg>
<arg>${boot_critical}</arg>
<arg>=== Boot Messages (First 100) ===</arg>
<arg>${boot_messages}</arg>
<arg>=== Boot Errors ===</arg>
<arg>${boot_failed}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:14.386351" elapsed="0.000532"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.387259" level="INFO">‚úÖ Boot sequence analysis completed</msg>
<arg>‚úÖ Boot sequence analysis completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.387054" elapsed="0.000337"/>
</kw>
<return>
<value>${boot_analysis}</value>
<status status="PASS" start="2025-10-05T15:45:14.387457" elapsed="0.000048"/>
</return>
<msg time="2025-10-05T15:45:14.387674" level="INFO">${boot_analysis} = === Boot Time Analysis ===
Startup finished in 2.752s (userspace) 
graphical.target reached after 2.700s in userspace.

=== Boot Blame (Slowest Services) ===
1.538s landscape-client.service
 465ms sna...</msg>
<var>${boot_analysis}</var>
<doc>üöÄ Analyze system boot sequence for errors</doc>
<status status="PASS" start="2025-10-05T15:45:13.316928" elapsed="1.070768"/>
</kw>
<kw name="Save Boot Analysis to File" owner="logs_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:45:14.388691" level="INFO">${timestamp} = 20251005_154514</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:45:14.388431" elapsed="0.000298"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.389850" level="INFO">${boot_file} = results/test22_event_logs/data/boot_analysis_20251005_154514.txt</msg>
<var>${boot_file}</var>
<arg>${DATA_DIR}/boot_analysis_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:45:14.389577" elapsed="0.000310"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.390517" level="INFO">${report} = =========================================
=== Boot Sequence Analysis ===
=========================================
Timestamp: 20251005_154514
Target Server: alhxvdvitap01 (172.30.16.186)

=== Boot Tim...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== Boot Sequence Analysis ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>${boot_analysis}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:14.390038" elapsed="0.000521"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:45:14.398407" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/boot_analysis_20251005_154514.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/boot_analysis_20251005_154514.txt&lt;/a&gt;'.</msg>
<arg>${boot_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:45:14.390744" elapsed="0.007891"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.399235" level="INFO">üìÑ Boot analysis saved to: results/test22_event_logs/data/boot_analysis_20251005_154514.txt</msg>
<arg>üìÑ Boot analysis saved to: ${boot_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.398934" elapsed="0.000427"/>
</kw>
<return>
<value>${boot_file}</value>
<status status="PASS" start="2025-10-05T15:45:14.399425" elapsed="0.000050"/>
</return>
<msg time="2025-10-05T15:45:14.399661" level="INFO">${boot_file} = results/test22_event_logs/data/boot_analysis_20251005_154514.txt</msg>
<var>${boot_file}</var>
<arg>${boot_analysis}</arg>
<doc>üíæ Save boot analysis to file</doc>
<status status="PASS" start="2025-10-05T15:45:14.387884" elapsed="0.011803"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.400052" level="INFO">üìÑ Boot analysis saved to: results/test22_event_logs/data/boot_analysis_20251005_154514.txt</msg>
<arg>üìÑ Boot analysis saved to: ${boot_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.399825" elapsed="0.000322"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.400411" level="INFO">‚úÖ Boot sequence validation completed</msg>
<arg>‚úÖ Boot sequence validation completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.400293" elapsed="0.000214"/>
</kw>
<kw name="Log Test End" owner="logs_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.401280" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.401163" elapsed="0.000211"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.401661" level="INFO">üèÅ Completed Test: Critical - Validate Clean Boot Sequence | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.401484" elapsed="0.000280"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.402006" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.401872" elapsed="0.000228"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:45:14.400822" elapsed="0.001373"/>
</kw>
<doc>üöÄ Validate system boot sequence is clean without errors</doc>
<tag>boot</tag>
<tag>critical</tag>
<tag>sequence</tag>
<tag>validation</tag>
<status status="PASS" start="2025-10-05T15:45:13.314554" elapsed="1.087703"/>
</test>
<test id="s1-s5-t7" name="Critical - Validate Service Startup Status" line="122">
<kw name="Log Test Start" owner="logs_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.404122" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.403901" elapsed="0.000333"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.404568" level="INFO">üèÅ Starting Test: Critical - Validate Service Startup Status</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.404382" elapsed="0.000296"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.404944" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.404814" elapsed="0.000233"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:45:14.403385" elapsed="0.001734"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.405381" level="INFO">üîç Validating service startup status...</msg>
<arg>üîç Validating service startup status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.405245" elapsed="0.000224"/>
</kw>
<kw name="Validate Service Startup Status" owner="logs_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.405973" level="INFO">üîß Validating service startup status...</msg>
<arg>üîß Validating service startup status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.405872" elapsed="0.000195"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:14.406635" level="INFO">Executing command 'systemctl --failed --no-pager 2&gt;&amp;1 || echo "Failed services check not available"'.</msg>
<msg time="2025-10-05T15:45:14.435008" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:14.435179" level="INFO">${output} =   UNIT LOAD ACTIVE SUB DESCRIPTION

0 loaded units listed.</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:14.406477" elapsed="0.028726"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:14.436032" elapsed="0.000106"/>
</return>
<msg time="2025-10-05T15:45:14.436493" level="INFO">${failed_services} =   UNIT LOAD ACTIVE SUB DESCRIPTION

0 loaded units listed.</msg>
<var>${failed_services}</var>
<arg>systemctl --failed --no-pager 2&gt;&amp;1 || echo "Failed services check not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:14.406221" elapsed="0.030333"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:14.438246" level="INFO">Executing command 'journalctl --no-pager -b | grep -i "started|stopped|failed" | tail -50 2&gt;&amp;1 || echo "Service startup logs not available"'.</msg>
<msg time="2025-10-05T15:45:14.629164" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:14.629404" level="INFO">${output} = </msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:14.437847" elapsed="0.191594"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:14.629544" elapsed="0.000061"/>
</return>
<msg time="2025-10-05T15:45:14.629822" level="INFO">${service_startup} = </msg>
<var>${service_startup}</var>
<arg>journalctl --no-pager -b | grep -i "started\|stopped\|failed" | tail -50 2&gt;&amp;1 || echo "Service startup logs not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:14.436998" elapsed="0.192867"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:14.630987" level="INFO">Executing command 'systemctl list-units --type=service --state=failed --no-pager 2&gt;&amp;1 || echo "Service status not available"'.</msg>
<msg time="2025-10-05T15:45:14.693824" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:14.694144" level="INFO">${output} =   UNIT LOAD ACTIVE SUB DESCRIPTION

0 loaded units listed.</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:14.630644" elapsed="0.063551"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:14.694327" elapsed="0.000082"/>
</return>
<msg time="2025-10-05T15:45:14.694766" level="INFO">${service_status} =   UNIT LOAD ACTIVE SUB DESCRIPTION

0 loaded units listed.</msg>
<var>${service_status}</var>
<arg>systemctl list-units --type=service --state=failed --no-pager 2&gt;&amp;1 || echo "Service status not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:14.630119" elapsed="0.064808"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.695697" level="INFO">${startup_analysis} = === Failed Services ===
  UNIT LOAD ACTIVE SUB DESCRIPTION

0 loaded units listed.

=== Service Startup/Shutdown Messages ===


=== Failed Service Units ===
  UNIT LOAD ACTIVE SUB DESCRIPTION

0 loade...</msg>
<var>${startup_analysis}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Failed Services ===</arg>
<arg>${failed_services}</arg>
<arg>=== Service Startup/Shutdown Messages ===</arg>
<arg>${service_startup}</arg>
<arg>=== Failed Service Units ===</arg>
<arg>${service_status}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:14.695331" elapsed="0.000400"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.696074" level="INFO">‚úÖ Service startup validation completed</msg>
<arg>‚úÖ Service startup validation completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.695892" elapsed="0.000322"/>
</kw>
<return>
<value>${startup_analysis}</value>
<status status="PASS" start="2025-10-05T15:45:14.696280" elapsed="0.000054"/>
</return>
<msg time="2025-10-05T15:45:14.696562" level="INFO">${service_startup} = === Failed Services ===
  UNIT LOAD ACTIVE SUB DESCRIPTION

0 loaded units listed.

=== Service Startup/Shutdown Messages ===


=== Failed Service Units ===
  UNIT LOAD ACTIVE SUB DESCRIPTION

0 loade...</msg>
<var>${service_startup}</var>
<doc>üîß Validate service startup from logs</doc>
<status status="PASS" start="2025-10-05T15:45:14.405655" elapsed="0.290971"/>
</kw>
<kw name="Save Service Startup Analysis to File" owner="logs_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:45:14.698696" level="INFO">${timestamp} = 20251005_154514</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:45:14.698005" elapsed="0.000746"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.699478" level="INFO">${startup_file} = results/test22_event_logs/data/service_startup_20251005_154514.txt</msg>
<var>${startup_file}</var>
<arg>${DATA_DIR}/service_startup_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:45:14.699117" elapsed="0.000398"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.699996" level="INFO">${report} = =========================================
=== Service Startup Analysis ===
=========================================
Timestamp: 20251005_154514
Target Server: alhxvdvitap01 (172.30.16.186)

=== Failed...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== Service Startup Analysis ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>${startup_analysis}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:14.699657" elapsed="0.000368"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:45:14.777126" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/service_startup_20251005_154514.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/service_startup_20251005_154514.txt&lt;/a&gt;'.</msg>
<arg>${startup_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:45:14.700170" elapsed="0.077220"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.778389" level="INFO">üìÑ Service startup analysis saved to: results/test22_event_logs/data/service_startup_20251005_154514.txt</msg>
<arg>üìÑ Service startup analysis saved to: ${startup_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.777789" elapsed="0.000914"/>
</kw>
<return>
<value>${startup_file}</value>
<status status="PASS" start="2025-10-05T15:45:14.778941" elapsed="0.000104"/>
</return>
<msg time="2025-10-05T15:45:14.779419" level="INFO">${startup_file} = results/test22_event_logs/data/service_startup_20251005_154514.txt</msg>
<var>${startup_file}</var>
<arg>${service_startup}</arg>
<doc>üíæ Save service startup analysis to file</doc>
<status status="PASS" start="2025-10-05T15:45:14.697268" elapsed="0.082211"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.780136" level="INFO">üìÑ Service startup analysis saved to: results/test22_event_logs/data/service_startup_20251005_154514.txt</msg>
<arg>üìÑ Service startup analysis saved to: ${startup_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.779764" elapsed="0.001795"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.782252" level="INFO">‚úÖ Service startup validation completed</msg>
<arg>‚úÖ Service startup validation completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.781935" elapsed="0.000555"/>
</kw>
<kw name="Log Test End" owner="logs_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.784257" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.783980" elapsed="0.000496"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.785188" level="INFO">üèÅ Completed Test: Critical - Validate Service Startup Status | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.784792" elapsed="0.000588"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.786316" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.785641" elapsed="0.000953"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:45:14.783236" elapsed="0.003493"/>
</kw>
<doc>üîß Verify all critical services started successfully</doc>
<tag>critical</tag>
<tag>services</tag>
<tag>startup</tag>
<tag>validation</tag>
<status status="PASS" start="2025-10-05T15:45:14.402574" elapsed="0.384294"/>
</test>
<test id="s1-s5-t8" name="Critical - Check Log Rotation Configuration" line="137">
<kw name="Log Test Start" owner="logs_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.789750" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.789457" elapsed="0.000494"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.790543" level="INFO">üèÅ Starting Test: Critical - Check Log Rotation Configuration</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.790192" elapsed="0.000565"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.791293" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.791043" elapsed="0.000427"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:45:14.788874" elapsed="0.002720"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.792041" level="INFO">üîç Checking log rotation configuration...</msg>
<arg>üîç Checking log rotation configuration...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.791828" elapsed="0.000386"/>
</kw>
<kw name="Check Logrotate Configuration" owner="logs_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.793379" level="INFO">üîÑ Checking logrotate configuration...</msg>
<arg>üîÑ Checking logrotate configuration...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.793143" elapsed="0.000432"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:14.794720" level="INFO">Executing command 'cat /etc/logrotate.conf 2&gt;/dev/null || echo "No /etc/logrotate.conf"'.</msg>
<msg time="2025-10-05T15:45:14.819282" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:14.819564" level="INFO">${output} = # see "man logrotate" for details

# global options do not affect preceding include directives

# rotate log files weekly
weekly

# use the adm group by default, since this is the owning group
# of /v...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:14.794470" elapsed="0.025139"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:14.819727" elapsed="0.000071"/>
</return>
<msg time="2025-10-05T15:45:14.820022" level="INFO">${logrotate_conf} = # see "man logrotate" for details

# global options do not affect preceding include directives

# rotate log files weekly
weekly

# use the adm group by default, since this is the owning group
# of /v...</msg>
<var>${logrotate_conf}</var>
<arg>cat /etc/logrotate.conf 2&gt;/dev/null || echo "No /etc/logrotate.conf"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:14.793907" elapsed="0.026154"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:14.821070" level="INFO">Executing command 'ls -la /etc/logrotate.d/ 2&gt;/dev/null || echo "No /etc/logrotate.d/"'.</msg>
<msg time="2025-10-05T15:45:14.863381" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:14.863722" level="INFO">${output} = total 52
drwxr-xr-x  2 root root 4096 Sep 25 06:42 .
drwxr-xr-x 91 root root 4096 Oct  5 15:44 ..
-rw-r--r--  1 root root  120 Feb  4  2024 alternatives
-rw-r--r--  1 root root  126 Apr 22  2022 appor...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:14.820858" elapsed="0.042923"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:14.863921" elapsed="0.000143"/>
</return>
<msg time="2025-10-05T15:45:14.864433" level="INFO">${logrotate_d} = total 52
drwxr-xr-x  2 root root 4096 Sep 25 06:42 .
drwxr-xr-x 91 root root 4096 Oct  5 15:44 ..
-rw-r--r--  1 root root  120 Feb  4  2024 alternatives
-rw-r--r--  1 root root  126 Apr 22  2022 appor...</msg>
<var>${logrotate_d}</var>
<arg>ls -la /etc/logrotate.d/ 2&gt;/dev/null || echo "No /etc/logrotate.d/"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:14.820366" elapsed="0.044115"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:14.865683" level="INFO">Executing command 'cat /var/lib/logrotate/logrotate.status 2&gt;/dev/null || cat /var/lib/logrotate.status 2&gt;/dev/null || echo "No logrotate status file"'.</msg>
<msg time="2025-10-05T15:45:14.927198" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:14.927639" level="INFO">${output} = No logrotate status file</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:14.865427" elapsed="0.062289"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:14.928991" elapsed="0.000094"/>
</return>
<msg time="2025-10-05T15:45:14.929403" level="INFO">${logrotate_status} = No logrotate status file</msg>
<var>${logrotate_status}</var>
<arg>cat /var/lib/logrotate/logrotate.status 2&gt;/dev/null || cat /var/lib/logrotate.status 2&gt;/dev/null || echo "No logrotate status file"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:14.864901" elapsed="0.064548"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:14.930652" level="INFO">Executing command 'cat /etc/cron.daily/logrotate 2&gt;/dev/null || echo "No logrotate cron job"'.</msg>
<msg time="2025-10-05T15:45:14.971392" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:14.971599" level="INFO">${output} = #!/bin/sh

# skip in favour of systemd timer
if [ -d /run/systemd/system ]; then
    exit 0
fi

# this cronjob persists removals (but not purges)
if [ ! -x /usr/sbin/logrotate ]; then
    exit 0
fi

/...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:14.930389" elapsed="0.041241"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:14.971770" elapsed="0.000054"/>
</return>
<msg time="2025-10-05T15:45:14.972023" level="INFO">${logrotate_cron} = #!/bin/sh

# skip in favour of systemd timer
if [ -d /run/systemd/system ]; then
    exit 0
fi

# this cronjob persists removals (but not purges)
if [ ! -x /usr/sbin/logrotate ]; then
    exit 0
fi

/...</msg>
<var>${logrotate_cron}</var>
<arg>cat /etc/cron.daily/logrotate 2&gt;/dev/null || echo "No logrotate cron job"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:14.929836" elapsed="0.042221"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.972600" level="INFO">${logrotate_config} = === /etc/logrotate.conf ===
# see "man logrotate" for details

# global options do not affect preceding include directives

# rotate log files weekly
weekly

# use the adm group by default, since this...</msg>
<var>${logrotate_config}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== /etc/logrotate.conf ===</arg>
<arg>${logrotate_conf}</arg>
<arg>=== /etc/logrotate.d/ Directory ===</arg>
<arg>${logrotate_d}</arg>
<arg>=== Logrotate Status ===</arg>
<arg>${logrotate_status}</arg>
<arg>=== Logrotate Cron Job ===</arg>
<arg>${logrotate_cron}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:14.972250" elapsed="0.000377"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.973050" level="INFO">‚úÖ Logrotate configuration collected</msg>
<arg>‚úÖ Logrotate configuration collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.972796" elapsed="0.000377"/>
</kw>
<return>
<value>${logrotate_config}</value>
<status status="PASS" start="2025-10-05T15:45:14.973238" elapsed="0.000044"/>
</return>
<msg time="2025-10-05T15:45:14.973405" level="INFO">${logrotate_config} = === /etc/logrotate.conf ===
# see "man logrotate" for details

# global options do not affect preceding include directives

# rotate log files weekly
weekly

# use the adm group by default, since this...</msg>
<var>${logrotate_config}</var>
<doc>üîÑ Check log rotation configuration</doc>
<status status="PASS" start="2025-10-05T15:45:14.792628" elapsed="0.180799"/>
</kw>
<kw name="Save Logrotate Config to File" owner="logs_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:45:14.974051" level="INFO">${timestamp} = 20251005_154514</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:45:14.973853" elapsed="0.000227"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.974330" level="INFO">${logrotate_file} = results/test22_event_logs/data/logrotate_config_20251005_154514.txt</msg>
<var>${logrotate_file}</var>
<arg>${DATA_DIR}/logrotate_config_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:45:14.974181" elapsed="0.000170"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.974992" level="INFO">${report} = =========================================
=== Log Rotation Configuration ===
=========================================
Timestamp: 20251005_154514
Target Server: alhxvdvitap01 (172.30.16.186)

=== /etc...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== Log Rotation Configuration ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>${logrotate_config}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:14.974434" elapsed="0.000597"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:45:14.993681" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/logrotate_config_20251005_154514.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/logrotate_config_20251005_154514.txt&lt;/a&gt;'.</msg>
<arg>${logrotate_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:45:14.975211" elapsed="0.018611"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.994353" level="INFO">üìÑ Logrotate configuration saved to: results/test22_event_logs/data/logrotate_config_20251005_154514.txt</msg>
<arg>üìÑ Logrotate configuration saved to: ${logrotate_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.994056" elapsed="0.000427"/>
</kw>
<return>
<value>${logrotate_file}</value>
<status status="PASS" start="2025-10-05T15:45:14.994619" elapsed="0.000049"/>
</return>
<msg time="2025-10-05T15:45:14.994931" level="INFO">${logrotate_file} = results/test22_event_logs/data/logrotate_config_20251005_154514.txt</msg>
<var>${logrotate_file}</var>
<arg>${logrotate_config}</arg>
<doc>üíæ Save logrotate configuration to file</doc>
<status status="PASS" start="2025-10-05T15:45:14.973606" elapsed="0.021362"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.995517" level="INFO">üìÑ Logrotate configuration saved to: results/test22_event_logs/data/logrotate_config_20251005_154514.txt</msg>
<arg>üìÑ Logrotate configuration saved to: ${logrotate_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.995127" elapsed="0.000536"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.996051" level="INFO">‚úÖ Log rotation configuration validated</msg>
<arg>‚úÖ Log rotation configuration validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.995868" elapsed="0.000311"/>
</kw>
<kw name="Log Test End" owner="logs_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.997516" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.997300" elapsed="0.000328"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.998967" level="INFO">üèÅ Completed Test: Critical - Check Log Rotation Configuration | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.998632" elapsed="0.000473"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:14.999481" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:14.999286" elapsed="0.000313"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:45:14.996578" elapsed="0.003116"/>
</kw>
<doc>üîÑ Validate log rotation is properly configured</doc>
<tag>configuration</tag>
<tag>critical</tag>
<tag>logrotate</tag>
<tag>validation</tag>
<status status="PASS" start="2025-10-05T15:45:14.787839" elapsed="0.211927"/>
</test>
<test id="s1-s5-t9" name="Normal - Analyze Repeating Error Patterns" line="152">
<kw name="Log Test Start" owner="logs_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:15.001629" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:15.001426" elapsed="0.000344"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:15.002201" level="INFO">üèÅ Starting Test: Normal - Analyze Repeating Error Patterns</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:15.001966" elapsed="0.000392"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:15.002719" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:15.002580" elapsed="0.000398"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:45:15.001004" elapsed="0.002081"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:15.003383" level="INFO">üîç Analyzing repeating error patterns...</msg>
<arg>üîç Analyzing repeating error patterns...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:15.003238" elapsed="0.000256"/>
</kw>
<kw name="Analyze Repeating Error Patterns" owner="logs_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:15.004265" level="INFO">üîÅ Analyzing repeating error patterns...</msg>
<arg>üîÅ Analyzing repeating error patterns...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:15.004112" elapsed="0.000264"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:15.005611" level="INFO">Executing command 'journalctl --no-pager -p err -n 500 | awk '{print $5" "$6" "$7}' | sort | uniq -c | sort -rn | head -20 2&gt;&amp;1 || echo "Pattern analysis not available"'.</msg>
<msg time="2025-10-05T15:45:15.083531" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:15.083783" level="INFO">${output} =     265 unknown: WSL (217)
     85 kernel: misc dxg:
     33 unknown: WSL (218)
     17 unknown: WSL (220)
     10 kernel: PCI: Fatal:
      5   
      4 unknown: WSL (7825
      2 unknown: WSL (219)
...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:15.005435" elapsed="0.078374"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:15.083887" elapsed="0.000048"/>
</return>
<msg time="2025-10-05T15:45:15.084082" level="INFO">${common_errors} =     265 unknown: WSL (217)
     85 kernel: misc dxg:
     33 unknown: WSL (218)
     17 unknown: WSL (220)
     10 kernel: PCI: Fatal:
      5   
      4 unknown: WSL (7825
      2 unknown: WSL (219)
...</msg>
<var>${common_errors}</var>
<arg>journalctl --no-pager -p err -n ${LOG_LINES_TO_COLLECT} | awk '{print $5" "$6" "$7}' | sort | uniq -c | sort -rn | head -20 2&gt;&amp;1 || echo "Pattern analysis not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:15.004733" elapsed="0.079373"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:15.084817" level="INFO">Executing command 'grep -i "error|fail" /var/log/messages 2&gt;/dev/null | awk '{print $5" "$6" "$7}' | sort | uniq -c | sort -rn | head -20 || echo "No messages file for pattern analysis"'.</msg>
<msg time="2025-10-05T15:45:15.127418" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:15.127723" level="INFO">${output} = </msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:15.084637" elapsed="0.043119"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:15.127863" elapsed="0.000081"/>
</return>
<msg time="2025-10-05T15:45:15.128130" level="INFO">${repeated_msgs} = </msg>
<var>${repeated_msgs}</var>
<arg>grep -i "error\|fail" /var/log/messages 2&gt;/dev/null | awk '{print $5" "$6" "$7}' | sort | uniq -c | sort -rn | head -20 || echo "No messages file for pattern analysis"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:15.084313" elapsed="0.043843"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:15.128902" level="INFO">Executing command 'journalctl --no-pager --since "24 hours ago" -p err 2&gt;&amp;1 | wc -l || echo "0"'.</msg>
<msg time="2025-10-05T15:45:15.214939" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:15.215236" level="INFO">${output} = 85</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:15.128767" elapsed="0.086508"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:15.215406" elapsed="0.000071"/>
</return>
<msg time="2025-10-05T15:45:15.215770" level="INFO">${frequency} = 85</msg>
<var>${frequency}</var>
<arg>journalctl --no-pager --since "24 hours ago" -p err 2&gt;&amp;1 | wc -l || echo "0"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:15.128395" elapsed="0.087417"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:15.216553" level="INFO">${pattern_analysis} = === Most Common Error Patterns (journalctl) ===
    265 unknown: WSL (217)
     85 kernel: misc dxg:
     33 unknown: WSL (218)
     17 unknown: WSL (220)
     10 kernel: PCI: Fatal:
      5   
      ...</msg>
<var>${pattern_analysis}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Most Common Error Patterns (journalctl) ===</arg>
<arg>${common_errors}</arg>
<arg>=== Repeated Error Messages (/var/log/messages) ===</arg>
<arg>${repeated_msgs}</arg>
<arg>=== Error Frequency (Last 24 Hours) ===</arg>
<arg>${frequency} errors in last 24 hours</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:15.216077" elapsed="0.000512"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:15.217654" level="INFO">‚úÖ Pattern analysis completed</msg>
<arg>‚úÖ Pattern analysis completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:15.217460" elapsed="0.000315"/>
</kw>
<return>
<value>${pattern_analysis}</value>
<status status="PASS" start="2025-10-05T15:45:15.217846" elapsed="0.000051"/>
</return>
<msg time="2025-10-05T15:45:15.218052" level="INFO">${pattern_analysis} = === Most Common Error Patterns (journalctl) ===
    265 unknown: WSL (217)
     85 kernel: misc dxg:
     33 unknown: WSL (218)
     17 unknown: WSL (220)
     10 kernel: PCI: Fatal:
      5   
      ...</msg>
<var>${pattern_analysis}</var>
<doc>üîÅ Search for repeating error patterns</doc>
<status status="PASS" start="2025-10-05T15:45:15.003792" elapsed="0.214285"/>
</kw>
<kw name="Save Pattern Analysis to File" owner="logs_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:45:15.219061" level="INFO">${timestamp} = 20251005_154515</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:45:15.218749" elapsed="0.000337"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:15.219382" level="INFO">${pattern_file} = results/test22_event_logs/data/error_patterns_20251005_154515.txt</msg>
<var>${pattern_file}</var>
<arg>${DATA_DIR}/error_patterns_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:45:15.219191" elapsed="0.000216"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:15.219762" level="INFO">${report} = =========================================
=== Repeating Error Pattern Analysis ===
=========================================
Timestamp: 20251005_154515
Target Server: alhxvdvitap01 (172.30.16.186)

==...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== Repeating Error Pattern Analysis ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>${pattern_analysis}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:15.219504" elapsed="0.000281"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:45:15.225380" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/error_patterns_20251005_154515.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/error_patterns_20251005_154515.txt&lt;/a&gt;'.</msg>
<arg>${pattern_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:45:15.219892" elapsed="0.005578"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:15.225810" level="INFO">üìÑ Pattern analysis saved to: results/test22_event_logs/data/error_patterns_20251005_154515.txt</msg>
<arg>üìÑ Pattern analysis saved to: ${pattern_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:15.225613" elapsed="0.000315"/>
</kw>
<return>
<value>${pattern_file}</value>
<status status="PASS" start="2025-10-05T15:45:15.226009" elapsed="0.000053"/>
</return>
<msg time="2025-10-05T15:45:15.226194" level="INFO">${pattern_file} = results/test22_event_logs/data/error_patterns_20251005_154515.txt</msg>
<var>${pattern_file}</var>
<arg>${pattern_analysis}</arg>
<doc>üíæ Save pattern analysis to file</doc>
<status status="PASS" start="2025-10-05T15:45:15.218349" elapsed="0.007869"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:15.226512" level="INFO">üìÑ Pattern analysis saved to: results/test22_event_logs/data/error_patterns_20251005_154515.txt</msg>
<arg>üìÑ Pattern analysis saved to: ${pattern_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:15.226332" elapsed="0.000302"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:15.227015" level="INFO">‚úÖ Repeating error pattern analysis completed</msg>
<arg>‚úÖ Repeating error pattern analysis completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:15.226780" elapsed="0.000396"/>
</kw>
<kw name="Log Test End" owner="logs_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:15.228716" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:15.228538" elapsed="0.000513"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:15.230131" level="INFO">üèÅ Completed Test: Normal - Analyze Repeating Error Patterns | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:15.229390" elapsed="0.001199"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:15.231207" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:15.230720" elapsed="0.000595"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:45:15.227510" elapsed="0.003894"/>
</kw>
<doc>üîÅ Search for repeating error patterns that might indicate issues</doc>
<tag>analysis</tag>
<tag>errors</tag>
<tag>normal</tag>
<tag>patterns</tag>
<status status="PASS" start="2025-10-05T15:45:15.000151" elapsed="0.231315"/>
</test>
<test id="s1-s5-t10" name="Normal - Check Authentication Logs" line="167">
<kw name="Log Test Start" owner="logs_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:15.232885" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:15.232744" elapsed="0.000234"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:15.233407" level="INFO">üèÅ Starting Test: Normal - Check Authentication Logs</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:15.233159" elapsed="0.000359"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:15.233851" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:15.233678" elapsed="0.000294"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:45:15.232405" elapsed="0.002485"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:15.235316" level="INFO">üîç Checking authentication logs...</msg>
<arg>üîç Checking authentication logs...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:15.235125" elapsed="0.000313"/>
</kw>
<kw name="Collect Authentication Logs" owner="logs_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:15.236544" level="INFO">üîê Collecting authentication logs...</msg>
<arg>üîê Collecting authentication logs...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:15.236420" elapsed="0.000232"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:15.237370" level="INFO">Executing command 'tail -500 /var/log/secure 2&gt;/dev/null || tail -500 /var/log/auth.log 2&gt;/dev/null || echo "No auth logs"'.</msg>
<msg time="2025-10-05T15:45:15.263520" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:15.263716" level="INFO">${output} = 2025-09-28T08:48:24.976178-05:00 DESKTOP-933PGUE systemd-logind[174]: New seat seat0.
2025-09-28T08:48:26.751638-05:00 DESKTOP-933PGUE login[300]: PAM unable to dlopen(pam_lastlog.so): /usr/lib/securi...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:15.237247" elapsed="0.026495"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:15.263826" elapsed="0.000056"/>
</return>
<msg time="2025-10-05T15:45:15.264034" level="INFO">${auth_secure} = 2025-09-28T08:48:24.976178-05:00 DESKTOP-933PGUE systemd-logind[174]: New seat seat0.
2025-09-28T08:48:26.751638-05:00 DESKTOP-933PGUE login[300]: PAM unable to dlopen(pam_lastlog.so): /usr/lib/securi...</msg>
<var>${auth_secure}</var>
<arg>tail -${LOG_LINES_TO_COLLECT} /var/log/secure 2&gt;/dev/null || tail -${LOG_LINES_TO_COLLECT} /var/log/auth.log 2&gt;/dev/null || echo "No auth logs"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:15.236845" elapsed="0.027214"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:15.264722" level="INFO">Executing command 'journalctl --no-pager | grep -i "failed password|authentication failure" | tail -50 2&gt;&amp;1 || echo "No failed login entries"'.</msg>
<msg time="2025-10-05T15:45:21.215788" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:21.216078" level="INFO">${output} = </msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:15.264589" elapsed="5.951525"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:21.216229" elapsed="0.000069"/>
</return>
<msg time="2025-10-05T15:45:21.216494" level="INFO">${failed_logins} = </msg>
<var>${failed_logins}</var>
<arg>journalctl --no-pager | grep -i "failed password\|authentication failure" | tail -50 2&gt;&amp;1 || echo "No failed login entries"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:15.264279" elapsed="5.952246"/>
</kw>
<kw name="${successful_logins}= Execute Command">
<msg time="2025-10-05T15:45:21.219719" level="FAIL">No keyword with name '${successful_logins}= Execute Command' found.</msg>
<arg>journalctl --no-pager | grep -i "accepted password\|session opened" | tail -50 2&gt;&amp;1 || echo "No successful login entries"</arg>
<status status="FAIL" start="2025-10-05T15:45:21.219611" elapsed="0.000188">No keyword with name '${successful_logins}= Execute Command' found.</status>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<var>${lastlog}</var>
<arg>lastlog 2&gt;&amp;1 | head -30 || echo "lastlog not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="NOT RUN" start="2025-10-05T15:45:21.220148" elapsed="0.000040"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<var>${last}</var>
<arg>last | head -30 2&gt;&amp;1 || echo "last not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="NOT RUN" start="2025-10-05T15:45:21.220371" elapsed="0.000029"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<var>${auth_logs}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Authentication Logs (secure/auth.log) ===</arg>
<arg>${auth_secure}</arg>
<arg>=== Failed Login Attempts ===</arg>
<arg>${failed_logins}</arg>
<arg>=== Successful Logins ===</arg>
<arg>${successful_logins}</arg>
<arg>=== Last Login (lastlog) ===</arg>
<arg>${lastlog}</arg>
<arg>=== Login History (last) ===</arg>
<arg>${last}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" start="2025-10-05T15:45:21.220563" elapsed="0.000027"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>‚úÖ Authentication logs collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:45:21.220763" elapsed="0.000024"/>
</kw>
<return>
<value>${auth_logs}</value>
<status status="NOT RUN" start="2025-10-05T15:45:21.220844" elapsed="0.000026"/>
</return>
<var>${auth_logs}</var>
<doc>üîê Collect authentication logs</doc>
<status status="FAIL" start="2025-10-05T15:45:15.235774" elapsed="5.985252">No keyword with name '${successful_logins}= Execute Command' found.</status>
</kw>
<kw name="Save Authentication Logs to File" owner="logs_keywords">
<var>${auth_file}</var>
<arg>${auth_logs}</arg>
<doc>üíæ Save authentication logs to file</doc>
<status status="NOT RUN" start="2025-10-05T15:45:21.221265" elapsed="0.000030"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>üìÑ Authentication logs saved to: ${auth_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:45:21.221428" elapsed="0.000022"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>‚úÖ Authentication logs collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:45:21.221570" elapsed="0.000020"/>
</kw>
<kw name="Log Test End" owner="logs_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:21.222780" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:21.222533" elapsed="0.000403"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:21.223358" level="INFO">üèÅ Completed Test: Normal - Check Authentication Logs | Status: FAIL</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:21.223087" elapsed="0.000442"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:21.223920" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:21.223738" elapsed="0.000293"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:45:21.221960" elapsed="0.002791"/>
</kw>
<doc>üîê Review authentication logs for failed login attempts</doc>
<tag>authentication</tag>
<tag>logs</tag>
<tag>normal</tag>
<tag>security</tag>
<status status="FAIL" start="2025-10-05T15:45:15.231831" elapsed="5.992982">No keyword with name '${successful_logins}= Execute Command' found.</status>
</test>
<test id="s1-s5-t11" name="Normal - Check Kernel Messages for Errors" line="182">
<kw name="Log Test Start" owner="logs_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:21.226228" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:21.226072" elapsed="0.000328"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:21.227079" level="INFO">üèÅ Starting Test: Normal - Check Kernel Messages for Errors</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:21.226611" elapsed="0.000904"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:21.227759" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:21.227640" elapsed="0.000205"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:45:21.225760" elapsed="0.002140"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:21.228092" level="INFO">üîç Analyzing kernel messages for errors...</msg>
<arg>üîç Analyzing kernel messages for errors...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:21.227997" elapsed="0.000171"/>
</kw>
<kw name="Search Kernel Errors" owner="logs_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:21.228629" level="INFO">üñ•Ô∏è Searching kernel errors...</msg>
<arg>üñ•Ô∏è Searching kernel errors...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:21.228535" elapsed="0.000171"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:21.229155" level="INFO">Executing command 'dmesg | grep -iE "error|fail|bug|oops|panic|segfault" 2&gt;&amp;1 || echo "No kernel errors found"'.</msg>
<msg time="2025-10-05T15:45:21.263244" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:21.263530" level="INFO">${output} = [    0.000000] Command line: initrd=\initrd.img WSL_ROOT_INIT=1 panic=-1 nr_cpus=8 hv_utils.timesync_implicit=1 console=hvc0 debug pty.legacy_count=0 WSL_ENABLE_CRASH_DUMP=1
[    0.066872] Kernel comm...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:21.229053" elapsed="0.034513"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:21.263678" elapsed="0.000070"/>
</return>
<msg time="2025-10-05T15:45:21.263940" level="INFO">${kernel_errors} = [    0.000000] Command line: initrd=\initrd.img WSL_ROOT_INIT=1 panic=-1 nr_cpus=8 hv_utils.timesync_implicit=1 console=hvc0 debug pty.legacy_count=0 WSL_ENABLE_CRASH_DUMP=1
[    0.066872] Kernel comm...</msg>
<var>${kernel_errors}</var>
<arg>dmesg | grep -iE "error|fail|bug|oops|panic|segfault" 2&gt;&amp;1 || echo "No kernel errors found"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:21.228830" elapsed="0.035176"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:21.265054" level="INFO">Executing command 'journalctl --no-pager -k | grep -iE "hardware|disk|memory|i/o error" | tail -50 2&gt;&amp;1 || echo "No hardware errors"'.</msg>
<msg time="2025-10-05T15:45:21.436865" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:21.437177" level="INFO">${output} = Oct 05 12:06:43 DESKTOP-933PGUE kernel: x86/mm: Memory block size: 128MB
Oct 05 12:06:43 DESKTOP-933PGUE kernel: VFS: Disk quotas dquot_6.6.0
Oct 05 12:06:43 DESKTOP-933PGUE kernel: Freeing initrd mem...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:21.264852" elapsed="0.172414"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:21.437393" elapsed="0.000614"/>
</return>
<msg time="2025-10-05T15:45:21.438246" level="INFO">${hardware_errors} = Oct 05 12:06:43 DESKTOP-933PGUE kernel: x86/mm: Memory block size: 128MB
Oct 05 12:06:43 DESKTOP-933PGUE kernel: VFS: Disk quotas dquot_6.6.0
Oct 05 12:06:43 DESKTOP-933PGUE kernel: Freeing initrd mem...</msg>
<var>${hardware_errors}</var>
<arg>journalctl --no-pager -k | grep -iE "hardware|disk|memory|i/o error" | tail -50 2&gt;&amp;1 || echo "No hardware errors"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:21.264362" elapsed="0.173916"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:21.439306" level="INFO">Executing command 'journalctl --no-pager | grep -i "out of memory|oom" | tail -30 2&gt;&amp;1 || echo "No OOM errors"'.</msg>
<msg time="2025-10-05T15:45:27.176038" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:27.176542" level="INFO">${output} = </msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:21.439120" elapsed="5.737480"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:27.176833" elapsed="0.001259"/>
</return>
<msg time="2025-10-05T15:45:27.178370" level="INFO">${oom_errors} = </msg>
<var>${oom_errors}</var>
<arg>journalctl --no-pager | grep -i "out of memory\|oom" | tail -30 2&gt;&amp;1 || echo "No OOM errors"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:21.438629" elapsed="5.739792"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.180094" level="INFO">${kernel_error_report} = === Kernel Errors (dmesg) ===
[    0.000000] Command line: initrd=\initrd.img WSL_ROOT_INIT=1 panic=-1 nr_cpus=8 hv_utils.timesync_implicit=1 console=hvc0 debug pty.legacy_count=0 WSL_ENABLE_CRASH_DUM...</msg>
<var>${kernel_error_report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Kernel Errors (dmesg) ===</arg>
<arg>${kernel_errors}</arg>
<arg>=== Hardware Related Errors ===</arg>
<arg>${hardware_errors}</arg>
<arg>=== Out of Memory Errors ===</arg>
<arg>${oom_errors}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:27.179287" elapsed="0.000857"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.180628" level="INFO">‚úÖ Kernel error search completed</msg>
<arg>‚úÖ Kernel error search completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.180374" elapsed="0.000412"/>
</kw>
<return>
<value>${kernel_error_report}</value>
<status status="PASS" start="2025-10-05T15:45:27.180843" elapsed="0.000038"/>
</return>
<msg time="2025-10-05T15:45:27.182024" level="INFO">${kernel_errors} = === Kernel Errors (dmesg) ===
[    0.000000] Command line: initrd=\initrd.img WSL_ROOT_INIT=1 panic=-1 nr_cpus=8 hv_utils.timesync_implicit=1 console=hvc0 debug pty.legacy_count=0 WSL_ENABLE_CRASH_DUM...</msg>
<var>${kernel_errors}</var>
<doc>üñ•Ô∏è Search for kernel errors</doc>
<status status="PASS" start="2025-10-05T15:45:21.228319" elapsed="5.953742"/>
</kw>
<kw name="Save Kernel Errors to File" owner="logs_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:45:27.183130" level="INFO">${timestamp} = 20251005_154527</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:45:27.182824" elapsed="0.000333"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.183441" level="INFO">${kernel_file} = results/test22_event_logs/data/kernel_errors_20251005_154527.txt</msg>
<var>${kernel_file}</var>
<arg>${DATA_DIR}/kernel_errors_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:45:27.183273" elapsed="0.000189"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.183783" level="INFO">${report} = =========================================
=== Kernel Error Analysis ===
=========================================
Timestamp: 20251005_154527
Target Server: alhxvdvitap01 (172.30.16.186)

=== Kernel Er...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== Kernel Error Analysis ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>${kernel_errors}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:27.183547" elapsed="0.000257"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:45:27.189623" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/kernel_errors_20251005_154527.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/kernel_errors_20251005_154527.txt&lt;/a&gt;'.</msg>
<arg>${kernel_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:45:27.183985" elapsed="0.005737"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.190109" level="INFO">üìÑ Kernel errors saved to: results/test22_event_logs/data/kernel_errors_20251005_154527.txt</msg>
<arg>üìÑ Kernel errors saved to: ${kernel_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.189878" elapsed="0.000351"/>
</kw>
<return>
<value>${kernel_file}</value>
<status status="PASS" start="2025-10-05T15:45:27.190307" elapsed="0.000089"/>
</return>
<msg time="2025-10-05T15:45:27.190658" level="INFO">${kernel_file} = results/test22_event_logs/data/kernel_errors_20251005_154527.txt</msg>
<var>${kernel_file}</var>
<arg>${kernel_errors}</arg>
<doc>üíæ Save kernel errors to file</doc>
<status status="PASS" start="2025-10-05T15:45:27.182358" elapsed="0.008327"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.191120" level="INFO">üìÑ Kernel errors saved to: results/test22_event_logs/data/kernel_errors_20251005_154527.txt</msg>
<arg>üìÑ Kernel errors saved to: ${kernel_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.190881" elapsed="0.000351"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.191693" level="INFO">‚úÖ Kernel error analysis completed</msg>
<arg>‚úÖ Kernel error analysis completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.191451" elapsed="0.000357"/>
</kw>
<kw name="Log Test End" owner="logs_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.192881" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.192680" elapsed="0.000319"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.193400" level="INFO">üèÅ Completed Test: Normal - Check Kernel Messages for Errors | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.193160" elapsed="0.000370"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.193893" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.193698" elapsed="0.000316"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:45:27.192137" elapsed="0.001971"/>
</kw>
<doc>üñ•Ô∏è Analyze kernel messages for hardware or driver errors</doc>
<tag>errors</tag>
<tag>hardware</tag>
<tag>kernel</tag>
<tag>normal</tag>
<status status="PASS" start="2025-10-05T15:45:21.225063" elapsed="5.969112"/>
</test>
<test id="s1-s5-t12" name="Normal - Validate Disk Space for Logs" line="197">
<kw name="Log Test Start" owner="logs_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.196194" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.195955" elapsed="0.000369"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.196798" level="INFO">üèÅ Starting Test: Normal - Validate Disk Space for Logs</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.196490" elapsed="0.000454"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.197401" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.197129" elapsed="0.000414"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:45:27.195555" elapsed="0.002094"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.197977" level="INFO">üîç Validating disk space for logs...</msg>
<arg>üîç Validating disk space for logs...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.197793" elapsed="0.000293"/>
</kw>
<kw name="Check Log Disk Space" owner="logs_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.199020" level="INFO">üíæ Checking log disk space...</msg>
<arg>üíæ Checking log disk space...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.198800" elapsed="0.000343"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:27.201109" level="INFO">Executing command 'df -h /var/log 2&gt;&amp;1 || echo "df not available"'.</msg>
<msg time="2025-10-05T15:45:27.243450" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:27.243754" level="INFO">${output} = Filesystem      Size  Used Avail Use% Mounted on
/dev/sdd       1007G  7.5G  949G   1% /</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:27.200974" elapsed="0.042822"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:27.243890" elapsed="0.000059"/>
</return>
<msg time="2025-10-05T15:45:27.244124" level="INFO">${df_varlog} = Filesystem      Size  Used Avail Use% Mounted on
/dev/sdd       1007G  7.5G  949G   1% /</msg>
<var>${df_varlog}</var>
<arg>df -h /var/log 2&gt;&amp;1 || echo "df not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:27.200318" elapsed="0.043838"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:27.244961" level="INFO">Executing command 'du -sh /var/log/* 2&gt;/dev/null | sort -rh | head -20 || echo "du not available"'.</msg>
<msg time="2025-10-05T15:45:27.305997" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:27.306272" level="INFO">${output} = 265M	/var/log/journal
1.9M	/var/log/syslog.1
1.8M	/var/log/syslog
692K	/var/log/dpkg.log
268K	/var/log/apt
220K	/var/log/kern.log
192K	/var/log/syslog.4.gz
156K	/var/log/syslog.2.gz
136K	/var/log/sysl...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:27.244776" elapsed="0.061535"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:27.306393" elapsed="0.000092"/>
</return>
<msg time="2025-10-05T15:45:27.306690" level="INFO">${du_varlog} = 265M	/var/log/journal
1.9M	/var/log/syslog.1
1.8M	/var/log/syslog
692K	/var/log/dpkg.log
268K	/var/log/apt
220K	/var/log/kern.log
192K	/var/log/syslog.4.gz
156K	/var/log/syslog.2.gz
136K	/var/log/sysl...</msg>
<var>${du_varlog}</var>
<arg>du -sh /var/log/* 2&gt;/dev/null | sort -rh | head -20 || echo "du not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:27.244385" elapsed="0.062332"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:27.307756" level="INFO">Executing command 'df -i /var/log 2&gt;&amp;1 || echo "inode check not available"'.</msg>
<msg time="2025-10-05T15:45:27.356082" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:27.356385" level="INFO">${output} = Filesystem       Inodes  IUsed    IFree IUse% Mounted on
/dev/sdd       67108864 152240 66956624    1% /</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:27.307588" elapsed="0.048860"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:27.356550" elapsed="0.000062"/>
</return>
<msg time="2025-10-05T15:45:27.356792" level="INFO">${inodes} = Filesystem       Inodes  IUsed    IFree IUse% Mounted on
/dev/sdd       67108864 152240 66956624    1% /</msg>
<var>${inodes}</var>
<arg>df -i /var/log 2&gt;&amp;1 || echo "inode check not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:27.307152" elapsed="0.049669"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.357861" level="INFO">${disk_space} = === Disk Space for /var/log ===
Filesystem      Size  Used Avail Use% Mounted on
/dev/sdd       1007G  7.5G  949G   1% /

=== Largest Log Files/Directories ===
265M	/var/log/journal
1.9M	/var/log/sysl...</msg>
<var>${disk_space}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Disk Space for /var/log ===</arg>
<arg>${df_varlog}</arg>
<arg>=== Largest Log Files/Directories ===</arg>
<arg>${du_varlog}</arg>
<arg>=== Inode Usage ===</arg>
<arg>${inodes}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:27.357155" elapsed="0.000762"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.358632" level="INFO">üíæ Disk space: === Disk Space for /var/log ===
Filesystem      Size  Used Avail Use% Mounted on
/dev/sdd       1007G  7.5G  949G   1% /

=== Largest Log Files/Directories ===
265M	/var/log/journal
1.9M	/var/log/syslog.1
1.8M	/var/log/syslog
692K	/var/log/dpkg.log
268K	/var/log/apt
220K	/var/log/kern.log
192K	/var/log/syslog.4.gz
156K	/var/log/syslog.2.gz
136K	/var/log/syslog.3.gz
116K	/var/log/bootstrap.log
72K	/var/log/dmesg
64K	/var/log/auth.log
60K	/var/log/wtmp
56K	/var/log/unattended-upgrades
44K	/var/log/kern.log.4.gz
36K	/var/log/dmesg.0
32K	/var/log/alternatives.log
24K	/var/log/dmesg.1.gz
12K	/var/log/kern.log.2.gz
12K	/var/log/dmesg.4.gz

=== Inode Usage ===
Filesystem       Inodes  IUsed    IFree IUse% Mounted on
/dev/sdd       67108864 152240 66956624    1% /</msg>
<arg>üíæ Disk space: ${disk_space}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.358196" elapsed="0.000662"/>
</kw>
<return>
<value>${disk_space}</value>
<status status="PASS" start="2025-10-05T15:45:27.358959" elapsed="0.000072"/>
</return>
<msg time="2025-10-05T15:45:27.359335" level="INFO">${disk_space} = === Disk Space for /var/log ===
Filesystem      Size  Used Avail Use% Mounted on
/dev/sdd       1007G  7.5G  949G   1% /

=== Largest Log Files/Directories ===
265M	/var/log/journal
1.9M	/var/log/sysl...</msg>
<var>${disk_space}</var>
<doc>üíæ Check disk space for /var/log</doc>
<status status="PASS" start="2025-10-05T15:45:27.198357" elapsed="0.161071"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.359953" level="INFO">üíæ Log partition disk space: === Disk Space for /var/log ===
Filesystem      Size  Used Avail Use% Mounted on
/dev/sdd       1007G  7.5G  949G   1% /

=== Largest Log Files/Directories ===
265M	/var/log/journal
1.9M	/var/log/syslog.1
1.8M	/var/log/syslog
692K	/var/log/dpkg.log
268K	/var/log/apt
220K	/var/log/kern.log
192K	/var/log/syslog.4.gz
156K	/var/log/syslog.2.gz
136K	/var/log/syslog.3.gz
116K	/var/log/bootstrap.log
72K	/var/log/dmesg
64K	/var/log/auth.log
60K	/var/log/wtmp
56K	/var/log/unattended-upgrades
44K	/var/log/kern.log.4.gz
36K	/var/log/dmesg.0
32K	/var/log/alternatives.log
24K	/var/log/dmesg.1.gz
12K	/var/log/kern.log.2.gz
12K	/var/log/dmesg.4.gz

=== Inode Usage ===
Filesystem       Inodes  IUsed    IFree IUse% Mounted on
/dev/sdd       67108864 152240 66956624    1% /</msg>
<arg>üíæ Log partition disk space: ${disk_space}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.359661" elapsed="0.000450"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.360465" level="INFO">‚úÖ Log disk space validation completed</msg>
<arg>‚úÖ Log disk space validation completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.360304" elapsed="0.000296"/>
</kw>
<kw name="Log Test End" owner="logs_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.362010" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.361770" elapsed="0.001633"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.364266" level="INFO">üèÅ Completed Test: Normal - Validate Disk Space for Logs | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.363738" elapsed="0.000983"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.365247" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.364968" elapsed="0.000431"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:45:27.361015" elapsed="0.004482"/>
</kw>
<doc>üíæ Check if sufficient disk space is available for logging</doc>
<tag>capacity</tag>
<tag>disk_space</tag>
<tag>logs</tag>
<tag>normal</tag>
<status status="PASS" start="2025-10-05T15:45:27.194649" elapsed="0.170917"/>
</test>
<test id="s1-s5-t13" name="Normal - Check Log File Permissions" line="209">
<kw name="Log Test Start" owner="logs_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.367495" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.367338" elapsed="0.000336"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.367998" level="INFO">üèÅ Starting Test: Normal - Check Log File Permissions</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.367821" elapsed="0.000286"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.368370" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.368247" elapsed="0.000224"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:45:27.366963" elapsed="0.001628"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.369232" level="INFO">üîç Checking log file permissions...</msg>
<arg>üîç Checking log file permissions...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.368758" elapsed="0.000603"/>
</kw>
<kw name="Check Log File Permissions" owner="logs_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.370046" level="INFO">üîí Checking log file permissions...</msg>
<arg>üîí Checking log file permissions...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.369913" elapsed="0.000261"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:27.371133" level="INFO">Executing command 'ls -la /var/log/*.log /var/log/messages /var/log/secure /var/log/syslog 2&gt;/dev/null || echo "Permission check not available"'.</msg>
<msg time="2025-10-05T15:45:27.418904" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:27.419463" level="INFO">${output} = -rw-r--r-- 1 root   root   32433 Sep 28 10:17 /var/log/alternatives.log
-rw-r----- 1 syslog adm    57781 Oct  5 15:45 /var/log/auth.log
-rw-r--r-- 1 root   root  118497 Aug  5 11:55 /var/log/bootstrap...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:27.370817" elapsed="0.048738"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:27.419669" elapsed="0.000098"/>
</return>
<msg time="2025-10-05T15:45:27.420042" level="INFO">${log_perms} = -rw-r--r-- 1 root   root   32433 Sep 28 10:17 /var/log/alternatives.log
-rw-r----- 1 syslog adm    57781 Oct  5 15:45 /var/log/auth.log
-rw-r--r-- 1 root   root  118497 Aug  5 11:55 /var/log/bootstrap...</msg>
<var>${log_perms}</var>
<arg>ls -la /var/log/*.log /var/log/messages /var/log/secure /var/log/syslog 2&gt;/dev/null || echo "Permission check not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:27.370348" elapsed="0.049729"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:27.421870" level="INFO">Executing command 'stat -c '%n %U:%G %a' /var/log/*.log /var/log/messages /var/log/secure 2&gt;/dev/null || echo "stat not available"'.</msg>
<msg time="2025-10-05T15:45:27.474632" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:27.475058" level="INFO">${output} = /var/log/alternatives.log root:root 644
/var/log/auth.log syslog:adm 640
/var/log/bootstrap.log root:root 644
/var/log/dpkg.log root:root 644
/var/log/fontconfig.log root:root 644
/var/log/kern.log sy...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:27.421412" elapsed="0.053711"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:27.475256" elapsed="0.000079"/>
</return>
<msg time="2025-10-05T15:45:27.475706" level="INFO">${log_owners} = /var/log/alternatives.log root:root 644
/var/log/auth.log syslog:adm 640
/var/log/bootstrap.log root:root 644
/var/log/dpkg.log root:root 644
/var/log/fontconfig.log root:root 644
/var/log/kern.log sy...</msg>
<var>${log_owners}</var>
<arg>stat -c '%n %U:%G %a' /var/log/*.log /var/log/messages /var/log/secure 2&gt;/dev/null || echo "stat not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:27.420378" elapsed="0.055381"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.476592" level="INFO">${permissions} = === Log File Permissions (ls -la) ===
-rw-r--r-- 1 root   root   32433 Sep 28 10:17 /var/log/alternatives.log
-rw-r----- 1 syslog adm    57781 Oct  5 15:45 /var/log/auth.log
-rw-r--r-- 1 root   root  ...</msg>
<var>${permissions}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Log File Permissions (ls -la) ===</arg>
<arg>${log_perms}</arg>
<arg>=== Log File Owners and Modes (stat) ===</arg>
<arg>${log_owners}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:27.476093" elapsed="0.000568"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.477255" level="INFO">‚úÖ Log file permissions collected</msg>
<arg>‚úÖ Log file permissions collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.476906" elapsed="0.000630"/>
</kw>
<return>
<value>${permissions}</value>
<status status="PASS" start="2025-10-05T15:45:27.477685" elapsed="0.000139"/>
</return>
<msg time="2025-10-05T15:45:27.478244" level="INFO">${log_permissions} = === Log File Permissions (ls -la) ===
-rw-r--r-- 1 root   root   32433 Sep 28 10:17 /var/log/alternatives.log
-rw-r----- 1 syslog adm    57781 Oct  5 15:45 /var/log/auth.log
-rw-r--r-- 1 root   root  ...</msg>
<var>${log_permissions}</var>
<doc>üîí Check log file permissions</doc>
<status status="PASS" start="2025-10-05T15:45:27.369643" elapsed="0.110749"/>
</kw>
<kw name="Save Log Permissions to File" owner="logs_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:45:27.482332" level="INFO">${timestamp} = 20251005_154527</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:45:27.481935" elapsed="0.000449"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.483375" level="INFO">${perm_file} = results/test22_event_logs/data/log_permissions_20251005_154527.txt</msg>
<var>${perm_file}</var>
<arg>${DATA_DIR}/log_permissions_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:45:27.483004" elapsed="0.000417"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.487088" level="INFO">${report} = =========================================
=== Log File Permissions ===
=========================================
Timestamp: 20251005_154527
Target Server: alhxvdvitap01 (172.30.16.186)

=== Log File P...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== Log File Permissions ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>${permissions}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:27.484249" elapsed="0.003015"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:45:27.498878" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/log_permissions_20251005_154527.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/log_permissions_20251005_154527.txt&lt;/a&gt;'.</msg>
<arg>${perm_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:45:27.487651" elapsed="0.011476"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.499915" level="INFO">üìÑ Log permissions saved to: results/test22_event_logs/data/log_permissions_20251005_154527.txt</msg>
<arg>üìÑ Log permissions saved to: ${perm_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.499485" elapsed="0.000605"/>
</kw>
<return>
<value>${perm_file}</value>
<status status="PASS" start="2025-10-05T15:45:27.500219" elapsed="0.000081"/>
</return>
<msg time="2025-10-05T15:45:27.500562" level="INFO">${perm_file} = results/test22_event_logs/data/log_permissions_20251005_154527.txt</msg>
<var>${perm_file}</var>
<arg>${log_permissions}</arg>
<doc>üíæ Save log permissions to file</doc>
<status status="PASS" start="2025-10-05T15:45:27.480974" elapsed="0.019638"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.501228" level="INFO">üìÑ Log permissions saved to: results/test22_event_logs/data/log_permissions_20251005_154527.txt</msg>
<arg>üìÑ Log permissions saved to: ${perm_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.500895" elapsed="0.000478"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.501751" level="INFO">‚úÖ Log file permissions validated</msg>
<arg>‚úÖ Log file permissions validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.501568" elapsed="0.000309"/>
</kw>
<kw name="Log Test End" owner="logs_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.503075" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.502880" elapsed="0.000321"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.503641" level="INFO">üèÅ Completed Test: Normal - Check Log File Permissions | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.503405" elapsed="0.000376"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.504163" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.503958" elapsed="0.000323"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:45:27.502291" elapsed="0.002087"/>
</kw>
<doc>üîí Verify log files have correct permissions</doc>
<tag>logs</tag>
<tag>normal</tag>
<tag>permissions</tag>
<tag>security</tag>
<status status="PASS" start="2025-10-05T15:45:27.365922" elapsed="0.138520"/>
</test>
<test id="s1-s5-t14" name="Normal - Check SELinux Denial Logs" line="224">
<kw name="Log Test Start" owner="logs_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.506618" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.506407" elapsed="0.000313"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.508956" level="INFO">üèÅ Starting Test: Normal - Check SELinux Denial Logs</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.508352" elapsed="0.000743"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.509373" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.509253" elapsed="0.000215"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:45:27.506127" elapsed="0.003436"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.509819" level="INFO">üîç Checking SELinux denial logs...</msg>
<arg>üîç Checking SELinux denial logs...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.509689" elapsed="0.000232"/>
</kw>
<kw name="Check SELinux Denials" owner="logs_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.510422" level="INFO">üîí Checking SELinux denials...</msg>
<arg>üîí Checking SELinux denials...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.510326" elapsed="0.000198"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:27.511894" level="INFO">Executing command 'getenforce 2&gt;&amp;1 || echo "SELinux not available"'.</msg>
<msg time="2025-10-05T15:45:27.524005" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:27.524169" level="INFO">${output} = bash: line 1: getenforce: command not found
SELinux not available</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:27.511748" elapsed="0.012447"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:27.524265" elapsed="0.000048"/>
</return>
<msg time="2025-10-05T15:45:27.524457" level="INFO">${selinux_status} = bash: line 1: getenforce: command not found
SELinux not available</msg>
<var>${selinux_status}</var>
<arg>getenforce 2&gt;&amp;1 || echo "SELinux not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:27.510750" elapsed="0.013731"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:27.525454" level="INFO">Executing command 'ausearch -m avc -ts recent 2&gt;&amp;1 | tail -100 || grep -i "denied" /var/log/audit/audit.log 2&gt;/dev/null | tail -50 || echo "No SELinux denials found"'.</msg>
<msg time="2025-10-05T15:45:27.571828" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:27.572083" level="INFO">${output} = bash: line 1: ausearch: command not found</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:27.525056" elapsed="0.047069"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:27.572230" elapsed="0.000064"/>
</return>
<msg time="2025-10-05T15:45:27.572612" level="INFO">${audit_denials} = bash: line 1: ausearch: command not found</msg>
<var>${audit_denials}</var>
<arg>ausearch -m avc -ts recent 2&gt;&amp;1 | tail -100 || grep -i "denied" /var/log/audit/audit.log 2&gt;/dev/null | tail -50 || echo "No SELinux denials found"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:27.524686" elapsed="0.047968"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:27.573712" level="INFO">Executing command 'sealert -a /var/log/audit/audit.log 2&gt;&amp;1 | head -50 || echo "sealert not available"'.</msg>
<msg time="2025-10-05T15:45:27.623913" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:27.624304" level="INFO">${output} = bash: line 1: sealert: command not found</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:27.573424" elapsed="0.050941"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:27.624485" elapsed="0.000073"/>
</return>
<msg time="2025-10-05T15:45:27.624790" level="INFO">${sealert} = bash: line 1: sealert: command not found</msg>
<var>${sealert}</var>
<arg>sealert -a /var/log/audit/audit.log 2&gt;&amp;1 | head -50 || echo "sealert not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:27.572964" elapsed="0.051866"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.626088" level="INFO">${selinux_denials} = === SELinux Status ===
bash: line 1: getenforce: command not found
SELinux not available

=== Audit Denials (ausearch) ===
bash: line 1: ausearch: command not found

=== SELinux Alerts (sealert) ===
b...</msg>
<var>${selinux_denials}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== SELinux Status ===</arg>
<arg>${selinux_status}</arg>
<arg>=== Audit Denials (ausearch) ===</arg>
<arg>${audit_denials}</arg>
<arg>=== SELinux Alerts (sealert) ===</arg>
<arg>${sealert}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:27.625074" elapsed="0.001069"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.626936" level="INFO">‚úÖ SELinux denial check completed</msg>
<arg>‚úÖ SELinux denial check completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.626520" elapsed="0.000682"/>
</kw>
<return>
<value>${selinux_denials}</value>
<status status="PASS" start="2025-10-05T15:45:27.627336" elapsed="0.000084"/>
</return>
<msg time="2025-10-05T15:45:27.627719" level="INFO">${selinux_denials} = === SELinux Status ===
bash: line 1: getenforce: command not found
SELinux not available

=== Audit Denials (ausearch) ===
bash: line 1: ausearch: command not found

=== SELinux Alerts (sealert) ===
b...</msg>
<var>${selinux_denials}</var>
<doc>üîí Check for SELinux denials</doc>
<status status="PASS" start="2025-10-05T15:45:27.510105" elapsed="0.117660"/>
</kw>
<kw name="Save SELinux Denials to File" owner="logs_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:45:27.629032" level="INFO">${timestamp} = 20251005_154527</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:45:27.628592" elapsed="0.000499"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.629629" level="INFO">${selinux_file} = results/test22_event_logs/data/selinux_denials_20251005_154527.txt</msg>
<var>${selinux_file}</var>
<arg>${DATA_DIR}/selinux_denials_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:45:27.629311" elapsed="0.000383"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.630617" level="INFO">${report} = =========================================
=== SELinux Denials ===
=========================================
Timestamp: 20251005_154527
Target Server: alhxvdvitap01 (172.30.16.186)

=== SELinux Status ...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== SELinux Denials ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>${selinux_denials}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:27.629962" elapsed="0.000710"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:45:27.644404" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/selinux_denials_20251005_154527.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/selinux_denials_20251005_154527.txt&lt;/a&gt;'.</msg>
<arg>${selinux_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:45:27.631104" elapsed="0.013466"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.645389" level="INFO">üìÑ SELinux denials saved to: results/test22_event_logs/data/selinux_denials_20251005_154527.txt</msg>
<arg>üìÑ SELinux denials saved to: ${selinux_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.644924" elapsed="0.000965"/>
</kw>
<return>
<value>${selinux_file}</value>
<status status="PASS" start="2025-10-05T15:45:27.646042" elapsed="0.000085"/>
</return>
<msg time="2025-10-05T15:45:27.646374" level="INFO">${selinux_file} = results/test22_event_logs/data/selinux_denials_20251005_154527.txt</msg>
<var>${selinux_file}</var>
<arg>${selinux_denials}</arg>
<doc>üíæ Save SELinux denials to file</doc>
<status status="PASS" start="2025-10-05T15:45:27.628107" elapsed="0.019119"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.648060" level="INFO">üìÑ SELinux denials saved to: results/test22_event_logs/data/selinux_denials_20251005_154527.txt</msg>
<arg>üìÑ SELinux denials saved to: ${selinux_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.647660" elapsed="0.000580"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.648715" level="INFO">‚úÖ SELinux denial check completed</msg>
<arg>‚úÖ SELinux denial check completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.648499" elapsed="0.000361"/>
</kw>
<kw name="Log Test End" owner="logs_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.649994" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.649810" elapsed="0.000340"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.650753" level="INFO">üèÅ Completed Test: Normal - Check SELinux Denial Logs | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.650341" elapsed="0.000621"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.651377" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.651175" elapsed="0.000343"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:45:27.649241" elapsed="0.002415"/>
</kw>
<doc>üîí Check for SELinux denials in logs</doc>
<tag>audit</tag>
<tag>normal</tag>
<tag>security</tag>
<tag>selinux</tag>
<status status="PASS" start="2025-10-05T15:45:27.504797" elapsed="0.146947"/>
</test>
<test id="s1-s5-t15" name="Normal - Check Application Specific Logs" line="239">
<kw name="Log Test Start" owner="logs_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.654213" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.653914" elapsed="0.000456"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.654975" level="INFO">üèÅ Starting Test: Normal - Check Application Specific Logs</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.654667" elapsed="0.000495"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.655453" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.655313" elapsed="0.000257"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:45:27.653384" elapsed="0.002284"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.655921" level="INFO">üîç Checking application-specific logs...</msg>
<arg>üîç Checking application-specific logs...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.655796" elapsed="0.000298"/>
</kw>
<kw name="Collect Application Logs" owner="logs_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.656816" level="INFO">üì± Collecting application logs...</msg>
<arg>üì± Collecting application logs...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.656673" elapsed="0.000274"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:27.657830" level="INFO">Executing command 'tail -500 /var/log/httpd/error_log 2&gt;/dev/null || tail -500 /var/log/apache2/error.log 2&gt;/dev/null || echo "No httpd logs"'.</msg>
<msg time="2025-10-05T15:45:27.675173" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:27.675419" level="INFO">${output} = No httpd logs</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:27.657678" elapsed="0.017768"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:27.675556" elapsed="0.000059"/>
</return>
<msg time="2025-10-05T15:45:27.675770" level="INFO">${httpd_logs} = No httpd logs</msg>
<var>${httpd_logs}</var>
<arg>tail -${LOG_LINES_TO_COLLECT} /var/log/httpd/error_log 2&gt;/dev/null || tail -${LOG_LINES_TO_COLLECT} /var/log/apache2/error.log 2&gt;/dev/null || echo "No httpd logs"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:27.657173" elapsed="0.018620"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:27.676580" level="INFO">Executing command 'tail -500 /var/log/nginx/error.log 2&gt;/dev/null || echo "No nginx logs"'.</msg>
<msg time="2025-10-05T15:45:27.723337" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:27.723592" level="INFO">${output} = No nginx logs</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:27.676422" elapsed="0.047204"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:27.723715" elapsed="0.000079"/>
</return>
<msg time="2025-10-05T15:45:27.723962" level="INFO">${nginx_logs} = No nginx logs</msg>
<var>${nginx_logs}</var>
<arg>tail -${LOG_LINES_TO_COLLECT} /var/log/nginx/error.log 2&gt;/dev/null || echo "No nginx logs"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:27.676048" elapsed="0.047940"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:27.725255" level="INFO">Executing command 'tail -500 /var/log/mysql/error.log 2&gt;/dev/null || tail -500 /var/log/postgresql/*.log 2&gt;/dev/null || echo "No database logs"'.</msg>
<msg time="2025-10-05T15:45:27.777051" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:27.777393" level="INFO">${output} = No database logs</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:27.724945" elapsed="0.052485"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:27.777523" elapsed="0.000061"/>
</return>
<msg time="2025-10-05T15:45:27.778637" level="INFO">${db_logs} = No database logs</msg>
<var>${db_logs}</var>
<arg>tail -${LOG_LINES_TO_COLLECT} /var/log/mysql/error.log 2&gt;/dev/null || tail -${LOG_LINES_TO_COLLECT} /var/log/postgresql/*.log 2&gt;/dev/null || echo "No database logs"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:27.724226" elapsed="0.054462"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:27.780013" level="INFO">Executing command 'ls -la /var/log/ 2&gt;/dev/null | grep -vE "lastlog|wtmp|btmp" || echo "Log directory listing not available"'.</msg>
<msg time="2025-10-05T15:45:27.843400" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:27.843618" level="INFO">${output} = total 5716
drwxrwxr-x   8 root      syslog             4096 Oct  5 12:18 .
drwxr-xr-x  13 root      root               4096 Aug 20 17:20 ..
lrwxrwxrwx   1 root      root                 39 Aug  5 11:5...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:27.779720" elapsed="0.063932"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:27.843769" elapsed="0.000055"/>
</return>
<msg time="2025-10-05T15:45:27.843978" level="INFO">${app_list} = total 5716
drwxrwxr-x   8 root      syslog             4096 Oct  5 12:18 .
drwxr-xr-x  13 root      root               4096 Aug 20 17:20 ..
lrwxrwxrwx   1 root      root                 39 Aug  5 11:5...</msg>
<var>${app_list}</var>
<arg>ls -la /var/log/ 2&gt;/dev/null | grep -vE "lastlog|wtmp|btmp" || echo "Log directory listing not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:27.779167" elapsed="0.064834"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.844490" level="INFO">${app_logs} = === Application Log Directory ===
total 5716
drwxrwxr-x   8 root      syslog             4096 Oct  5 12:18 .
drwxr-xr-x  13 root      root               4096 Aug 20 17:20 ..
lrwxrwxrwx   1 root      r...</msg>
<var>${app_logs}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Application Log Directory ===</arg>
<arg>${app_list}</arg>
<arg>=== HTTPD/Apache Logs ===</arg>
<arg>${httpd_logs}</arg>
<arg>=== Nginx Logs ===</arg>
<arg>${nginx_logs}</arg>
<arg>=== Database Logs ===</arg>
<arg>${db_logs}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:27.844174" elapsed="0.000342"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.844853" level="INFO">‚úÖ Application logs collected</msg>
<arg>‚úÖ Application logs collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.844642" elapsed="0.000346"/>
</kw>
<return>
<value>${app_logs}</value>
<status status="PASS" start="2025-10-05T15:45:27.845178" elapsed="0.000057"/>
</return>
<msg time="2025-10-05T15:45:27.845434" level="INFO">${app_logs} = === Application Log Directory ===
total 5716
drwxrwxr-x   8 root      syslog             4096 Oct  5 12:18 .
drwxr-xr-x  13 root      root               4096 Aug 20 17:20 ..
lrwxrwxrwx   1 root      r...</msg>
<var>${app_logs}</var>
<doc>üì± Collect application-specific logs</doc>
<status status="PASS" start="2025-10-05T15:45:27.656379" elapsed="0.189092"/>
</kw>
<kw name="Save Application Logs to File" owner="logs_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:45:27.846367" level="INFO">${timestamp} = 20251005_154527</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:45:27.846085" elapsed="0.000311"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.846934" level="INFO">${app_file} = results/test22_event_logs/data/application_logs_20251005_154527.txt</msg>
<var>${app_file}</var>
<arg>${DATA_DIR}/application_logs_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:45:27.846588" elapsed="0.000410"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.847534" level="INFO">${report} = =========================================
=== Application Logs ===
=========================================
Timestamp: 20251005_154527
Target Server: alhxvdvitap01 (172.30.16.186)

=== Application Lo...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== Application Logs ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>${app_logs}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:27.847148" elapsed="0.000420"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:45:27.857413" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/application_logs_20251005_154527.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/application_logs_20251005_154527.txt&lt;/a&gt;'.</msg>
<arg>${app_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:45:27.847735" elapsed="0.009838"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.858061" level="INFO">üìÑ Application logs saved to: results/test22_event_logs/data/application_logs_20251005_154527.txt</msg>
<arg>üìÑ Application logs saved to: ${app_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.857795" elapsed="0.000403"/>
</kw>
<return>
<value>${app_file}</value>
<status status="PASS" start="2025-10-05T15:45:27.858263" elapsed="0.000052"/>
</return>
<msg time="2025-10-05T15:45:27.858637" level="INFO">${app_file} = results/test22_event_logs/data/application_logs_20251005_154527.txt</msg>
<var>${app_file}</var>
<arg>${app_logs}</arg>
<doc>üíæ Save application logs to file</doc>
<status status="PASS" start="2025-10-05T15:45:27.845761" elapsed="0.012939"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.859274" level="INFO">üìÑ Application logs saved to: results/test22_event_logs/data/application_logs_20251005_154527.txt</msg>
<arg>üìÑ Application logs saved to: ${app_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.859035" elapsed="0.000347"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.859649" level="INFO">‚úÖ Application log collection completed</msg>
<arg>‚úÖ Application log collection completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.859503" elapsed="0.000239"/>
</kw>
<kw name="Log Test End" owner="logs_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.861089" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.860933" elapsed="0.000271"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.861632" level="INFO">üèÅ Completed Test: Normal - Check Application Specific Logs | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.861394" elapsed="0.000954"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.862805" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.862581" elapsed="0.000419"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:45:27.860010" elapsed="0.003075"/>
</kw>
<doc>üì± Collect and validate application-specific logs</doc>
<tag>applications</tag>
<tag>logs</tag>
<tag>normal</tag>
<tag>validation</tag>
<status status="PASS" start="2025-10-05T15:45:27.652578" elapsed="0.210590"/>
</test>
<test id="s1-s5-t16" name="Normal - Validate Rsyslog Configuration" line="254">
<kw name="Log Test Start" owner="logs_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.866074" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.865470" elapsed="0.000768"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.866726" level="INFO">üèÅ Starting Test: Normal - Validate Rsyslog Configuration</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.866471" elapsed="0.000482"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.867211" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.867089" elapsed="0.000211"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:45:27.864405" elapsed="0.002989"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.867624" level="INFO">üîç Validating rsyslog configuration...</msg>
<arg>üîç Validating rsyslog configuration...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.867515" elapsed="0.000183"/>
</kw>
<kw name="Check Rsyslog Configuration" owner="logs_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:27.930390" level="INFO">üì° Checking rsyslog configuration...</msg>
<arg>üì° Checking rsyslog configuration...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:27.930169" elapsed="0.000395"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:27.931247" level="INFO">Executing command 'cat /etc/rsyslog.conf 2&gt;/dev/null || echo "No /etc/rsyslog.conf"'.</msg>
<msg time="2025-10-05T15:45:27.953703" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:27.954502" level="INFO">${output} = # /etc/rsyslog.conf configuration file for rsyslog
#
# For more information install rsyslog-doc and see
# /usr/share/doc/rsyslog-doc/html/configuration/index.html
#
# Default logging rules can be foun...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:27.931121" elapsed="0.023494"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:27.955085" elapsed="0.000083"/>
</return>
<msg time="2025-10-05T15:45:27.955411" level="INFO">${rsyslog_conf} = # /etc/rsyslog.conf configuration file for rsyslog
#
# For more information install rsyslog-doc and see
# /usr/share/doc/rsyslog-doc/html/configuration/index.html
#
# Default logging rules can be foun...</msg>
<var>${rsyslog_conf}</var>
<arg>cat /etc/rsyslog.conf 2&gt;/dev/null || echo "No /etc/rsyslog.conf"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:27.930779" elapsed="0.024676"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:27.956138" level="INFO">Executing command 'ls -la /etc/rsyslog.d/ 2&gt;/dev/null || echo "No /etc/rsyslog.d/"'.</msg>
<msg time="2025-10-05T15:45:28.014968" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:28.015514" level="INFO">${output} = total 16
drwxr-xr-x  2 root root 4096 Aug  5 11:57 .
drwxr-xr-x 91 root root 4096 Oct  5 15:44 ..
-rw-r--r--  1 root root  255 Jun 24 16:14 21-cloudinit.conf
-rw-r--r--  1 root root 1124 Mar 21  2024 ...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:27.955992" elapsed="0.059612"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:28.015739" elapsed="0.000077"/>
</return>
<msg time="2025-10-05T15:45:28.016134" level="INFO">${rsyslog_d} = total 16
drwxr-xr-x  2 root root 4096 Aug  5 11:57 .
drwxr-xr-x 91 root root 4096 Oct  5 15:44 ..
-rw-r--r--  1 root root  255 Jun 24 16:14 21-cloudinit.conf
-rw-r--r--  1 root root 1124 Mar 21  2024 ...</msg>
<var>${rsyslog_d}</var>
<arg>ls -la /etc/rsyslog.d/ 2&gt;/dev/null || echo "No /etc/rsyslog.d/"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:27.955688" elapsed="0.060494"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:28.017371" level="INFO">Executing command 'systemctl status rsyslog 2&gt;&amp;1 || service rsyslog status 2&gt;&amp;1 || echo "rsyslog status not available"'.</msg>
<msg time="2025-10-05T15:45:28.091329" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:28.091574" level="INFO">${output} = ‚óè rsyslog.service - System Logging Service
     Loaded: loaded (/usr/lib/systemd/system/rsyslog.service; enabled; preset: enabled)
     Active: active (running) since Sun 2025-10-05 12:18:17 CDT; 3h 2...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:28.017139" elapsed="0.074478"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:28.091718" elapsed="0.000065"/>
</return>
<msg time="2025-10-05T15:45:28.092022" level="INFO">${rsyslog_status} = ‚óè rsyslog.service - System Logging Service
     Loaded: loaded (/usr/lib/systemd/system/rsyslog.service; enabled; preset: enabled)
     Active: active (running) since Sun 2025-10-05 12:18:17 CDT; 3h 2...</msg>
<var>${rsyslog_status}</var>
<arg>systemctl status rsyslog 2&gt;&amp;1 || service rsyslog status 2&gt;&amp;1 || echo "rsyslog status not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:28.016632" elapsed="0.075445"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:28.093040" level="INFO">Executing command 'cat /etc/syslog-ng/syslog-ng.conf 2&gt;/dev/null || echo "No syslog-ng configuration"'.</msg>
<msg time="2025-10-05T15:45:28.147236" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:28.148088" level="INFO">${output} = No syslog-ng configuration</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:28.092835" elapsed="0.055301"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:28.148270" elapsed="0.000062"/>
</return>
<msg time="2025-10-05T15:45:28.148538" level="INFO">${syslog_ng} = No syslog-ng configuration</msg>
<var>${syslog_ng}</var>
<arg>cat /etc/syslog-ng/syslog-ng.conf 2&gt;/dev/null || echo "No syslog-ng configuration"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:28.092362" elapsed="0.056211"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.149118" level="INFO">${rsyslog_config} = === /etc/rsyslog.conf ===
# /etc/rsyslog.conf configuration file for rsyslog
#
# For more information install rsyslog-doc and see
# /usr/share/doc/rsyslog-doc/html/configuration/index.html
#
# Default...</msg>
<var>${rsyslog_config}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== /etc/rsyslog.conf ===</arg>
<arg>${rsyslog_conf}</arg>
<arg>=== /etc/rsyslog.d/ Directory ===</arg>
<arg>${rsyslog_d}</arg>
<arg>=== Rsyslog Service Status ===</arg>
<arg>${rsyslog_status}</arg>
<arg>=== Syslog-NG Configuration (if present) ===</arg>
<arg>${syslog_ng}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:28.148772" elapsed="0.000371"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.149375" level="INFO">‚úÖ Rsyslog configuration collected</msg>
<arg>‚úÖ Rsyslog configuration collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:28.149263" elapsed="0.000200"/>
</kw>
<return>
<value>${rsyslog_config}</value>
<status status="PASS" start="2025-10-05T15:45:28.149503" elapsed="0.000026"/>
</return>
<msg time="2025-10-05T15:45:28.149636" level="INFO">${rsyslog_config} = === /etc/rsyslog.conf ===
# /etc/rsyslog.conf configuration file for rsyslog
#
# For more information install rsyslog-doc and see
# /usr/share/doc/rsyslog-doc/html/configuration/index.html
#
# Default...</msg>
<var>${rsyslog_config}</var>
<doc>üì° Check rsyslog configuration</doc>
<status status="PASS" start="2025-10-05T15:45:27.867879" elapsed="0.281777"/>
</kw>
<kw name="Save Rsyslog Config to File" owner="logs_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:45:28.150186" level="INFO">${timestamp} = 20251005_154528</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:45:28.150049" elapsed="0.000156"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.150404" level="INFO">${rsyslog_file} = results/test22_event_logs/data/rsyslog_config_20251005_154528.txt</msg>
<var>${rsyslog_file}</var>
<arg>${DATA_DIR}/rsyslog_config_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:45:28.150284" elapsed="0.000137"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.151046" level="INFO">${report} = =========================================
=== Rsyslog Configuration ===
=========================================
Timestamp: 20251005_154528
Target Server: alhxvdvitap01 (172.30.16.186)

=== /etc/rsys...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== Rsyslog Configuration ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>${rsyslog_config}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:28.150613" elapsed="0.000465"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:45:28.158220" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/rsyslog_config_20251005_154528.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/rsyslog_config_20251005_154528.txt&lt;/a&gt;'.</msg>
<arg>${rsyslog_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:45:28.151235" elapsed="0.007141"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.159137" level="INFO">üìÑ Rsyslog configuration saved to: results/test22_event_logs/data/rsyslog_config_20251005_154528.txt</msg>
<arg>üìÑ Rsyslog configuration saved to: ${rsyslog_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:28.158624" elapsed="0.000629"/>
</kw>
<return>
<value>${rsyslog_file}</value>
<status status="PASS" start="2025-10-05T15:45:28.159327" elapsed="0.000049"/>
</return>
<msg time="2025-10-05T15:45:28.159519" level="INFO">${rsyslog_file} = results/test22_event_logs/data/rsyslog_config_20251005_154528.txt</msg>
<var>${rsyslog_file}</var>
<arg>${rsyslog_config}</arg>
<doc>üíæ Save rsyslog configuration to file</doc>
<status status="PASS" start="2025-10-05T15:45:28.149836" elapsed="0.009713"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.159844" level="INFO">üìÑ Rsyslog configuration saved to: results/test22_event_logs/data/rsyslog_config_20251005_154528.txt</msg>
<arg>üìÑ Rsyslog configuration saved to: ${rsyslog_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:28.159666" elapsed="0.000263"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.160162" level="INFO">‚úÖ Rsyslog configuration validated</msg>
<arg>‚úÖ Rsyslog configuration validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:28.160051" elapsed="0.000205"/>
</kw>
<kw name="Log Test End" owner="logs_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.161150" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:28.161011" elapsed="0.000241"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.161600" level="INFO">üèÅ Completed Test: Normal - Validate Rsyslog Configuration | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:28.161389" elapsed="0.000308"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.161989" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:28.161833" elapsed="0.000266"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:45:28.160623" elapsed="0.001558"/>
</kw>
<doc>üì° Verify rsyslog is properly configured</doc>
<tag>configuration</tag>
<tag>logging</tag>
<tag>normal</tag>
<tag>rsyslog</tag>
<status status="PASS" start="2025-10-05T15:45:27.863526" elapsed="0.298702"/>
</test>
<test id="s1-s5-t17" name="Normal - Check Log Size and Growth Rate" line="269">
<kw name="Log Test Start" owner="logs_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.164837" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:28.164179" elapsed="0.000980"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.165965" level="INFO">üèÅ Starting Test: Normal - Check Log Size and Growth Rate</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:28.165468" elapsed="0.000916"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.167299" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:28.166772" elapsed="0.000745"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:45:28.163788" elapsed="0.003829"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.167873" level="INFO">üîç Analyzing log file sizes and growth rates...</msg>
<arg>üîç Analyzing log file sizes and growth rates...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:28.167765" elapsed="0.000195"/>
</kw>
<kw name="Analyze Log Sizes and Growth" owner="logs_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.168424" level="INFO">üìà Analyzing log sizes and growth...</msg>
<arg>üìà Analyzing log sizes and growth...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:28.168335" elapsed="0.000171"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:28.168988" level="INFO">Executing command 'du -sh /var/log/* 2&gt;/dev/null | sort -rh | head -20 || echo "Log size analysis not available"'.</msg>
<msg time="2025-10-05T15:45:28.194722" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:28.195126" level="INFO">${output} = 265M	/var/log/journal
1.9M	/var/log/syslog.1
1.8M	/var/log/syslog
692K	/var/log/dpkg.log
268K	/var/log/apt
220K	/var/log/kern.log
192K	/var/log/syslog.4.gz
156K	/var/log/syslog.2.gz
136K	/var/log/sysl...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:28.168891" elapsed="0.026268"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:28.195240" elapsed="0.000050"/>
</return>
<msg time="2025-10-05T15:45:28.195435" level="INFO">${log_sizes} = 265M	/var/log/journal
1.9M	/var/log/syslog.1
1.8M	/var/log/syslog
692K	/var/log/dpkg.log
268K	/var/log/apt
220K	/var/log/kern.log
192K	/var/log/syslog.4.gz
156K	/var/log/syslog.2.gz
136K	/var/log/sysl...</msg>
<var>${log_sizes}</var>
<arg>du -sh /var/log/* 2&gt;/dev/null | sort -rh | head -20 || echo "Log size analysis not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:28.168659" elapsed="0.026811"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:28.196181" level="INFO">Executing command 'du -sh /var/log 2&gt;&amp;1 || echo "Total size not available"'.</msg>
<msg time="2025-10-05T15:45:28.243562" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:28.243790" level="INFO">${output} = du: cannot read directory '/var/log/private': Permission denied
271M	/var/log
Total size not available</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:28.196028" elapsed="0.047803"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:28.243942" elapsed="0.000076"/>
</return>
<msg time="2025-10-05T15:45:28.244299" level="INFO">${total_log_size} = du: cannot read directory '/var/log/private': Permission denied
271M	/var/log
Total size not available</msg>
<var>${total_log_size}</var>
<arg>du -sh /var/log 2&gt;&amp;1 || echo "Total size not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:28.195734" elapsed="0.048603"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:28.245473" level="INFO">Executing command 'find /var/log -type f -printf '%T+ %p
' 2&gt;/dev/null | sort | head -10 || echo "Oldest log search not available"'.</msg>
<msg time="2025-10-05T15:45:28.296594" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:28.296881" level="INFO">${output} = 2025-08-05+11:55:29.0709635820 /var/log/faillog
2025-08-05+11:55:53.9919859160 /var/log/bootstrap.log
2025-08-05+11:57:31.9290298770 /var/log/landscape/sysinfo.log
2025-08-20+17:20:56.0306179780 /var/...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:28.245251" elapsed="0.051678"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:28.297091" elapsed="0.000093"/>
</return>
<msg time="2025-10-05T15:45:28.297417" level="INFO">${oldest_logs} = 2025-08-05+11:55:29.0709635820 /var/log/faillog
2025-08-05+11:55:53.9919859160 /var/log/bootstrap.log
2025-08-05+11:57:31.9290298770 /var/log/landscape/sysinfo.log
2025-08-20+17:20:56.0306179780 /var/...</msg>
<var>${oldest_logs}</var>
<arg>find /var/log -type f -printf '%T+ %p\n' 2&gt;/dev/null | sort | head -10 || echo "Oldest log search not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:28.244660" elapsed="0.052799"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:28.298547" level="INFO">Executing command 'find /var/log -type f -printf '%T+ %p
' 2&gt;/dev/null | sort -r | head -10 || echo "Newest log search not available"'.</msg>
<msg time="2025-10-05T15:45:28.352459" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:28.352693" level="INFO">${output} = 2025-10-05+15:45:10.5283229340 /var/log/journal/e92ae856753b432cbc76262e53dea82e/system.journal
2025-10-05+15:45:10.1683229470 /var/log/wtmp
2025-10-05+15:45:10.1683229470 /var/log/lastlog
2025-10-05+...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:28.298277" elapsed="0.054447"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:28.352812" elapsed="0.000054"/>
</return>
<msg time="2025-10-05T15:45:28.353080" level="INFO">${newest_logs} = 2025-10-05+15:45:10.5283229340 /var/log/journal/e92ae856753b432cbc76262e53dea82e/system.journal
2025-10-05+15:45:10.1683229470 /var/log/wtmp
2025-10-05+15:45:10.1683229470 /var/log/lastlog
2025-10-05+...</msg>
<var>${newest_logs}</var>
<arg>find /var/log -type f -printf '%T+ %p\n' 2&gt;/dev/null | sort -r | head -10 || echo "Newest log search not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:28.297802" elapsed="0.055310"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.354801" level="INFO">${log_size_analysis} = === Largest Log Files/Directories ===
265M	/var/log/journal
1.9M	/var/log/syslog.1
1.8M	/var/log/syslog
692K	/var/log/dpkg.log
268K	/var/log/apt
220K	/var/log/kern.log
192K	/var/log/syslog.4.gz
156K	/...</msg>
<var>${log_size_analysis}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Largest Log Files/Directories ===</arg>
<arg>${log_sizes}</arg>
<arg>=== Total /var/log Size ===</arg>
<arg>${total_log_size}</arg>
<arg>=== Oldest Log Files ===</arg>
<arg>${oldest_logs}</arg>
<arg>=== Newest Log Files ===</arg>
<arg>${newest_logs}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:28.354248" elapsed="0.000660"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.355454" level="INFO">‚úÖ Log size analysis completed</msg>
<arg>‚úÖ Log size analysis completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:28.355193" elapsed="0.000891"/>
</kw>
<return>
<value>${log_size_analysis}</value>
<status status="PASS" start="2025-10-05T15:45:28.356181" elapsed="0.000067"/>
</return>
<msg time="2025-10-05T15:45:28.356519" level="INFO">${log_size_analysis} = === Largest Log Files/Directories ===
265M	/var/log/journal
1.9M	/var/log/syslog.1
1.8M	/var/log/syslog
692K	/var/log/dpkg.log
268K	/var/log/apt
220K	/var/log/kern.log
192K	/var/log/syslog.4.gz
156K	/...</msg>
<var>${log_size_analysis}</var>
<doc>üìà Analyze log file sizes and growth rates</doc>
<status status="PASS" start="2025-10-05T15:45:28.168136" elapsed="0.188428"/>
</kw>
<kw name="Save Log Size Analysis to File" owner="logs_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:45:28.357870" level="INFO">${timestamp} = 20251005_154528</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:45:28.357497" elapsed="0.000418"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.358401" level="INFO">${size_file} = results/test22_event_logs/data/log_size_analysis_20251005_154528.txt</msg>
<var>${size_file}</var>
<arg>${DATA_DIR}/log_size_analysis_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:45:28.358100" elapsed="0.000358"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.359735" level="INFO">${report} = =========================================
=== Log Size Analysis ===
=========================================
Timestamp: 20251005_154528
Target Server: alhxvdvitap01 (172.30.16.186)

=== Largest Log F...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== Log Size Analysis ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>${log_size_analysis}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:28.358739" elapsed="0.001089"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:45:28.369033" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/log_size_analysis_20251005_154528.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/log_size_analysis_20251005_154528.txt&lt;/a&gt;'.</msg>
<arg>${size_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:45:28.360234" elapsed="0.008983"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.369739" level="INFO">üìÑ Log size analysis saved to: results/test22_event_logs/data/log_size_analysis_20251005_154528.txt</msg>
<arg>üìÑ Log size analysis saved to: ${size_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:28.369456" elapsed="0.000426"/>
</kw>
<return>
<value>${size_file}</value>
<status status="PASS" start="2025-10-05T15:45:28.369952" elapsed="0.000051"/>
</return>
<msg time="2025-10-05T15:45:28.370181" level="INFO">${size_file} = results/test22_event_logs/data/log_size_analysis_20251005_154528.txt</msg>
<var>${size_file}</var>
<arg>${log_size_analysis}</arg>
<doc>üíæ Save log size analysis to file</doc>
<status status="PASS" start="2025-10-05T15:45:28.356942" elapsed="0.013278"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.370892" level="INFO">üìÑ Log size analysis saved to: results/test22_event_logs/data/log_size_analysis_20251005_154528.txt</msg>
<arg>üìÑ Log size analysis saved to: ${size_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:28.370475" elapsed="0.000566"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.371452" level="INFO">‚úÖ Log size analysis completed</msg>
<arg>‚úÖ Log size analysis completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:28.371249" elapsed="0.000338"/>
</kw>
<kw name="Log Test End" owner="logs_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.372719" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:28.372511" elapsed="0.000359"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.373346" level="INFO">üèÅ Completed Test: Normal - Check Log Size and Growth Rate | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:28.373040" elapsed="0.000472"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.374016" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:28.373753" elapsed="0.000445"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:45:28.371900" elapsed="0.002451"/>
</kw>
<doc>üìà Analyze log file sizes and growth rates</doc>
<tag>growth</tag>
<tag>log_size</tag>
<tag>monitoring</tag>
<tag>normal</tag>
<status status="PASS" start="2025-10-05T15:45:28.163151" elapsed="0.211298"/>
</test>
<test id="s1-s5-t18" name="Normal - Check System Uptime and Reboot History" line="284">
<kw name="Log Test Start" owner="logs_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.376074" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:28.375889" elapsed="0.000297"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.376500" level="INFO">üèÅ Starting Test: Normal - Check System Uptime and Reboot History</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:28.376333" elapsed="0.000268"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.377514" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:28.377363" elapsed="0.000252"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:45:28.375593" elapsed="0.002086"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.377908" level="INFO">üîç Checking system uptime and reboot history...</msg>
<arg>üîç Checking system uptime and reboot history...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:28.377793" elapsed="0.000199"/>
</kw>
<kw name="Check Uptime and Reboot History" owner="logs_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:28.378716" level="INFO">‚è±Ô∏è Checking uptime and reboot history...</msg>
<arg>‚è±Ô∏è Checking uptime and reboot history...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:28.378387" elapsed="0.000552"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:28.379649" level="INFO">Executing command 'uptime 2&gt;&amp;1 || echo "uptime not available"'.</msg>
<msg time="2025-10-05T15:45:28.418889" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:28.419337" level="INFO">${output} =  15:45:28 up  2:40,  2 users,  load average: 1.02, 0.50, 0.41</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:28.379519" elapsed="0.039889"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:28.419593" elapsed="0.000103"/>
</return>
<msg time="2025-10-05T15:45:28.420022" level="INFO">${uptime} =  15:45:28 up  2:40,  2 users,  load average: 1.02, 0.50, 0.41</msg>
<var>${uptime}</var>
<arg>uptime 2&gt;&amp;1 || echo "uptime not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:28.379172" elapsed="0.040954"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:28.421635" level="INFO">Executing command 'last reboot | head -20 2&gt;&amp;1 || echo "last reboot not available"'.</msg>
<msg time="2025-10-05T15:45:28.492675" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:28.493000" level="INFO">${output} = reboot   system boot  6.6.87.2-microso Sun Oct  5 12:18   still running
reboot   system boot  6.6.87.2-microso Sun Oct  5 12:06   still running
reboot   system boot  6.6.87.2-microso Mon Sep 29 22:06 ...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:28.421309" elapsed="0.071738"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:28.493146" elapsed="0.000063"/>
</return>
<msg time="2025-10-05T15:45:28.493404" level="INFO">${last_reboot} = reboot   system boot  6.6.87.2-microso Sun Oct  5 12:18   still running
reboot   system boot  6.6.87.2-microso Sun Oct  5 12:06   still running
reboot   system boot  6.6.87.2-microso Mon Sep 29 22:06 ...</msg>
<var>${last_reboot}</var>
<arg>last reboot | head -20 2&gt;&amp;1 || echo "last reboot not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:28.420595" elapsed="0.072845"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:28.494933" level="INFO">Executing command 'who -b 2&gt;&amp;1 || echo "who -b not available"'.</msg>
<msg time="2025-10-05T15:45:28.546018" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:28.546347" level="INFO">${output} =          system boot  2025-10-05 12:18</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:28.494121" elapsed="0.052283"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:28.546521" elapsed="0.000106"/>
</return>
<msg time="2025-10-05T15:45:28.546934" level="INFO">${who_boot} =          system boot  2025-10-05 12:18</msg>
<var>${who_boot}</var>
<arg>who -b 2&gt;&amp;1 || echo "who -b not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:28.493708" elapsed="0.053304"/>
</kw>
<kw name="Execute Command" owner="logs_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:28.548091" level="INFO">Executing command 'journalctl --list-boots 2&gt;&amp;1 | head -20 || echo "Boot list not available"'.</msg>
<msg time="2025-10-05T15:45:31.752184" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:31.752407" level="INFO">${output} = IDX BOOT ID                          FIRST ENTRY                 LAST ENTRY
 -8 c9febcdebe354d36953259d448b8d22f Wed 2025-08-20 17:20:55 CDT Wed 2025-08-20 18:34:34 CDT
 -7 756707ee465642eca24996deda1...</msg>
<var>${output}</var>
<arg>${command}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:28.547887" elapsed="3.204601"/>
</kw>
<return>
<value>${output}</value>
<status status="PASS" start="2025-10-05T15:45:31.752715" elapsed="0.000057"/>
</return>
<msg time="2025-10-05T15:45:31.752956" level="INFO">${reboot_history} = IDX BOOT ID                          FIRST ENTRY                 LAST ENTRY
 -8 c9febcdebe354d36953259d448b8d22f Wed 2025-08-20 17:20:55 CDT Wed 2025-08-20 18:34:34 CDT
 -7 756707ee465642eca24996deda1...</msg>
<var>${reboot_history}</var>
<arg>journalctl --list-boots 2&gt;&amp;1 | head -20 || echo "Boot list not available"</arg>
<doc>üîß Execute a command on the remote server via SSH</doc>
<status status="PASS" start="2025-10-05T15:45:28.547344" elapsed="3.205643"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.753761" level="INFO">${uptime_analysis} = === Current Uptime ===
 15:45:28 up  2:40,  2 users,  load average: 1.02, 0.50, 0.41

=== Last Boot Time ===
         system boot  2025-10-05 12:18

=== Reboot History (last reboot) ===
reboot   syste...</msg>
<var>${uptime_analysis}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Current Uptime ===</arg>
<arg>${uptime}</arg>
<arg>=== Last Boot Time ===</arg>
<arg>${who_boot}</arg>
<arg>=== Reboot History (last reboot) ===</arg>
<arg>${last_reboot}</arg>
<arg>=== Boot List (journalctl) ===</arg>
<arg>${reboot_history}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:31.753187" elapsed="0.000622"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.754249" level="INFO">‚úÖ Uptime and reboot history collected</msg>
<arg>‚úÖ Uptime and reboot history collected</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.754028" elapsed="0.000402"/>
</kw>
<return>
<value>${uptime_analysis}</value>
<status status="PASS" start="2025-10-05T15:45:31.754514" elapsed="0.000056"/>
</return>
<msg time="2025-10-05T15:45:31.754788" level="INFO">${uptime_analysis} = === Current Uptime ===
 15:45:28 up  2:40,  2 users,  load average: 1.02, 0.50, 0.41

=== Last Boot Time ===
         system boot  2025-10-05 12:18

=== Reboot History (last reboot) ===
reboot   syste...</msg>
<var>${uptime_analysis}</var>
<doc>‚è±Ô∏è Check system uptime and reboot history</doc>
<status status="PASS" start="2025-10-05T15:45:28.378173" elapsed="3.377449"/>
</kw>
<kw name="Save Uptime Analysis to File" owner="logs_keywords">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:45:31.756786" level="INFO">${timestamp} = 20251005_154531</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:45:31.756426" elapsed="0.000404"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.757284" level="INFO">${uptime_file} = results/test22_event_logs/data/uptime_analysis_20251005_154531.txt</msg>
<var>${uptime_file}</var>
<arg>${DATA_DIR}/uptime_analysis_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:45:31.757022" elapsed="0.000297"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.757931" level="INFO">${report} = =========================================
=== Uptime and Reboot History ===
=========================================
Timestamp: 20251005_154531
Target Server: alhxvdvitap01 (172.30.16.186)

=== Curre...</msg>
<var>${report}</var>
<arg>SEPARATOR=\n</arg>
<arg>=========================================</arg>
<arg>=== Uptime and Reboot History ===</arg>
<arg>=========================================</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>${uptime_analysis}</arg>
<arg>=========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:45:31.757465" elapsed="0.000507"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:45:31.768186" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/uptime_analysis_20251005_154531.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test22_event_logs/data/uptime_analysis_20251005_154531.txt&lt;/a&gt;'.</msg>
<arg>${uptime_file}</arg>
<arg>${report}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:45:31.758195" elapsed="0.010126"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.768921" level="INFO">üìÑ Uptime analysis saved to: results/test22_event_logs/data/uptime_analysis_20251005_154531.txt</msg>
<arg>üìÑ Uptime analysis saved to: ${uptime_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.768624" elapsed="0.000420"/>
</kw>
<return>
<value>${uptime_file}</value>
<status status="PASS" start="2025-10-05T15:45:31.769118" elapsed="0.000044"/>
</return>
<msg time="2025-10-05T15:45:31.769350" level="INFO">${uptime_file} = results/test22_event_logs/data/uptime_analysis_20251005_154531.txt</msg>
<var>${uptime_file}</var>
<arg>${uptime_analysis}</arg>
<doc>üíæ Save uptime analysis to file</doc>
<status status="PASS" start="2025-10-05T15:45:31.755980" elapsed="0.013396"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.769831" level="INFO">üìÑ Uptime analysis saved to: results/test22_event_logs/data/uptime_analysis_20251005_154531.txt</msg>
<arg>üìÑ Uptime analysis saved to: ${uptime_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.769559" elapsed="0.000422"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.770367" level="INFO">‚úÖ Uptime and reboot history checked</msg>
<arg>‚úÖ Uptime and reboot history checked</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.770206" elapsed="0.000285"/>
</kw>
<kw name="Log Test End" owner="logs_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.771682" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.771460" elapsed="0.000376"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.772352" level="INFO">üèÅ Completed Test: Normal - Check System Uptime and Reboot History | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.772012" elapsed="0.000502"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.772890" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.772724" elapsed="0.000273"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:45:31.770871" elapsed="0.002219"/>
</kw>
<doc>‚è±Ô∏è Check system uptime and analyze reboot history</doc>
<tag>normal</tag>
<tag>reboot</tag>
<tag>stability</tag>
<tag>uptime</tag>
<status status="PASS" start="2025-10-05T15:45:28.374894" elapsed="3.398241"/>
</test>
<test id="s1-s5-t19" name="Normal - Comprehensive Log Health Summary" line="299">
<kw name="Log Test Start" owner="logs_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.774777" level="INFO">
================================================================================</msg>
<arg>\n================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.774631" elapsed="0.000252"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.775180" level="INFO">üèÅ Starting Test: Normal - Comprehensive Log Health Summary</msg>
<arg>üèÅ Starting Test: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.775007" elapsed="0.000263"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.775512" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.775391" elapsed="0.000218"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:45:31.774243" elapsed="0.001474"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.775973" level="INFO">üîç Generating comprehensive log health summary...</msg>
<arg>üîç Generating comprehensive log health summary...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.775864" elapsed="0.000196"/>
</kw>
<kw name="Validate All Log Health Metrics" owner="logs_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.776643" level="INFO">üìä Validating all log health metrics...</msg>
<arg>üìä Validating all log health metrics...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.776473" elapsed="0.000305"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.777898" level="INFO">‚úÖ All log health data collected and validated</msg>
<arg>‚úÖ All log health data collected and validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.777752" elapsed="0.000253"/>
</kw>
<doc>üìä Validate all log health metrics</doc>
<status status="PASS" start="2025-10-05T15:45:31.776253" elapsed="0.001824"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.778312" level="INFO">üìä Comprehensive log health summary:</msg>
<arg>üìä Comprehensive log health summary:</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.778196" elapsed="0.000206"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.778625" level="INFO">üìä - Journal Logs: Collected ‚úÖ</msg>
<arg>üìä - Journal Logs: Collected ‚úÖ</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.778509" elapsed="0.000193"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.778914" level="INFO">üìä - Boot Messages: Collected ‚úÖ</msg>
<arg>üìä - Boot Messages: Collected ‚úÖ</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.778800" elapsed="0.000187"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.779189" level="INFO">üìä - System Logs: Collected ‚úÖ</msg>
<arg>üìä - System Logs: Collected ‚úÖ</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.779081" elapsed="0.000198"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.779478" level="INFO">üìä - Critical Errors: Validated ‚úÖ</msg>
<arg>üìä - Critical Errors: Validated ‚úÖ</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.779384" elapsed="0.000168"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.780029" level="INFO">üìä - Boot Sequence: Validated ‚úÖ</msg>
<arg>üìä - Boot Sequence: Validated ‚úÖ</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.779645" elapsed="0.000476"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.780373" level="INFO">üìä - Service Startup: Validated ‚úÖ</msg>
<arg>üìä - Service Startup: Validated ‚úÖ</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.780241" elapsed="0.000216"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.780954" level="INFO">üìä - Log Rotation: Validated ‚úÖ</msg>
<arg>üìä - Log Rotation: Validated ‚úÖ</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.780788" elapsed="0.000253"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.781268" level="INFO">üìä - Error Patterns: Analyzed ‚úÖ</msg>
<arg>üìä - Error Patterns: Analyzed ‚úÖ</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.781171" elapsed="0.000181"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.781598" level="INFO">‚úÖ Comprehensive log health validation: COMPLETED</msg>
<arg>‚úÖ Comprehensive log health validation: COMPLETED</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.781503" elapsed="0.000173"/>
</kw>
<kw name="Log Test End" owner="logs_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.782360" level="INFO">================================================================================</msg>
<arg>================================================================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.782250" elapsed="0.000201"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.782767" level="INFO">üèÅ Completed Test: Normal - Comprehensive Log Health Summary | Status: PASS</msg>
<arg>üèÅ Completed Test: ${test_name} | Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.782584" elapsed="0.000269"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.783090" level="INFO">================================================================================
</msg>
<arg>================================================================================\n</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.782951" elapsed="0.000216"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case with status</doc>
<status status="PASS" start="2025-10-05T15:45:31.781913" elapsed="0.001311"/>
</kw>
<doc>üìä Generate comprehensive summary of log health analysis</doc>
<tag>compliance</tag>
<tag>comprehensive</tag>
<tag>normal</tag>
<tag>summary</tag>
<status status="PASS" start="2025-10-05T15:45:31.773459" elapsed="0.009801"/>
</test>
<kw name="Close All SSH Connections" owner="logs_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.784310" level="INFO">üîå Closing SSH connections...</msg>
<arg>üîå Closing SSH connections...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.784197" elapsed="0.000202"/>
</kw>
<kw name="Close All Connections" owner="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" start="2025-10-05T15:45:31.784556" elapsed="0.000512"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:31.785352" level="INFO">‚úÖ SSH connections closed</msg>
<arg>‚úÖ SSH connections closed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:31.785240" elapsed="0.000198"/>
</kw>
<doc>üîå Close all SSH connections</doc>
<status status="PASS" start="2025-10-05T15:45:31.783924" elapsed="0.001573"/>
</kw>
<doc>üìã Event Logs &amp; Critical Error Validation Test Suite - Test-22
üîç Process: Find hostname in EDS ‚Üí SSH to server ‚Üí Collect system logs ‚Üí Validate no critical errors
‚úÖ Validates: No critical errors in logs, clean boot sequence, successful service starts, proper log rotation
üìä Documents: journalctl output, dmesg, /var/log files, error patterns, boot messages, service status
‚ö†Ô∏è Focus: System health validation through comprehensive log analysis</doc>
<status status="FAIL" start="2025-10-05T15:44:58.553154" elapsed="33.232374"/>
</suite>
<suite id="s1-s6" name="Network Validation" source="/mnt/c/Users/sacpa/Projects/robot/robotframework/tests/test3_network_validation/network_validation.robot">
<kw name="Initialize Test Environment And Lookup Configuration" owner="network_keywords" type="SETUP">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:45:53.490376" level="INFO">${start_time} = 2025-10-05 15:45:53</msg>
<var>${start_time}</var>
<arg>result_format=%Y-%m-%d %H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:45:53.490035" elapsed="0.000392"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:53.491782" level="INFO">${TEST_START_TIME} = 2025-10-05 15:45:53</msg>
<arg>${TEST_START_TIME}</arg>
<arg>${start_time}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:45:53.490635" elapsed="0.001203"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set Variable" owner="BuiltIn">
<arg>${TEST_SUITE_ID}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:45:53.492867" elapsed="0.000166"/>
</kw>
<msg time="2025-10-05T15:45:53.493149" level="INFO">${suite_id} = test3</msg>
<var>${suite_id}</var>
<arg>'${TEST_SUITE_ID}' == '${EMPTY}'</arg>
<arg>Auto Detect Test Suite ID</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${TEST_SUITE_ID}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-05T15:45:53.491985" elapsed="0.001204"/>
</kw>
<kw name="Auto Detect Test Suite Name" owner="network_keywords">
<kw name="Get Variable Value" owner="BuiltIn">
<msg time="2025-10-05T15:45:53.494101" level="INFO">${suite_source} = /mnt/c/Users/sacpa/Projects/robot/robotframework/tests/test3_network_validation/network_validation.robot</msg>
<var>${suite_source}</var>
<arg>${SUITE_SOURCE}</arg>
<arg>${EMPTY}</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<status status="PASS" start="2025-10-05T15:45:53.493860" elapsed="0.000278"/>
</kw>
<kw name="Split String" owner="String">
<msg time="2025-10-05T15:45:53.494557" level="INFO">${path_parts} = ['', 'mnt', 'c', 'Users', 'sacpa', 'Projects', 'robot', 'robotframework', 'tests', 'test3_network_validation', 'network_validation.robot']</msg>
<var>${path_parts}</var>
<arg>${suite_source}</arg>
<arg>${/}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="PASS" start="2025-10-05T15:45:53.494318" elapsed="0.000271"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Match Regexp" owner="BuiltIn">
<msg time="2025-10-05T15:45:53.495520" level="FAIL">'' does not match '^test\d+_'</msg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="FAIL" start="2025-10-05T15:45:53.495172" elapsed="0.000541">'' does not match '^test\d+_'</status>
</kw>
<msg time="2025-10-05T15:45:53.495907" level="INFO">${is_test_dir} = False</msg>
<var>${is_test_dir}</var>
<arg>Should Match Regexp</arg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-10-05T15:45:53.495005" elapsed="0.000938"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${is_test_dir}</arg>
<arg>Return From Keyword</arg>
<arg>${part}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-05T15:45:53.496168" elapsed="0.000150"/>
</kw>
<var name="${part}"/>
<status status="PASS" start="2025-10-05T15:45:53.494882" elapsed="0.001485"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Match Regexp" owner="BuiltIn">
<msg time="2025-10-05T15:45:53.497360" level="FAIL">'mnt' does not match '^test\d+_'</msg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="FAIL" start="2025-10-05T15:45:53.497135" elapsed="0.000320">'mnt' does not match '^test\d+_'</status>
</kw>
<msg time="2025-10-05T15:45:53.497585" level="INFO">${is_test_dir} = False</msg>
<var>${is_test_dir}</var>
<arg>Should Match Regexp</arg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-10-05T15:45:53.496639" elapsed="0.000974"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${is_test_dir}</arg>
<arg>Return From Keyword</arg>
<arg>${part}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-05T15:45:53.497753" elapsed="0.000162"/>
</kw>
<var name="${part}">mnt</var>
<status status="PASS" start="2025-10-05T15:45:53.496493" elapsed="0.001471"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Match Regexp" owner="BuiltIn">
<msg time="2025-10-05T15:45:53.498568" level="FAIL">'c' does not match '^test\d+_'</msg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="FAIL" start="2025-10-05T15:45:53.498355" elapsed="0.000284">'c' does not match '^test\d+_'</status>
</kw>
<msg time="2025-10-05T15:45:53.498744" level="INFO">${is_test_dir} = False</msg>
<var>${is_test_dir}</var>
<arg>Should Match Regexp</arg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-10-05T15:45:53.498205" elapsed="0.000565"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${is_test_dir}</arg>
<arg>Return From Keyword</arg>
<arg>${part}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-05T15:45:53.498904" elapsed="0.000124"/>
</kw>
<var name="${part}">c</var>
<status status="PASS" start="2025-10-05T15:45:53.498077" elapsed="0.000993"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Match Regexp" owner="BuiltIn">
<msg time="2025-10-05T15:45:53.499651" level="FAIL">'Users' does not match '^test\d+_'</msg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="FAIL" start="2025-10-05T15:45:53.499455" elapsed="0.000300">'Users' does not match '^test\d+_'</status>
</kw>
<msg time="2025-10-05T15:45:53.499873" level="INFO">${is_test_dir} = False</msg>
<var>${is_test_dir}</var>
<arg>Should Match Regexp</arg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-10-05T15:45:53.499300" elapsed="0.000601"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${is_test_dir}</arg>
<arg>Return From Keyword</arg>
<arg>${part}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-05T15:45:53.500041" elapsed="0.000125"/>
</kw>
<var name="${part}">Users</var>
<status status="PASS" start="2025-10-05T15:45:53.499175" elapsed="0.001042"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Match Regexp" owner="BuiltIn">
<msg time="2025-10-05T15:45:53.500840" level="FAIL">'sacpa' does not match '^test\d+_'</msg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="FAIL" start="2025-10-05T15:45:53.500637" elapsed="0.000273">'sacpa' does not match '^test\d+_'</status>
</kw>
<msg time="2025-10-05T15:45:53.501985" level="INFO">${is_test_dir} = False</msg>
<var>${is_test_dir}</var>
<arg>Should Match Regexp</arg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-10-05T15:45:53.500445" elapsed="0.001586"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${is_test_dir}</arg>
<arg>Return From Keyword</arg>
<arg>${part}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-05T15:45:53.502206" elapsed="0.000152"/>
</kw>
<var name="${part}">sacpa</var>
<status status="PASS" start="2025-10-05T15:45:53.500322" elapsed="0.002083"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Match Regexp" owner="BuiltIn">
<msg time="2025-10-05T15:45:53.503010" level="FAIL">'Projects' does not match '^test\d+_'</msg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="FAIL" start="2025-10-05T15:45:53.502766" elapsed="0.000311">'Projects' does not match '^test\d+_'</status>
</kw>
<msg time="2025-10-05T15:45:53.503176" level="INFO">${is_test_dir} = False</msg>
<var>${is_test_dir}</var>
<arg>Should Match Regexp</arg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-10-05T15:45:53.502623" elapsed="0.000576"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${is_test_dir}</arg>
<arg>Return From Keyword</arg>
<arg>${part}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-05T15:45:53.503323" elapsed="0.000145"/>
</kw>
<var name="${part}">Projects</var>
<status status="PASS" start="2025-10-05T15:45:53.502521" elapsed="0.000987"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Match Regexp" owner="BuiltIn">
<msg time="2025-10-05T15:45:53.504096" level="FAIL">'robot' does not match '^test\d+_'</msg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="FAIL" start="2025-10-05T15:45:53.503883" elapsed="0.000278">'robot' does not match '^test\d+_'</status>
</kw>
<msg time="2025-10-05T15:45:53.504269" level="INFO">${is_test_dir} = False</msg>
<var>${is_test_dir}</var>
<arg>Should Match Regexp</arg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-10-05T15:45:53.503698" elapsed="0.000595"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${is_test_dir}</arg>
<arg>Return From Keyword</arg>
<arg>${part}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-05T15:45:53.504418" elapsed="0.000109"/>
</kw>
<var name="${part}">robot</var>
<status status="PASS" start="2025-10-05T15:45:53.503603" elapsed="0.000990"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Match Regexp" owner="BuiltIn">
<msg time="2025-10-05T15:45:53.505222" level="FAIL">'robotframework' does not match '^test\d+_'</msg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="FAIL" start="2025-10-05T15:45:53.504927" elapsed="0.000366">'robotframework' does not match '^test\d+_'</status>
</kw>
<msg time="2025-10-05T15:45:53.505406" level="INFO">${is_test_dir} = False</msg>
<var>${is_test_dir}</var>
<arg>Should Match Regexp</arg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-10-05T15:45:53.504795" elapsed="0.000635"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${is_test_dir}</arg>
<arg>Return From Keyword</arg>
<arg>${part}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-05T15:45:53.505572" elapsed="0.000316"/>
</kw>
<var name="${part}">robotframework</var>
<status status="PASS" start="2025-10-05T15:45:53.504699" elapsed="0.001234"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Match Regexp" owner="BuiltIn">
<msg time="2025-10-05T15:45:53.506472" level="FAIL">'tests' does not match '^test\d+_'</msg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="FAIL" start="2025-10-05T15:45:53.506286" elapsed="0.000249">'tests' does not match '^test\d+_'</status>
</kw>
<msg time="2025-10-05T15:45:53.506631" level="INFO">${is_test_dir} = False</msg>
<var>${is_test_dir}</var>
<arg>Should Match Regexp</arg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-10-05T15:45:53.506142" elapsed="0.000512"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${is_test_dir}</arg>
<arg>Return From Keyword</arg>
<arg>${part}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-05T15:45:53.506775" elapsed="0.000109"/>
</kw>
<var name="${part}">tests</var>
<status status="PASS" start="2025-10-05T15:45:53.506035" elapsed="0.000885"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-05T15:45:53.507285" elapsed="0.000192"/>
</kw>
<msg time="2025-10-05T15:45:53.507589" level="INFO">${is_test_dir} = True</msg>
<var>${is_test_dir}</var>
<arg>Should Match Regexp</arg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-10-05T15:45:53.507149" elapsed="0.000465"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Return From Keyword" owner="BuiltIn">
<msg time="2025-10-05T15:45:53.508022" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>${part}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<status status="PASS" start="2025-10-05T15:45:53.507935" elapsed="0.000170"/>
</kw>
<arg>${is_test_dir}</arg>
<arg>Return From Keyword</arg>
<arg>${part}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-05T15:45:53.507746" elapsed="0.000415"/>
</kw>
<var name="${part}">test3_network_validation</var>
<status status="PASS" start="2025-10-05T15:45:53.507050" elapsed="0.001173"/>
</iter>
<var>${part}</var>
<value>@{path_parts}</value>
<status status="PASS" start="2025-10-05T15:45:53.494675" elapsed="0.013610"/>
</for>
<kw name="Log" owner="BuiltIn">
<arg>‚ö†Ô∏è Could not auto-detect test suite name, defaulting to test3_network_validation</arg>
<arg>WARN</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:45:53.508441" elapsed="0.000027"/>
</kw>
<return>
<value>test3_network_validation</value>
<status status="NOT RUN" start="2025-10-05T15:45:53.508548" elapsed="0.000057"/>
</return>
<msg time="2025-10-05T15:45:53.508842" level="INFO">${suite_name} = test3_network_validation</msg>
<var>${suite_name}</var>
<doc>Auto-detect full test suite name from current working directory or test file path</doc>
<status status="PASS" start="2025-10-05T15:45:53.493553" elapsed="0.015331"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:53.509333" level="INFO">${TEST_SUITE_ID} = test3</msg>
<arg>${TEST_SUITE_ID}</arg>
<arg>${suite_id}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:45:53.509045" elapsed="0.000342"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:53.510722" level="INFO">${TEST_SUITE_NAME} = Hostname Validation Test Suite - test3</msg>
<arg>${TEST_SUITE_NAME}</arg>
<arg>Hostname Validation Test Suite - ${suite_id}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:45:53.510417" elapsed="0.000370"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:53.511266" level="INFO">${TEST_REPORTS_DIR} = /mnt/c/Users/sacpa/Projects/robot/robotframework/results/test3_network_validation</msg>
<arg>${TEST_REPORTS_DIR}</arg>
<arg>${REPORTS_DIR}/${suite_name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:45:53.510952" elapsed="0.000371"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:53.511774" level="INFO">${DATA_DIR} = /mnt/c/Users/sacpa/Projects/robot/robotframework/results/test3_network_validation/data</msg>
<arg>${DATA_DIR}</arg>
<arg>${TEST_REPORTS_DIR}/data</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:45:53.511494" elapsed="0.000352"/>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2025-10-05T15:45:53.512800" level="INFO" html="true">Directory '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results&lt;/a&gt;' already exists.</msg>
<arg>${REPORTS_DIR}</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2025-10-05T15:45:53.511990" elapsed="0.000948"/>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2025-10-05T15:45:53.513944" level="INFO" html="true">Directory '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test3_network_validation"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test3_network_validation&lt;/a&gt;' already exists.</msg>
<arg>${TEST_REPORTS_DIR}</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2025-10-05T15:45:53.513123" elapsed="0.000932"/>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2025-10-05T15:45:53.516779" level="INFO" html="true">Directory '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test3_network_validation/data"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test3_network_validation/data&lt;/a&gt;' already exists.</msg>
<arg>${DATA_DIR}</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2025-10-05T15:45:53.514238" elapsed="0.002660"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\nüîç Looking up configuration for hostname: ${TARGET_HOSTNAME}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-05T15:45:53.517083" elapsed="0.000331"/>
</kw>
<kw name="Lookup Server Config" owner="EDSLookup">
<msg time="2025-10-05T15:45:53.575139" level="INFO">Found matching row for hostname 'alhxvdvitap01'</msg>
<msg time="2025-10-05T15:45:53.575559" level="INFO">Extracted IP from EDS: 172.30.16.186</msg>
<msg time="2025-10-05T15:45:53.575653" level="INFO">Extracted subnet from EDS: 10.26.216.0/24</msg>
<msg time="2025-10-05T15:45:53.575701" level="INFO">Extracted mask from EDS: 255.255.255.0</msg>
<msg time="2025-10-05T15:45:53.575740" level="INFO">Extracted gateway from EDS: 10.26.216.4</msg>
<msg time="2025-10-05T15:45:53.575779" level="INFO">Extracted CNAME from EDS: alhxvdvitap01</msg>
<msg time="2025-10-05T15:45:53.575820" level="INFO">Extracted domain from EDS: gnscet.com</msg>
<msg time="2025-10-05T15:45:53.575866" level="INFO">Extracted CPU cores from EDS: 8</msg>
<msg time="2025-10-05T15:45:53.575909" level="INFO">Extracted RAM from EDS: 16</msg>
<msg time="2025-10-05T15:45:53.575950" level="INFO">Extracted storage type from EDS: VSAN</msg>
<msg time="2025-10-05T15:45:53.576015" level="INFO">Extracted storage total TB from EDS: 0.465</msg>
<msg time="2025-10-05T15:45:53.576059" level="INFO">Extracted drive/volume group from EDS: rootvg:</msg>
<msg time="2025-10-05T15:45:53.576107" level="INFO">Extracted file system from EDS: /dev/mapper/rootvg-rootlv</msg>
<msg time="2025-10-05T15:45:53.576152" level="INFO">Extracted logical volume/partition from EDS: /</msg>
<msg time="2025-10-05T15:45:53.576204" level="INFO">Extracted storage allocation GB from EDS: 20</msg>
<msg time="2025-10-05T15:45:53.576251" level="INFO">Extracted recommended storage allocation GB from EDS: 20</msg>
<msg time="2025-10-05T15:45:53.576343" level="INFO">Extracted drive purpose from EDS: OS</msg>
<msg time="2025-10-05T15:45:53.576398" level="INFO">Extracted OS type from EDS: RHEL 9.6</msg>
<msg time="2025-10-05T15:45:53.576441" level="INFO">EDS configuration for alhxvdvitap01: {'ip': '172.30.16.186', 'subnet': '10.26.216.0/24', 'mask': '255.255.255.0', 'gateway': '10.26.216.4', 'cname': 'alhxvdvitap01', 'domain': 'gnscet.com', 'cpu_cores': '8', 'ram': '16', 'storage_type': 'VSAN', 'storage_total_tb': '0.465', 'drive_volume_group': 'rootvg:', 'file_system': '/dev/mapper/rootvg-rootlv', 'logical_volume_partition': '/', 'storage_allocation_gb': '20', 'recommended_storage_gb': '20', 'drive_purpose': 'OS', 'os_type': 'RHEL 9.6'}</msg>
<msg time="2025-10-05T15:45:53.576696" level="INFO">${config} = {'ip': '172.30.16.186', 'subnet': '10.26.216.0/24', 'mask': '255.255.255.0', 'gateway': '10.26.216.4', 'cname': 'alhxvdvitap01', 'domain': 'gnscet.com', 'cpu_cores': '8', 'ram': '16', 'storage_type': ...</msg>
<var>${config}</var>
<arg>${TARGET_HOSTNAME}</arg>
<doc>Lookup server configuration from EDS sheet based on hostname</doc>
<status status="PASS" start="2025-10-05T15:45:53.517581" elapsed="0.059167"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:53.577499" level="INFO">${TARGET_IP} = 172.30.16.186</msg>
<arg>${TARGET_IP}</arg>
<arg>${config}[ip]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:45:53.577064" elapsed="0.000517"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:53.578192" level="INFO">${TARGET_SUBNET} = 10.26.216.0/24</msg>
<arg>${TARGET_SUBNET}</arg>
<arg>${config}[subnet]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:45:53.577835" elapsed="0.000424"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:53.578737" level="INFO">${TARGET_MASK} = 255.255.255.0</msg>
<arg>${TARGET_MASK}</arg>
<arg>${config}[mask]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:45:53.578461" elapsed="0.000338"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:53.579233" level="INFO">${TARGET_GATEWAY} = 10.26.216.4</msg>
<arg>${TARGET_GATEWAY}</arg>
<arg>${config}[gateway]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:45:53.578977" elapsed="0.000308"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:53.579678" level="INFO">${TARGET_CNAME} = alhxvdvitap01</msg>
<arg>${TARGET_CNAME}</arg>
<arg>${config}[cname]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:45:53.579447" elapsed="0.000281"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:53.580142" level="INFO">${TARGET_DOMAIN} = gnscet.com</msg>
<arg>${TARGET_DOMAIN}</arg>
<arg>${config}[domain]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:45:53.579901" elapsed="0.000302"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\nüìã EDS Configuration for ${TARGET_HOSTNAME}:</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-05T15:45:53.580846" elapsed="0.001060"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>üìç IP: ${TARGET_IP}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-05T15:45:53.582067" elapsed="0.000203"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>üìç Subnet: ${TARGET_SUBNET}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-05T15:45:53.582411" elapsed="0.000224"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>üìç Gateway: ${TARGET_GATEWAY}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-05T15:45:53.582806" elapsed="0.000924"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>üìç CNAME: ${TARGET_CNAME}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-05T15:45:53.583910" elapsed="0.000326"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>üìç Domain: ${TARGET_DOMAIN}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-05T15:45:53.584439" elapsed="0.000221"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\nüöÄ ===================================================</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-05T15:45:53.584806" elapsed="0.000510"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>üåê NETWORK VALIDATION: EDS vs SERVER COMPARISON</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-05T15:45:53.585463" elapsed="0.000158"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>‚ö° Test Suite: ${suite_id} (${TEST_SUITE_NAME})</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-05T15:45:53.585737" elapsed="0.000281"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-05T15:45:53.586346" elapsed="0.000187"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>üìÖ Start Time: ${start_time}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-05T15:45:53.586651" elapsed="0.000189"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>üéØ Target Hostname: ${TARGET_HOSTNAME}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-05T15:45:53.586958" elapsed="0.000220"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>üåê SSH Target IP: ${TARGET_IP}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-05T15:45:53.587538" elapsed="0.000264"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>üìä Suite Reports: ${TEST_REPORTS_DIR}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-05T15:45:53.587965" elapsed="0.000192"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>üìä Overall Reports: ${REPORTS_DIR}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-05T15:45:53.588268" elapsed="0.000198"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>===================================================</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-05T15:45:53.588592" elapsed="0.000155"/>
</kw>
<doc>üöÄ Load EDS configuration and prepare for server validation</doc>
<status status="PASS" start="2025-10-05T15:45:53.489139" elapsed="0.099716"/>
</kw>
<test id="s1-s6-t1" name="Critical - Hostname Validation" line="18">
<kw name="Log Test Start" owner="network_keywords" type="SETUP">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:45:53.590006" level="INFO">${timestamp} = 2025-10-05 15:45:53</msg>
<var>${timestamp}</var>
<arg>result_format=%Y-%m-%d %H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:45:53.589819" elapsed="0.000212"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:53.590479" level="INFO">üöÄ Starting: Critical - Hostname Validation at 2025-10-05 15:45:53</msg>
<arg>üöÄ Starting: ${test_name} at ${timestamp}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:53.590167" elapsed="0.000433"/>
</kw>
<arg>${TEST_NAME}</arg>
<status status="PASS" start="2025-10-05T15:45:53.589518" elapsed="0.001189"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:53.590942" level="INFO">üîç Validating hostname: EDS vs Server...</msg>
<arg>üîç Validating hostname: EDS vs Server...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:53.590822" elapsed="0.000212"/>
</kw>
<kw name="Get Hostname From Server" owner="network_keywords">
<kw name="Establish SSH Session" owner="network_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:53.591929" level="INFO">üîå Connecting to alhxvdvitap01 via SSH (172.30.16.186)...</msg>
<arg>üîå Connecting to ${TARGET_HOSTNAME} via SSH (${TARGET_IP})...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:53.591736" elapsed="0.000289"/>
</kw>
<kw name="Close All Connections" owner="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" start="2025-10-05T15:45:53.592159" elapsed="0.000118"/>
</kw>
<kw name="Open Connection" owner="SSHLibrary">
<arg>${TARGET_IP}</arg>
<arg>port=22</arg>
<arg>timeout=30</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" start="2025-10-05T15:45:53.592363" elapsed="0.000372"/>
</kw>
<kw name="Login" owner="SSHLibrary">
<msg time="2025-10-05T15:45:53.593069" level="INFO">Logging into '172.30.16.186:22' as 'sac'.</msg>
<msg time="2025-10-05T15:45:55.282786" level="INFO">Read output: Welcome to Ubuntu 24.04.3 LTS (GNU/Linux 6.6.87.2-microsoft-standard-WSL2 x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/pro

 System information as of Sun Oct  5 15:45:53 CDT 2025

  System load:  1.09                Processes:             36
  Usage of /:   0.7% of 1006.85GB   Users logged in:       1
  Memory usage: 7%                  IPv4 address for eth0: 172.30.16.186
  Swap usage:   0%

 * Strictly confined Kubernetes makes edge and IoT secure. Learn how MicroK8s
   just raised the bar for easy, resilient and secure K8s cluster deployment.

   https://ubuntu.com/engage/secure-kubernetes-at-the-edge
Last login: Sun Oct  5 15:45:10 2025 from 172.30.16.186
[?2004hsac@alhxvdvitap01:~$</msg>
<arg>${SSH_USERNAME}</arg>
<arg>${SSH_PASSWORD}</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<status status="PASS" start="2025-10-05T15:45:53.592863" elapsed="1.690224"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:55.283926" level="INFO">Executing command 'echo "SSH connection successful"'.</msg>
<msg time="2025-10-05T15:45:55.298347" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:55.298825" level="INFO">${test_output} = SSH connection successful</msg>
<var>${test_output}</var>
<arg>echo "SSH connection successful"</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:55.283583" elapsed="0.015302"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${test_output}</arg>
<arg>SSH connection successful</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-10-05T15:45:55.299228" elapsed="0.000430"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:55.302052" level="INFO">${SSH_CONNECTION_ACTIVE} = True</msg>
<arg>${SSH_CONNECTION_ACTIVE}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:45:55.301500" elapsed="0.000643"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:55.302778" level="INFO">‚úÖ SSH session established to 172.30.16.186</msg>
<arg>‚úÖ SSH session established to ${TARGET_IP}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:55.302371" elapsed="0.000668"/>
</kw>
<doc>SSH to server using IP from EDS lookup</doc>
<status status="PASS" start="2025-10-05T15:45:53.591490" elapsed="1.711747"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:55.303664" level="INFO">Executing command 'hostname'.</msg>
<msg time="2025-10-05T15:45:55.361053" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:55.361426" level="INFO">${hostname} = alhxvdvitap01</msg>
<var>${hostname}</var>
<arg>hostname</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:55.303473" elapsed="0.058019"/>
</kw>
<kw name="Strip String" owner="String">
<msg time="2025-10-05T15:45:55.362441" level="INFO">${hostname} = alhxvdvitap01</msg>
<var>${hostname}</var>
<arg>${hostname}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<status status="PASS" start="2025-10-05T15:45:55.361925" elapsed="0.000585"/>
</kw>
<return>
<value>${hostname}</value>
<status status="PASS" start="2025-10-05T15:45:55.362652" elapsed="0.000132"/>
</return>
<msg time="2025-10-05T15:45:55.363135" level="INFO">${actual_hostname} = alhxvdvitap01</msg>
<var>${actual_hostname}</var>
<doc>SSH to server and get actual hostname</doc>
<status status="PASS" start="2025-10-05T15:45:53.591248" elapsed="1.771947"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:55.363979" level="INFO">${expected_hostname} = alhxvdvitap01</msg>
<var>${expected_hostname}</var>
<arg>${TARGET_HOSTNAME}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:45:55.363531" elapsed="0.000578"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:55.365232" level="INFO">üìã EDS Expected: alhxvdvitap01</msg>
<arg>üìã EDS Expected: ${expected_hostname}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:55.364663" elapsed="0.000873"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:55.366420" level="INFO">üñ•Ô∏è Server Actual: alhxvdvitap01</msg>
<arg>üñ•Ô∏è Server Actual: ${actual_hostname}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:55.365923" elapsed="0.000843"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_hostname}</arg>
<arg>${expected_hostname}</arg>
<arg>‚ùå HOSTNAME MISMATCH: EDS expects '${expected_hostname}' but server shows '${actual_hostname}'</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-05T15:45:55.367030" elapsed="0.000519"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:55.368016" level="INFO">‚úÖ Hostname validation: PASSED - EDS matches Server</msg>
<arg>‚úÖ Hostname validation: PASSED - EDS matches Server</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:55.367755" elapsed="0.000423"/>
</kw>
<kw name="Log Test End" owner="network_keywords" type="TEARDOWN">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:45:55.369721" level="INFO">${timestamp} = 2025-10-05 15:45:55</msg>
<var>${timestamp}</var>
<arg>result_format=%Y-%m-%d %H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:45:55.369345" elapsed="0.000465"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:55.370355" level="INFO">‚úÖ Completed: Critical - Hostname Validation (PASS) at 2025-10-05 15:45:55</msg>
<arg>‚úÖ Completed: ${test_name} (${test_status}) at ${timestamp}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:55.370009" elapsed="0.000507"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<status status="PASS" start="2025-10-05T15:45:55.368724" elapsed="0.001846"/>
</kw>
<doc>üîß SSH to server and compare hostname with EDS expectation</doc>
<tag>compliance</tag>
<tag>critical</tag>
<tag>hostname</tag>
<status status="PASS" start="2025-10-05T15:45:53.588945" elapsed="1.781660"/>
</test>
<test id="s1-s6-t2" name="Critical - IP Address Validation" line="37">
<kw name="Log Test Start" owner="network_keywords" type="SETUP">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:45:55.372070" level="INFO">${timestamp} = 2025-10-05 15:45:55</msg>
<var>${timestamp}</var>
<arg>result_format=%Y-%m-%d %H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:45:55.371599" elapsed="0.000522"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:55.372865" level="INFO">üöÄ Starting: Critical - IP Address Validation at 2025-10-05 15:45:55</msg>
<arg>üöÄ Starting: ${test_name} at ${timestamp}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:55.372424" elapsed="0.000605"/>
</kw>
<arg>${TEST_NAME}</arg>
<status status="PASS" start="2025-10-05T15:45:55.371323" elapsed="0.001820"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:55.373734" level="INFO">üîç Validating IP address: EDS vs Server...</msg>
<arg>üîç Validating IP address: EDS vs Server...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:55.373375" elapsed="0.000599"/>
</kw>
<kw name="Get IP Address From Server" owner="network_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:55.375170" level="INFO">Executing command 'hostname -I | awk '{print $1}' || ip addr show | grep -oP '(?&lt;=inet\s)\d+\.\d+\.\d+\.\d+''.</msg>
<msg time="2025-10-05T15:45:55.424919" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:55.425377" level="INFO">${ip_output} = 172.30.16.186</msg>
<var>${ip_output}</var>
<arg>hostname -I | awk '{print $1}' || ip addr show | grep -oP '(?&lt;=inet\\s)\\d+\\.\\d+\\.\\d+\\.\\d+'</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:55.374874" elapsed="0.050566"/>
</kw>
<kw name="Strip String" owner="String">
<msg time="2025-10-05T15:45:55.426226" level="INFO">${ip} = 172.30.16.186</msg>
<var>${ip}</var>
<arg>${ip_output}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<status status="PASS" start="2025-10-05T15:45:55.425785" elapsed="0.000521"/>
</kw>
<return>
<value>${ip}</value>
<status status="PASS" start="2025-10-05T15:45:55.426417" elapsed="0.000083"/>
</return>
<msg time="2025-10-05T15:45:55.426748" level="INFO">${actual_ip} = 172.30.16.186</msg>
<var>${actual_ip}</var>
<doc>SSH to server and get actual IP address</doc>
<status status="PASS" start="2025-10-05T15:45:55.374345" elapsed="0.052446"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:55.427440" level="INFO">${expected_ip} = 172.30.16.186</msg>
<var>${expected_ip}</var>
<arg>${TARGET_IP}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:45:55.427005" elapsed="0.000495"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:55.429247" level="INFO">üìã EDS Expected: 172.30.16.186</msg>
<arg>üìã EDS Expected: ${expected_ip}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:55.428825" elapsed="0.000657"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:55.430262" level="INFO">üñ•Ô∏è Server Actual: 172.30.16.186</msg>
<arg>üñ•Ô∏è Server Actual: ${actual_ip}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:55.429828" elapsed="0.000635"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_ip}</arg>
<arg>${expected_ip}</arg>
<arg>‚ùå IP MISMATCH: EDS expects '${expected_ip}' but server shows '${actual_ip}'</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-05T15:45:55.430787" elapsed="0.000705"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:55.432080" level="INFO">‚úÖ IP address validation: PASSED - EDS matches Server</msg>
<arg>‚úÖ IP address validation: PASSED - EDS matches Server</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:55.431748" elapsed="0.000728"/>
</kw>
<kw name="Log Test End" owner="network_keywords" type="TEARDOWN">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:45:55.434415" level="INFO">${timestamp} = 2025-10-05 15:45:55</msg>
<var>${timestamp}</var>
<arg>result_format=%Y-%m-%d %H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:45:55.433998" elapsed="0.000470"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:55.435033" level="INFO">‚úÖ Completed: Critical - IP Address Validation (PASS) at 2025-10-05 15:45:55</msg>
<arg>‚úÖ Completed: ${test_name} (${test_status}) at ${timestamp}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:55.434663" elapsed="0.000788"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<status status="PASS" start="2025-10-05T15:45:55.433378" elapsed="0.002224"/>
</kw>
<doc>üåê SSH to server and compare IP configuration with EDS expectation</doc>
<tag>critical</tag>
<tag>ip</tag>
<tag>networking</tag>
<status status="PASS" start="2025-10-05T15:45:55.370871" elapsed="0.064801"/>
</test>
<test id="s1-s6-t3" name="Critical - Subnet Validation" line="56">
<kw name="Log Test Start" owner="network_keywords" type="SETUP">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:45:55.438551" level="INFO">${timestamp} = 2025-10-05 15:45:55</msg>
<var>${timestamp}</var>
<arg>result_format=%Y-%m-%d %H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:45:55.438240" elapsed="0.000353"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:55.439002" level="INFO">üöÄ Starting: Critical - Subnet Validation at 2025-10-05 15:45:55</msg>
<arg>üöÄ Starting: ${test_name} at ${timestamp}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:55.438756" elapsed="0.000382"/>
</kw>
<arg>${TEST_NAME}</arg>
<status status="PASS" start="2025-10-05T15:45:55.437837" elapsed="0.001391"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:55.439542" level="INFO">üîç Validating subnet: EDS vs Server...</msg>
<arg>üîç Validating subnet: EDS vs Server...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:55.439382" elapsed="0.000281"/>
</kw>
<kw name="Get Subnet From Server" owner="network_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:55.440489" level="INFO">Executing command 'ip route show | grep 172.30.16.186'.</msg>
<msg time="2025-10-05T15:45:55.471523" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:55.471812" level="INFO">${route_output} = 172.30.16.0/20 dev eth0 proto kernel scope link src 172.30.16.186 </msg>
<var>${route_output}</var>
<arg>ip route show | grep ${TARGET_IP}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:55.440287" elapsed="0.031565"/>
</kw>
<kw name="Get Regexp Matches" owner="String">
<msg time="2025-10-05T15:45:55.473261" level="INFO">${subnet} = ['172.30.16.0/20']</msg>
<var>${subnet}</var>
<arg>${route_output}</arg>
<arg>(\\d+\\.\\d+\\.\\d+\\.\\d+/\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" start="2025-10-05T15:45:55.472264" elapsed="0.001046"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="RETURN">
<msg time="2025-10-05T15:45:55.476497" level="FAIL">No keyword with name 'RETURN' found.</msg>
<arg>${subnet}[0]</arg>
<status status="FAIL" start="2025-10-05T15:45:55.476429" elapsed="0.000234">No keyword with name 'RETURN' found.</status>
</kw>
<arg>${subnet}</arg>
<arg>RETURN</arg>
<arg>${subnet}[0]</arg>
<arg>ELSE</arg>
<arg>RETURN</arg>
<arg>${TARGET_SUBNET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="FAIL" start="2025-10-05T15:45:55.473582" elapsed="0.003231">No keyword with name 'RETURN' found.</status>
</kw>
<var>${actual_subnet}</var>
<doc>SSH to server and get subnet configuration</doc>
<status status="FAIL" start="2025-10-05T15:45:55.439869" elapsed="0.037481">No keyword with name 'RETURN' found.</status>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${expected_subnet}</var>
<arg>${TARGET_SUBNET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-10-05T15:45:55.477539" elapsed="0.000030"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>üìã EDS Expected: ${expected_subnet}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:45:55.477681" elapsed="0.000020"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>üñ•Ô∏è Server Actual: ${actual_subnet}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:45:55.477801" elapsed="0.000019"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_subnet}</arg>
<arg>${expected_subnet}</arg>
<arg>‚ùå SUBNET MISMATCH: EDS expects '${expected_subnet}' but server shows '${actual_subnet}'</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2025-10-05T15:45:55.477975" elapsed="0.000027"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>‚úÖ Subnet validation: PASSED - EDS matches Server</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:45:55.478141" elapsed="0.000020"/>
</kw>
<kw name="Log Test End" owner="network_keywords" type="TEARDOWN">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:45:55.479147" level="INFO">${timestamp} = 2025-10-05 15:45:55</msg>
<var>${timestamp}</var>
<arg>result_format=%Y-%m-%d %H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:45:55.478841" elapsed="0.000351"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:55.479546" level="INFO">‚úÖ Completed: Critical - Subnet Validation (FAIL) at 2025-10-05 15:45:55</msg>
<arg>‚úÖ Completed: ${test_name} (${test_status}) at ${timestamp}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:55.479313" elapsed="0.000360"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<status status="PASS" start="2025-10-05T15:45:55.478454" elapsed="0.002291"/>
</kw>
<doc>üåç SSH to server and compare subnet configuration with EDS expectation</doc>
<tag>critical</tag>
<tag>networking</tag>
<tag>subnet</tag>
<status status="FAIL" start="2025-10-05T15:45:55.437001" elapsed="0.043827">No keyword with name 'RETURN' found.</status>
</test>
<test id="s1-s6-t4" name="Critical - Gateway Validation" line="75">
<kw name="Log Test Start" owner="network_keywords" type="SETUP">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:45:55.482337" level="INFO">${timestamp} = 2025-10-05 15:45:55</msg>
<var>${timestamp}</var>
<arg>result_format=%Y-%m-%d %H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:45:55.482121" elapsed="0.000278"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:55.482765" level="INFO">üöÄ Starting: Critical - Gateway Validation at 2025-10-05 15:45:55</msg>
<arg>üöÄ Starting: ${test_name} at ${timestamp}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:55.482561" elapsed="0.000316"/>
</kw>
<arg>${TEST_NAME}</arg>
<status status="PASS" start="2025-10-05T15:45:55.481820" elapsed="0.001147"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:55.483209" level="INFO">üîç Validating gateway: EDS vs Server...</msg>
<arg>üîç Validating gateway: EDS vs Server...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:55.483082" elapsed="0.000236"/>
</kw>
<kw name="Get Gateway From Server" owner="network_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:55.483835" level="INFO">Executing command 'ip route show default | awk '{print $3}''.</msg>
<msg time="2025-10-05T15:45:55.537054" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:45:55.537427" level="INFO">${gateway_output} = 172.30.16.1</msg>
<var>${gateway_output}</var>
<arg>ip route show default | awk '{print $3}'</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:55.483750" elapsed="0.053738"/>
</kw>
<kw name="Strip String" owner="String">
<msg time="2025-10-05T15:45:55.538174" level="INFO">${gateway} = 172.30.16.1</msg>
<var>${gateway}</var>
<arg>${gateway_output}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<status status="PASS" start="2025-10-05T15:45:55.537769" elapsed="0.000452"/>
</kw>
<return>
<value>${gateway}</value>
<status status="PASS" start="2025-10-05T15:45:55.538306" elapsed="0.000075"/>
</return>
<msg time="2025-10-05T15:45:55.538664" level="INFO">${actual_gateway} = 172.30.16.1</msg>
<var>${actual_gateway}</var>
<doc>SSH to server and get gateway configuration</doc>
<status status="PASS" start="2025-10-05T15:45:55.483556" elapsed="0.055151"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:45:55.539410" level="INFO">${expected_gateway} = 10.26.216.4</msg>
<var>${expected_gateway}</var>
<arg>${TARGET_GATEWAY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:45:55.538912" elapsed="0.000623"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:55.540325" level="INFO">üìã EDS Expected: 10.26.216.4</msg>
<arg>üìã EDS Expected: ${expected_gateway}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:55.539881" elapsed="0.000834"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:55.541575" level="INFO">üñ•Ô∏è Server Actual: 172.30.16.1</msg>
<arg>üñ•Ô∏è Server Actual: ${actual_gateway}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:55.541205" elapsed="0.000594"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-05T15:45:55.542885" level="FAIL">‚ùå GATEWAY MISMATCH: EDS expects '10.26.216.4' but server shows '172.30.16.1': 172.30.16.1 != 10.26.216.4</msg>
<arg>${actual_gateway}</arg>
<arg>${expected_gateway}</arg>
<arg>‚ùå GATEWAY MISMATCH: EDS expects '${expected_gateway}' but server shows '${actual_gateway}'</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2025-10-05T15:45:55.542088" elapsed="0.001398">‚ùå GATEWAY MISMATCH: EDS expects '10.26.216.4' but server shows '172.30.16.1': 172.30.16.1 != 10.26.216.4</status>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>‚úÖ Gateway validation: PASSED - EDS matches Server</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:45:55.543745" elapsed="0.000039"/>
</kw>
<kw name="Log Test End" owner="network_keywords" type="TEARDOWN">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:45:55.545835" level="INFO">${timestamp} = 2025-10-05 15:45:55</msg>
<var>${timestamp}</var>
<arg>result_format=%Y-%m-%d %H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:45:55.545410" elapsed="0.000474"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:55.546640" level="INFO">‚úÖ Completed: Critical - Gateway Validation (FAIL) at 2025-10-05 15:45:55</msg>
<arg>‚úÖ Completed: ${test_name} (${test_status}) at ${timestamp}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:55.546065" elapsed="0.000856"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<status status="PASS" start="2025-10-05T15:45:55.544258" elapsed="0.002829"/>
</kw>
<doc>üõ£Ô∏è SSH to server and compare gateway configuration with EDS expectation</doc>
<tag>critical</tag>
<tag>gateway</tag>
<tag>networking</tag>
<status status="FAIL" start="2025-10-05T15:45:55.481185" elapsed="0.065977">‚ùå GATEWAY MISMATCH: EDS expects '10.26.216.4' but server shows '172.30.16.1': 172.30.16.1 != 10.26.216.4</status>
</test>
<test id="s1-s6-t5" name="Critical - DNS Name Validation" line="94">
<kw name="Log Test Start" owner="network_keywords" type="SETUP">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:45:55.551034" level="INFO">${timestamp} = 2025-10-05 15:45:55</msg>
<var>${timestamp}</var>
<arg>result_format=%Y-%m-%d %H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:45:55.550784" elapsed="0.000290"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:55.551567" level="INFO">üöÄ Starting: Critical - DNS Name Validation at 2025-10-05 15:45:55</msg>
<arg>üöÄ Starting: ${test_name} at ${timestamp}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:55.551251" elapsed="0.000459"/>
</kw>
<arg>${TEST_NAME}</arg>
<status status="PASS" start="2025-10-05T15:45:55.550377" elapsed="0.001447"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:45:55.552126" level="INFO">üîç Validating DNS configuration: EDS vs Server...</msg>
<arg>üîç Validating DNS configuration: EDS vs Server...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:45:55.551970" elapsed="0.000411"/>
</kw>
<kw name="Get FQDN From Server" owner="network_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:45:55.553714" level="INFO">Executing command 'hostname -f 2&gt;/dev/null || hostname'.</msg>
<msg time="2025-10-05T15:46:08.471427" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:46:08.471879" level="INFO">${fqdn_output} = alhxvdvitap01</msg>
<var>${fqdn_output}</var>
<arg>hostname -f 2&gt;/dev/null || hostname</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:45:55.553181" elapsed="12.920113"/>
</kw>
<kw name="Strip String" owner="String">
<msg time="2025-10-05T15:46:08.474411" level="INFO">${fqdn} = alhxvdvitap01</msg>
<var>${fqdn}</var>
<arg>${fqdn_output}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<status status="PASS" start="2025-10-05T15:46:08.473934" elapsed="0.000538"/>
</kw>
<return>
<value>${fqdn}</value>
<status status="PASS" start="2025-10-05T15:46:08.474639" elapsed="0.000122"/>
</return>
<msg time="2025-10-05T15:46:08.475074" level="INFO">${actual_fqdn} = alhxvdvitap01</msg>
<var>${actual_fqdn}</var>
<doc>SSH to server and get FQDN</doc>
<status status="PASS" start="2025-10-05T15:45:55.552829" elapsed="12.922297"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:46:08.475858" level="INFO">${expected_cname} = alhxvdvitap01</msg>
<var>${expected_cname}</var>
<arg>${TARGET_CNAME}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:46:08.475438" elapsed="0.000487"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:46:08.476928" level="INFO">${expected_domain} = gnscet.com</msg>
<var>${expected_domain}</var>
<arg>${TARGET_DOMAIN}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:46:08.476215" elapsed="0.000803"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:46:08.477877" level="INFO">${expected_fqdn} = alhxvdvitap01.gnscet.com</msg>
<var>${expected_fqdn}</var>
<arg>${expected_cname}.${expected_domain}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:46:08.477274" elapsed="0.000675"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:46:08.478796" level="INFO">üìã EDS Expected CNAME: alhxvdvitap01</msg>
<arg>üìã EDS Expected CNAME: ${expected_cname}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:46:08.478306" elapsed="0.000759"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:46:08.480082" level="INFO">üìã EDS Expected Domain: gnscet.com</msg>
<arg>üìã EDS Expected Domain: ${expected_domain}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:46:08.479528" elapsed="0.000824"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:46:08.481177" level="INFO">üìã EDS Expected FQDN: alhxvdvitap01.gnscet.com</msg>
<arg>üìã EDS Expected FQDN: ${expected_fqdn}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:46:08.480793" elapsed="0.000654"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:46:08.482173" level="INFO">üñ•Ô∏è Server Actual FQDN: alhxvdvitap01</msg>
<arg>üñ•Ô∏è Server Actual FQDN: ${actual_fqdn}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:46:08.481756" elapsed="0.000717"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${TARGET_HOSTNAME}</arg>
<arg>${expected_cname}</arg>
<arg>‚ùå CNAME MISMATCH: EDS CNAME '${expected_cname}' doesn't match hostname '${TARGET_HOSTNAME}'</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-05T15:46:08.482766" elapsed="0.000729"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:46:08.484033" level="INFO">‚úÖ DNS validation: PASSED - EDS configuration validated</msg>
<arg>‚úÖ DNS validation: PASSED - EDS configuration validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:46:08.483770" elapsed="0.001061"/>
</kw>
<kw name="Log Test End" owner="network_keywords" type="TEARDOWN">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:46:08.486842" level="INFO">${timestamp} = 2025-10-05 15:46:08</msg>
<var>${timestamp}</var>
<arg>result_format=%Y-%m-%d %H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:46:08.486351" elapsed="0.000558"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:46:08.487958" level="INFO">‚úÖ Completed: Critical - DNS Name Validation (PASS) at 2025-10-05 15:46:08</msg>
<arg>‚úÖ Completed: ${test_name} (${test_status}) at ${timestamp}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:46:08.487168" elapsed="0.001004"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<status status="PASS" start="2025-10-05T15:46:08.485507" elapsed="0.003193"/>
</kw>
<doc>üåê SSH to server and compare DNS configuration with EDS expectation</doc>
<tag>critical</tag>
<tag>dns</tag>
<tag>hostname</tag>
<status status="PASS" start="2025-10-05T15:45:55.547637" elapsed="12.941172"/>
</test>
<test id="s1-s6-t6" name="Normal - NTP Configuration Validation" line="117">
<kw name="Log Test Start" owner="network_keywords" type="SETUP">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:46:08.492248" level="INFO">${timestamp} = 2025-10-05 15:46:08</msg>
<var>${timestamp}</var>
<arg>result_format=%Y-%m-%d %H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:46:08.491442" elapsed="0.000931"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:46:08.493124" level="INFO">üöÄ Starting: Normal - NTP Configuration Validation at 2025-10-05 15:46:08</msg>
<arg>üöÄ Starting: ${test_name} at ${timestamp}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:46:08.492705" elapsed="0.000626"/>
</kw>
<arg>${TEST_NAME}</arg>
<status status="PASS" start="2025-10-05T15:46:08.490713" elapsed="0.002800"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:46:08.494084" level="INFO">üîç Validating NTP service on server...</msg>
<arg>üîç Validating NTP service on server...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:46:08.493803" elapsed="0.000459"/>
</kw>
<kw name="Get NTP Status From Server" owner="network_keywords">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:46:08.495257" level="INFO">Executing command 'systemctl is-active chronyd 2&gt;/dev/null || systemctl is-active ntp 2&gt;/dev/null || systemctl is-active ntpd 2&gt;/dev/null || echo "inactive"'.</msg>
<msg time="2025-10-05T15:46:08.557483" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:46:08.557815" level="INFO">${ntp_status} = inactive
inactive
inactive
inactive</msg>
<var>${ntp_status}</var>
<arg>systemctl is-active chronyd 2&gt;/dev/null || systemctl is-active ntp 2&gt;/dev/null || systemctl is-active ntpd 2&gt;/dev/null || echo "inactive"</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:46:08.495058" elapsed="0.062797"/>
</kw>
<kw name="Strip String" owner="String">
<msg time="2025-10-05T15:46:08.558452" level="INFO">${ntp_status} = inactive
inactive
inactive
inactive</msg>
<var>${ntp_status}</var>
<arg>${ntp_status}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<status status="PASS" start="2025-10-05T15:46:08.558178" elapsed="0.000310"/>
</kw>
<return>
<value>${ntp_status}</value>
<status status="PASS" start="2025-10-05T15:46:08.558554" elapsed="0.000055"/>
</return>
<msg time="2025-10-05T15:46:08.558833" level="INFO">${ntp_status} = inactive
inactive
inactive
inactive</msg>
<var>${ntp_status}</var>
<doc>SSH to server and check NTP service status</doc>
<status status="PASS" start="2025-10-05T15:46:08.494613" elapsed="0.064250"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:46:08.560051" level="INFO">üñ•Ô∏è Server NTP Status: inactive
inactive
inactive
inactive</msg>
<arg>üñ•Ô∏è Server NTP Status: ${ntp_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:46:08.559800" elapsed="0.000403"/>
</kw>
<kw name="Should Contain Any" owner="BuiltIn">
<arg>${ntp_status}</arg>
<arg>active</arg>
<arg>running</arg>
<arg>synchronized</arg>
<arg>‚ùå NTP SERVICE: Time synchronization service not active on server</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" start="2025-10-05T15:46:08.560550" elapsed="0.000290"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:46:08.561140" level="INFO">‚úÖ NTP validation: PASSED - Time sync service active</msg>
<arg>‚úÖ NTP validation: PASSED - Time sync service active</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:46:08.560994" elapsed="0.000312"/>
</kw>
<kw name="Log Test End" owner="network_keywords" type="TEARDOWN">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:46:08.562360" level="INFO">${timestamp} = 2025-10-05 15:46:08</msg>
<var>${timestamp}</var>
<arg>result_format=%Y-%m-%d %H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:46:08.562135" elapsed="0.000261"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:46:08.563001" level="INFO">‚úÖ Completed: Normal - NTP Configuration Validation (PASS) at 2025-10-05 15:46:08</msg>
<arg>‚úÖ Completed: ${test_name} (${test_status}) at ${timestamp}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:46:08.562705" elapsed="0.000436"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<status status="PASS" start="2025-10-05T15:46:08.561681" elapsed="0.001574"/>
</kw>
<doc>üìà SSH to server and validate NTP service is running</doc>
<tag>normal</tag>
<tag>ntp</tag>
<tag>time</tag>
<status status="PASS" start="2025-10-05T15:46:08.489562" elapsed="0.073743"/>
</test>
<kw name="Generate Executive Summary" owner="network_keywords" type="TEARDOWN">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:46:08.565191" level="INFO">${end_time} = 2025-10-05 15:46:08</msg>
<var>${end_time}</var>
<arg>result_format=%Y-%m-%d %H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:46:08.564862" elapsed="0.000366"/>
</kw>
<kw name="Subtract Date From Date" owner="DateTime">
<msg time="2025-10-05T15:46:08.566396" level="INFO">${duration} = 15.0</msg>
<var>${duration}</var>
<arg>${end_time}</arg>
<arg>${TEST_START_TIME}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<status status="PASS" start="2025-10-05T15:46:08.565366" elapsed="0.001060"/>
</kw>
<kw name="Close All Connections" owner="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" start="2025-10-05T15:46:08.566542" elapsed="0.000315"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\nüéØ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-05T15:46:08.566970" elapsed="0.000240"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>üìä EXECUTIVE SUMMARY - ${TEST_SUITE_ID} EDS vs SERVER VALIDATION</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-05T15:46:08.567338" elapsed="0.000200"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-05T15:46:08.567667" elapsed="0.000147"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>‚è±Ô∏è Duration: ${duration} seconds</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-05T15:46:08.567932" elapsed="0.000184"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>üéØ Target: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-05T15:46:08.568311" elapsed="0.000363"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>üìã EDS Data: Successfully loaded and compared</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-05T15:46:08.568841" elapsed="0.000144"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>üîå SSH Connection: Used for server validation</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-05T15:46:08.569107" elapsed="0.000136"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>üìä Suite Reports: ${TEST_REPORTS_DIR}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-05T15:46:08.569397" elapsed="0.000243"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>üìä Overall Reports: ${REPORTS_DIR}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-05T15:46:08.569788" elapsed="0.000222"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>üèÜ Overall Status: TEST COMPLETED</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-05T15:46:08.570156" elapsed="0.000140"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-05T15:46:08.570432" elapsed="0.000150"/>
</kw>
<doc>Generate test summary and close connections</doc>
<status status="PASS" start="2025-10-05T15:46:08.564226" elapsed="0.006431"/>
</kw>
<doc>üåê Hostname Validation Test Suite - Test-3
üîç Process: Find hostname in EDS ‚Üí SSH to IP ‚Üí Compare server vs EDS
‚úÖ Pass if server matches EDS, ‚ùå Fail if mismatch</doc>
<status status="FAIL" start="2025-10-05T15:45:42.465026" elapsed="26.105659"/>
</suite>
<suite id="s1-s7" name="Vm Validation" source="/mnt/c/Users/sacpa/Projects/robot/robotframework/tests/test4_vm_validation/vm_validation.robot">
<kw name="Initialize VM Test Environment And Lookup Configuration" owner="variables" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:46:26.062061" level="INFO">üöÄ Initializing VM Validation Test Suite (Test-4)</msg>
<arg>üöÄ Initializing VM Validation Test Suite (Test-4)</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:46:26.061785" elapsed="0.000434"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:46:26.062607" level="INFO">üéØ Target VM: alhxvdvitap01</msg>
<arg>üéØ Target VM: ${TARGET_HOSTNAME}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:46:26.062390" elapsed="0.000359"/>
</kw>
<kw name="Lookup Server Config" owner="EDSLookup">
<msg time="2025-10-05T15:46:26.098589" level="INFO">Found matching row for hostname 'alhxvdvitap01'</msg>
<msg time="2025-10-05T15:46:26.098796" level="INFO">Extracted IP from EDS: 172.30.16.186</msg>
<msg time="2025-10-05T15:46:26.098835" level="INFO">Extracted subnet from EDS: 10.26.216.0/24</msg>
<msg time="2025-10-05T15:46:26.098863" level="INFO">Extracted mask from EDS: 255.255.255.0</msg>
<msg time="2025-10-05T15:46:26.098885" level="INFO">Extracted gateway from EDS: 10.26.216.4</msg>
<msg time="2025-10-05T15:46:26.098908" level="INFO">Extracted CNAME from EDS: alhxvdvitap01</msg>
<msg time="2025-10-05T15:46:26.098929" level="INFO">Extracted domain from EDS: gnscet.com</msg>
<msg time="2025-10-05T15:46:26.098956" level="INFO">Extracted CPU cores from EDS: 8</msg>
<msg time="2025-10-05T15:46:26.098979" level="INFO">Extracted RAM from EDS: 16</msg>
<msg time="2025-10-05T15:46:26.099002" level="INFO">Extracted storage type from EDS: VSAN</msg>
<msg time="2025-10-05T15:46:26.099039" level="INFO">Extracted storage total TB from EDS: 0.465</msg>
<msg time="2025-10-05T15:46:26.099062" level="INFO">Extracted drive/volume group from EDS: rootvg:</msg>
<msg time="2025-10-05T15:46:26.099082" level="INFO">Extracted file system from EDS: /dev/mapper/rootvg-rootlv</msg>
<msg time="2025-10-05T15:46:26.099104" level="INFO">Extracted logical volume/partition from EDS: /</msg>
<msg time="2025-10-05T15:46:26.099126" level="INFO">Extracted storage allocation GB from EDS: 20</msg>
<msg time="2025-10-05T15:46:26.099147" level="INFO">Extracted recommended storage allocation GB from EDS: 20</msg>
<msg time="2025-10-05T15:46:26.099167" level="INFO">Extracted drive purpose from EDS: OS</msg>
<msg time="2025-10-05T15:46:26.099187" level="INFO">Extracted OS type from EDS: RHEL 9.6</msg>
<msg time="2025-10-05T15:46:26.099208" level="INFO">EDS configuration for alhxvdvitap01: {'ip': '172.30.16.186', 'subnet': '10.26.216.0/24', 'mask': '255.255.255.0', 'gateway': '10.26.216.4', 'cname': 'alhxvdvitap01', 'domain': 'gnscet.com', 'cpu_cores': '8', 'ram': '16', 'storage_type': 'VSAN', 'storage_total_tb': '0.465', 'drive_volume_group': 'rootvg:', 'file_system': '/dev/mapper/rootvg-rootlv', 'logical_volume_partition': '/', 'storage_allocation_gb': '20', 'recommended_storage_gb': '20', 'drive_purpose': 'OS', 'os_type': 'RHEL 9.6'}</msg>
<msg time="2025-10-05T15:46:26.099334" level="INFO">${eds_config} = {'ip': '172.30.16.186', 'subnet': '10.26.216.0/24', 'mask': '255.255.255.0', 'gateway': '10.26.216.4', 'cname': 'alhxvdvitap01', 'domain': 'gnscet.com', 'cpu_cores': '8', 'ram': '16', 'storage_type': ...</msg>
<var>${eds_config}</var>
<arg>${TARGET_HOSTNAME}</arg>
<doc>Lookup server configuration from EDS sheet based on hostname</doc>
<status status="PASS" start="2025-10-05T15:46:26.062874" elapsed="0.036483"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:46:26.100420" level="FAIL">Resolving variable '${eds_config['vxrail_cluster']}' failed: KeyError: 'vxrail_cluster'</msg>
<arg>${TARGET_VXRAIL_CLUSTER}</arg>
<arg>${eds_config['vxrail_cluster']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="FAIL" start="2025-10-05T15:46:26.099545" elapsed="0.000975">Resolving variable '${eds_config['vxrail_cluster']}' failed: KeyError: 'vxrail_cluster'</status>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${vcenter_from_eds}</var>
<arg>${eds_config['vcenter_host']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-10-05T15:46:26.100737" elapsed="0.000036"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<var>${final_vcenter_host}</var>
<arg>'${vcenter_from_eds}' == 'N/A'</arg>
<arg>Set Variable</arg>
<arg>${DEFAULT_VCENTER_HOST}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${vcenter_from_eds}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2025-10-05T15:46:26.100913" elapsed="0.000020"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_VCENTER_HOST}</arg>
<arg>${final_vcenter_host}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-05T15:46:26.101025" elapsed="0.000015"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_VM_CPU_CORES}</arg>
<arg>${eds_config['cpu_cores']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-05T15:46:26.101113" elapsed="0.000014"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_VM_RAM}</arg>
<arg>${eds_config['ram']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-05T15:46:26.101197" elapsed="0.000014"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_VM_HARDWARE_VERSION}</arg>
<arg>${eds_config['vm_hardware_version']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-05T15:46:26.101284" elapsed="0.000014"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_VM_MEMORY_RESERVATION}</arg>
<arg>${eds_config['vm_memory_reservation']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-05T15:46:26.101370" elapsed="0.000016"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_VM_CPU_RESERVATION}</arg>
<arg>${eds_config['vm_cpu_reservation']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-05T15:46:26.101458" elapsed="0.000016"/>
</kw>
<kw name="Get Environment Variable" owner="OperatingSystem">
<var>${env_vcenter_user}</var>
<arg>VCENTER_USERNAME</arg>
<arg>${VCENTER_USERNAME}</arg>
<doc>Returns the value of an environment variable with the given name.</doc>
<status status="NOT RUN" start="2025-10-05T15:46:26.101546" elapsed="0.000015"/>
</kw>
<kw name="Get Environment Variable" owner="OperatingSystem">
<var>${env_vcenter_pass}</var>
<arg>VCENTER_PASSWORD</arg>
<arg>${VCENTER_PASSWORD}</arg>
<doc>Returns the value of an environment variable with the given name.</doc>
<status status="NOT RUN" start="2025-10-05T15:46:26.101629" elapsed="0.000019"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${VCENTER_USERNAME}</arg>
<arg>${env_vcenter_user}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-05T15:46:26.101794" elapsed="0.000028"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${VCENTER_PASSWORD}</arg>
<arg>${env_vcenter_pass}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-05T15:46:26.101906" elapsed="0.000016"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>üìã EDS Configuration Retrieved:</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:46:26.102635" elapsed="0.000024"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>üìã - VxRail Cluster: ${TARGET_VXRAIL_CLUSTER}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:46:26.102737" elapsed="0.000018"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>üìã - vCenter Host: ${TARGET_VCENTER_HOST}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:46:26.102841" elapsed="0.000022"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>üìã - CPU Cores: ${TARGET_VM_CPU_CORES}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:46:26.102958" elapsed="0.000016"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>üìã - RAM: ${TARGET_VM_RAM}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:46:26.103044" elapsed="0.000014"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>üìã - Hardware Version: ${TARGET_VM_HARDWARE_VERSION}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:46:26.103124" elapsed="0.000013"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>‚úÖ VM Test Environment Initialized</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:46:26.103241" elapsed="0.000017"/>
</kw>
<doc>Initialize test environment and lookup VM configuration from EDS</doc>
<status status="FAIL" start="2025-10-05T15:46:26.061185" elapsed="0.042195">Resolving variable '${eds_config['vxrail_cluster']}' failed: KeyError: 'vxrail_cluster'</status>
</kw>
<test id="s1-s7-t1" name="Critical - vCenter API Connection" line="21">
<doc>üîå Establish API connection to vCenter and retrieve VM details</doc>
<tag>api</tag>
<tag>connection</tag>
<tag>critical</tag>
<tag>vcenter</tag>
<status status="FAIL" start="2025-10-05T15:46:26.103470" elapsed="0.000618">Parent suite setup failed:
Resolving variable '${eds_config['vxrail_cluster']}' failed: KeyError: 'vxrail_cluster'

Also parent suite teardown failed:
No keyword with name 'Disconnect From vCenter' found.</status>
</test>
<test id="s1-s7-t2" name="Critical - VM Cluster Placement Validation" line="48">
<doc>üè¢ Validate VM is placed in the correct VxRail cluster per EDS specification</doc>
<tag>cluster</tag>
<tag>compliance</tag>
<tag>critical</tag>
<tag>placement</tag>
<status status="FAIL" start="2025-10-05T15:46:26.104370" elapsed="0.000471">Parent suite setup failed:
Resolving variable '${eds_config['vxrail_cluster']}' failed: KeyError: 'vxrail_cluster'

Also parent suite teardown failed:
No keyword with name 'Disconnect From vCenter' found.</status>
</test>
<test id="s1-s7-t3" name="Critical - VM CPU Configuration Validation" line="62">
<doc>üíª Validate VM CPU allocation matches EDS specification</doc>
<tag>compliance</tag>
<tag>cpu</tag>
<tag>critical</tag>
<tag>hardware</tag>
<status status="FAIL" start="2025-10-05T15:46:26.105099" elapsed="0.000389">Parent suite setup failed:
Resolving variable '${eds_config['vxrail_cluster']}' failed: KeyError: 'vxrail_cluster'

Also parent suite teardown failed:
No keyword with name 'Disconnect From vCenter' found.</status>
</test>
<test id="s1-s7-t4" name="Critical - VM Memory Configuration Validation" line="76">
<doc>üß† Validate VM memory allocation matches EDS specification</doc>
<tag>compliance</tag>
<tag>critical</tag>
<tag>hardware</tag>
<tag>memory</tag>
<status status="FAIL" start="2025-10-05T15:46:26.105757" elapsed="0.000378">Parent suite setup failed:
Resolving variable '${eds_config['vxrail_cluster']}' failed: KeyError: 'vxrail_cluster'

Also parent suite teardown failed:
No keyword with name 'Disconnect From vCenter' found.</status>
</test>
<test id="s1-s7-t5" name="Critical - VM Hardware Version Validation" line="90">
<doc>‚öôÔ∏è Validate VM hardware version matches EDS specification</doc>
<tag>compliance</tag>
<tag>critical</tag>
<tag>hardware</tag>
<tag>version</tag>
<status status="FAIL" start="2025-10-05T15:46:26.106431" elapsed="0.000338">Parent suite setup failed:
Resolving variable '${eds_config['vxrail_cluster']}' failed: KeyError: 'vxrail_cluster'

Also parent suite teardown failed:
No keyword with name 'Disconnect From vCenter' found.</status>
</test>
<test id="s1-s7-t6" name="Critical - VM Network Adapter Validation" line="104">
<doc>üåê Validate VM network adapter configuration</doc>
<tag>adapters</tag>
<tag>compliance</tag>
<tag>critical</tag>
<tag>network</tag>
<status status="FAIL" start="2025-10-05T15:46:26.106961" elapsed="0.000500">Parent suite setup failed:
Resolving variable '${eds_config['vxrail_cluster']}' failed: KeyError: 'vxrail_cluster'

Also parent suite teardown failed:
No keyword with name 'Disconnect From vCenter' found.</status>
</test>
<test id="s1-s7-t7" name="Critical - VM Disk Configuration Validation" line="118">
<doc>üíæ Validate VM disk configuration and capacity</doc>
<tag>compliance</tag>
<tag>critical</tag>
<tag>disk</tag>
<tag>storage</tag>
<status status="FAIL" start="2025-10-05T15:46:26.107702" elapsed="0.000310">Parent suite setup failed:
Resolving variable '${eds_config['vxrail_cluster']}' failed: KeyError: 'vxrail_cluster'

Also parent suite teardown failed:
No keyword with name 'Disconnect From vCenter' found.</status>
</test>
<test id="s1-s7-t8" name="Normal - VM Properties Comprehensive Review" line="132">
<doc>üìã Review all VM properties and configuration details</doc>
<tag>analysis</tag>
<tag>normal</tag>
<tag>properties</tag>
<tag>review</tag>
<status status="FAIL" start="2025-10-05T15:46:26.108225" elapsed="0.000427">Parent suite setup failed:
Resolving variable '${eds_config['vxrail_cluster']}' failed: KeyError: 'vxrail_cluster'

Also parent suite teardown failed:
No keyword with name 'Disconnect From vCenter' found.</status>
</test>
<kw name="Generate VM Executive Summary And Disconnect" type="TEARDOWN">
<kw name="Generate VM Executive Summary" owner="variables">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:46:26.109666" level="INFO">üìä Generating VM Validation Executive Summary...</msg>
<arg>üìä Generating VM Validation Executive Summary...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:46:26.109505" elapsed="0.000261"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:46:26.110063" level="INFO">${summary_file} = /mnt/c/Users/sacpa/Projects/robot/robotframework/ansible_playbooks/../results/test4_vm_validation/Test4_VM_Validation_Executive_Summary.txt</msg>
<var>${summary_file}</var>
<arg>${OUTPUT_DIR}/Test4_VM_Validation_Executive_Summary.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:46:26.109876" elapsed="0.000211"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:46:26.111885" level="INFO">${summary} = ========================================
VM VALIDATION TEST - EXECUTIVE SUMMARY
========================================

Test Suite: Test-4 VM Validation
Target VM: alhxvdvitap01

EDS CONFIGURATION:
...</msg>
<var>${summary}</var>
<arg>SEPARATOR=\n</arg>
<arg>========================================</arg>
<arg>VM VALIDATION TEST - EXECUTIVE SUMMARY</arg>
<arg>========================================</arg>
<arg>${EMPTY}</arg>
<arg>Test Suite: Test-4 VM Validation</arg>
<arg>Target VM: ${TARGET_HOSTNAME}</arg>
<arg>${EMPTY}</arg>
<arg>EDS CONFIGURATION:</arg>
<arg>- VxRail Cluster: ${TARGET_VXRAIL_CLUSTER}</arg>
<arg>- vCenter Host: ${TARGET_VCENTER_HOST}</arg>
<arg>- Expected CPU Cores: ${TARGET_VM_CPU_CORES}</arg>
<arg>- Expected RAM: ${TARGET_VM_RAM}</arg>
<arg>- Expected Hardware Version: ${TARGET_VM_HARDWARE_VERSION}</arg>
<arg>- Memory Reservation: ${TARGET_VM_MEMORY_RESERVATION}</arg>
<arg>- CPU Reservation: ${TARGET_VM_CPU_RESERVATION}</arg>
<arg>${EMPTY}</arg>
<arg>VALIDATION STATUS:</arg>
<arg>- See detailed test report for validation results</arg>
<arg>${EMPTY}</arg>
<arg>========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:46:26.110169" elapsed="0.001744"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:46:26.117501" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test4_vm_validation/Test4_VM_Validation_Executive_Summary.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test4_vm_validation/Test4_VM_Validation_Executive_Summary.txt&lt;/a&gt;'.</msg>
<arg>${summary_file}</arg>
<arg>${summary}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:46:26.112033" elapsed="0.005883"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:46:26.118277" level="INFO">‚úÖ Executive Summary generated: /mnt/c/Users/sacpa/Projects/robot/robotframework/ansible_playbooks/../results/test4_vm_validation/Test4_VM_Validation_Executive_Summary.txt</msg>
<arg>‚úÖ Executive Summary generated: ${summary_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:46:26.118045" elapsed="0.000349"/>
</kw>
<doc>Generate executive summary for VM validation test results</doc>
<status status="PASS" start="2025-10-05T15:46:26.109350" elapsed="0.009135"/>
</kw>
<kw name="Disconnect From vCenter">
<msg time="2025-10-05T15:46:26.119728" level="FAIL">No keyword with name 'Disconnect From vCenter' found.</msg>
<status status="FAIL" start="2025-10-05T15:46:26.119690" elapsed="0.000077">No keyword with name 'Disconnect From vCenter' found.</status>
</kw>
<doc>Generate executive summary and disconnect from vCenter</doc>
<status status="FAIL" start="2025-10-05T15:46:26.109150" elapsed="0.010728">No keyword with name 'Disconnect From vCenter' found.</status>
</kw>
<doc>üñ•Ô∏è VM Configuration Validation Test Suite - Test-4
üîç Process: Connect to vCenter API ‚Üí Query VM details ‚Üí Compare vCenter vs EDS
‚úÖ Pass if VM configuration matches EDS requirements, ‚ùå Fail if mismatch
üìä Validates: Cluster placement, CPU cores, memory, hardware version, network, disks</doc>
<status status="FAIL" start="2025-10-05T15:46:17.508728" elapsed="8.611214">Suite setup failed:
Resolving variable '${eds_config['vxrail_cluster']}' failed: KeyError: 'vxrail_cluster'

Also suite teardown failed:
No keyword with name 'Disconnect From vCenter' found.</status>
</suite>
<suite id="s1-s8" name="Disk Space Validation" source="/mnt/c/Users/sacpa/Projects/robot/robotframework/tests/test5_disk_space_validation/disk_space_validation.robot">
<kw name="Initialize Storage Test Environment And Lookup Configuration" owner="storage_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:46:48.568462" level="INFO">üöÄ Initializing Test-5: Storage &amp; System Validation Environment...</msg>
<arg>üöÄ Initializing Test-5: Storage &amp; System Validation Environment...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:46:48.568210" elapsed="0.000419"/>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2025-10-05T15:46:48.571590" level="INFO" html="true">Directory '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test5_disk_space_validation/data"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test5_disk_space_validation/data&lt;/a&gt;' already exists.</msg>
<arg>${DATA_DIR}</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2025-10-05T15:46:48.568899" elapsed="0.002815"/>
</kw>
<kw name="Lookup Server Config" owner="EDSLookup">
<msg time="2025-10-05T15:46:48.636669" level="INFO">Found matching row for hostname 'alhxvdvitap01'</msg>
<msg time="2025-10-05T15:46:48.637015" level="INFO">Extracted IP from EDS: 172.30.16.186</msg>
<msg time="2025-10-05T15:46:48.637077" level="INFO">Extracted subnet from EDS: 10.26.216.0/24</msg>
<msg time="2025-10-05T15:46:48.637121" level="INFO">Extracted mask from EDS: 255.255.255.0</msg>
<msg time="2025-10-05T15:46:48.637155" level="INFO">Extracted gateway from EDS: 10.26.216.4</msg>
<msg time="2025-10-05T15:46:48.637188" level="INFO">Extracted CNAME from EDS: alhxvdvitap01</msg>
<msg time="2025-10-05T15:46:48.637220" level="INFO">Extracted domain from EDS: gnscet.com</msg>
<msg time="2025-10-05T15:46:48.637259" level="INFO">Extracted CPU cores from EDS: 8</msg>
<msg time="2025-10-05T15:46:48.637295" level="INFO">Extracted RAM from EDS: 16</msg>
<msg time="2025-10-05T15:46:48.637329" level="INFO">Extracted storage type from EDS: VSAN</msg>
<msg time="2025-10-05T15:46:48.637384" level="INFO">Extracted storage total TB from EDS: 0.465</msg>
<msg time="2025-10-05T15:46:48.637418" level="INFO">Extracted drive/volume group from EDS: rootvg:</msg>
<msg time="2025-10-05T15:46:48.637452" level="INFO">Extracted file system from EDS: /dev/mapper/rootvg-rootlv</msg>
<msg time="2025-10-05T15:46:48.637486" level="INFO">Extracted logical volume/partition from EDS: /</msg>
<msg time="2025-10-05T15:46:48.637519" level="INFO">Extracted storage allocation GB from EDS: 20</msg>
<msg time="2025-10-05T15:46:48.637553" level="INFO">Extracted recommended storage allocation GB from EDS: 20</msg>
<msg time="2025-10-05T15:46:48.637585" level="INFO">Extracted drive purpose from EDS: OS</msg>
<msg time="2025-10-05T15:46:48.637615" level="INFO">Extracted OS type from EDS: RHEL 9.6</msg>
<msg time="2025-10-05T15:46:48.637677" level="INFO">EDS configuration for alhxvdvitap01: {'ip': '172.30.16.186', 'subnet': '10.26.216.0/24', 'mask': '255.255.255.0', 'gateway': '10.26.216.4', 'cname': 'alhxvdvitap01', 'domain': 'gnscet.com', 'cpu_cores': '8', 'ram': '16', 'storage_type': 'VSAN', 'storage_total_tb': '0.465', 'drive_volume_group': 'rootvg:', 'file_system': '/dev/mapper/rootvg-rootlv', 'logical_volume_partition': '/', 'storage_allocation_gb': '20', 'recommended_storage_gb': '20', 'drive_purpose': 'OS', 'os_type': 'RHEL 9.6'}</msg>
<msg time="2025-10-05T15:46:48.638011" level="INFO">${eds_config} = {'ip': '172.30.16.186', 'subnet': '10.26.216.0/24', 'mask': '255.255.255.0', 'gateway': '10.26.216.4', 'cname': 'alhxvdvitap01', 'domain': 'gnscet.com', 'cpu_cores': '8', 'ram': '16', 'storage_type': ...</msg>
<var>${eds_config}</var>
<arg>${TARGET_HOSTNAME}</arg>
<doc>Lookup server configuration from EDS sheet based on hostname</doc>
<status status="PASS" start="2025-10-05T15:46:48.571889" elapsed="0.066171"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:46:48.641492" level="INFO">${TARGET_IP} = 172.30.16.186</msg>
<arg>${TARGET_IP}</arg>
<arg>${eds_config['ip']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:46:48.638322" elapsed="0.003267"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:46:48.643228" level="INFO">${TARGET_CPU_CORES} = 8</msg>
<arg>${TARGET_CPU_CORES}</arg>
<arg>${eds_config['cpu_cores']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:46:48.641948" elapsed="0.001384"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:46:48.644702" level="INFO">${TARGET_RAM} = 16</msg>
<arg>${TARGET_RAM}</arg>
<arg>${eds_config['ram']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:46:48.643566" elapsed="0.001185"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:46:48.645770" level="INFO">${TARGET_STORAGE_TYPE} = VSAN</msg>
<arg>${TARGET_STORAGE_TYPE}</arg>
<arg>${eds_config['storage_type']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:46:48.644888" elapsed="0.000960"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:46:48.646803" level="INFO">${TARGET_STORAGE_TOTAL_TB} = 0.465</msg>
<arg>${TARGET_STORAGE_TOTAL_TB}</arg>
<arg>${eds_config['storage_total_tb']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:46:48.645991" elapsed="0.000861"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:46:48.647704" level="INFO">${TARGET_DRIVE_VOLUME_GROUP} = rootvg:</msg>
<arg>${TARGET_DRIVE_VOLUME_GROUP}</arg>
<arg>${eds_config['drive_volume_group']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:46:48.646983" elapsed="0.000815"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:46:48.649087" level="INFO">${TARGET_FILE_SYSTEM} = /dev/mapper/rootvg-rootlv</msg>
<arg>${TARGET_FILE_SYSTEM}</arg>
<arg>${eds_config['file_system']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:46:48.647949" elapsed="0.001193"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:46:48.650221" level="INFO">${TARGET_LOGICAL_VOLUME} = /</msg>
<arg>${TARGET_LOGICAL_VOLUME}</arg>
<arg>${eds_config['logical_volume_partition']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:46:48.649285" elapsed="0.000989"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:46:48.651568" level="INFO">${TARGET_STORAGE_ALLOC_GB} = 20</msg>
<arg>${TARGET_STORAGE_ALLOC_GB}</arg>
<arg>${eds_config['storage_allocation_gb']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:46:48.650444" elapsed="0.001188"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:46:48.652443" level="INFO">${TARGET_RECOMMENDED_GB} = 20</msg>
<arg>${TARGET_RECOMMENDED_GB}</arg>
<arg>${eds_config['recommended_storage_gb']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:46:48.651769" elapsed="0.000716"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:46:48.653302" level="INFO">${TARGET_DRIVE_PURPOSE} = OS</msg>
<arg>${TARGET_DRIVE_PURPOSE}</arg>
<arg>${eds_config['drive_purpose']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:46:48.652626" elapsed="0.001334"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:46:48.654997" level="INFO">${TARGET_OS_TYPE} = RHEL 9.6</msg>
<arg>${TARGET_OS_TYPE}</arg>
<arg>${eds_config['os_type']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:46:48.654123" elapsed="0.000916"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:46:48.655337" level="INFO">üìã EDS Target IP: 172.30.16.186</msg>
<arg>üìã EDS Target IP: ${TARGET_IP}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:46:48.655145" elapsed="0.000310"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:46:48.655794" level="INFO">üìã EDS CPU Cores: 8</msg>
<arg>üìã EDS CPU Cores: ${TARGET_CPU_CORES}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:46:48.655625" elapsed="0.000270"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:46:48.656265" level="INFO">üìã EDS RAM: 16 GB</msg>
<arg>üìã EDS RAM: ${TARGET_RAM} GB</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:46:48.656034" elapsed="0.000326"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:46:48.656683" level="INFO">üìã EDS Storage Type: VSAN</msg>
<arg>üìã EDS Storage Type: ${TARGET_STORAGE_TYPE}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:46:48.656501" elapsed="0.000281"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:46:48.657105" level="INFO">üìã EDS Storage Total: 0.465 TB</msg>
<arg>üìã EDS Storage Total: ${TARGET_STORAGE_TOTAL_TB} TB</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:46:48.656951" elapsed="0.000248"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:46:48.657463" level="INFO">üìã EDS OS Type: RHEL 9.6</msg>
<arg>üìã EDS OS Type: ${TARGET_OS_TYPE}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:46:48.657324" elapsed="0.000246"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:46:48.657928" level="INFO">üîó Connecting to target server: 172.30.16.186...</msg>
<arg>üîó Connecting to target server: ${TARGET_IP}...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:46:48.657734" elapsed="0.000288"/>
</kw>
<kw name="Open Connection" owner="SSHLibrary">
<arg>${TARGET_IP}</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" start="2025-10-05T15:46:48.658148" elapsed="0.000202"/>
</kw>
<kw name="Login" owner="SSHLibrary">
<msg time="2025-10-05T15:46:48.658620" level="INFO">Logging into '172.30.16.186:22' as 'sac'.</msg>
<msg time="2025-10-05T15:46:49.983727" level="INFO">Read output: Welcome to Ubuntu 24.04.3 LTS (GNU/Linux 6.6.87.2-microsoft-standard-WSL2 x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/pro

 System information as of Sun Oct  5 15:45:53 CDT 2025

  System load:  1.09                Processes:             36
  Usage of /:   0.7% of 1006.85GB   Users logged in:       1
  Memory usage: 7%                  IPv4 address for eth0: 172.30.16.186
  Swap usage:   0%

 * Strictly confined Kubernetes makes edge and IoT secure. Learn how MicroK8s
   just raised the bar for easy, resilient and secure K8s cluster deployment.

   https://ubuntu.com/engage/secure-kubernetes-at-the-edge
Last login: Sun Oct  5 15:45:54 2025 from 172.30.16.186
[?2004hsac@alhxvdvitap01:~$</msg>
<arg>${SSH_USERNAME}</arg>
<arg>${SSH_PASSWORD}</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<status status="PASS" start="2025-10-05T15:46:48.658444" elapsed="1.325570"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:46:49.984558" level="INFO">‚úÖ SSH connection established successfully</msg>
<arg>‚úÖ SSH connection established successfully</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:46:49.984300" elapsed="0.000415"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:46:49.985076" level="INFO">‚úÖ Test-5 environment initialized</msg>
<arg>‚úÖ Test-5 environment initialized</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:46:49.984890" elapsed="0.000298"/>
</kw>
<doc>üèóÔ∏è Set up test environment and lookup EDS configuration</doc>
<status status="PASS" start="2025-10-05T15:46:48.567312" elapsed="1.418032"/>
</kw>
<test id="s1-s8-t1" name="Critical - CPU Cores Validation" line="19">
<kw name="Log Test Start" owner="storage_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:46:49.986648" level="INFO">üèÅ Starting: Critical - CPU Cores Validation</msg>
<arg>üèÅ Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:46:49.986497" elapsed="0.000256"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:46:49.986210" elapsed="0.000628"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:46:49.987056" level="INFO">üîç Validating CPU cores: EDS vs Server...</msg>
<arg>üîç Validating CPU cores: EDS vs Server...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:46:49.986949" elapsed="0.000224"/>
</kw>
<kw name="Get CPU Information From Server" owner="storage_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:46:49.987705" level="INFO">üíª Collecting CPU information from server...</msg>
<arg>üíª Collecting CPU information from server...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:46:49.987600" elapsed="0.000197"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:46:49.988019" level="INFO">Executing command 'nproc'.</msg>
<msg time="2025-10-05T15:46:50.010323" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:46:50.010617" level="INFO">${cpu_cores_output} = 8</msg>
<var>${cpu_cores_output}</var>
<arg>nproc</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:46:49.987923" elapsed="0.022730"/>
</kw>
<kw name="Strip String" owner="String">
<msg time="2025-10-05T15:46:50.011161" level="INFO">${cpu_cores} = 8</msg>
<var>${cpu_cores}</var>
<arg>${cpu_cores_output}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<status status="PASS" start="2025-10-05T15:46:50.010899" elapsed="0.000295"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:46:50.011573" level="INFO">Executing command 'lscpu | grep -E "(Model name|CPU\(s\)|Core\(s\) per socket|Socket\(s\))"'.</msg>
<msg time="2025-10-05T15:46:50.106031" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:46:50.106395" level="INFO">${cpu_info_output} = CPU(s):                               8
On-line CPU(s) list:                  0-7
Model name:                           11th Gen Intel(R) Core(TM) i7-1185G7 @ 3.00GHz
Core(s) per socket:              ...</msg>
<var>${cpu_info_output}</var>
<arg>lscpu | grep -E "(Model name|CPU\\(s\\)|Core\\(s\\) per socket|Socket\\(s\\))"</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:46:50.011385" elapsed="0.095059"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:46:50.108073" level="INFO">Executing command 'lscpu | grep "Model name" | cut -d':' -f2 | xargs'.</msg>
<msg time="2025-10-05T15:46:50.176041" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:46:50.176373" level="INFO">${cpu_model_output} = 11th Gen Intel(R) Core(TM) i7-1185G7 @ 3.00GHz</msg>
<var>${cpu_model_output}</var>
<arg>lscpu | grep "Model name" | cut -d':' -f2 | xargs</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:46:50.107801" elapsed="0.068617"/>
</kw>
<kw name="Strip String" owner="String">
<msg time="2025-10-05T15:46:50.177041" level="INFO">${cpu_model} = 11th Gen Intel(R) Core(TM) i7-1185G7 @ 3.00GHz</msg>
<var>${cpu_model}</var>
<arg>${cpu_model_output}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<status status="PASS" start="2025-10-05T15:46:50.176730" elapsed="0.000374"/>
</kw>
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:46:50.177969" level="INFO">${timestamp} = 20251005_154650</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:46:50.177340" elapsed="0.000700"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:46:50.178609" level="INFO">${cpu_file} = results/test5_disk_space_validation/data/cpu_information_20251005_154650.txt</msg>
<var>${cpu_file}</var>
<arg>${DATA_DIR}/cpu_information_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:46:50.178295" elapsed="0.000353"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:46:50.179461" level="INFO">${cpu_data} = === CPU Information Report ===
Timestamp: 20251005_154650
Target Server: alhxvdvitap01 (172.30.16.186)

=== CPU Core Count ===
CPU Cores: 8

=== CPU Model ===
Model: 11th Gen Intel(R) Core(TM) i7-1185...</msg>
<var>${cpu_data}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== CPU Information Report ===</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>=== CPU Core Count ===</arg>
<arg>CPU Cores: ${cpu_cores}</arg>
<arg>=== CPU Model ===</arg>
<arg>Model: ${cpu_model}</arg>
<arg>=== Detailed CPU Information ===</arg>
<arg>${cpu_info_output}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:46:50.178810" elapsed="0.000707"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:46:50.187466" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test5_disk_space_validation/data/cpu_information_20251005_154650.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test5_disk_space_validation/data/cpu_information_20251005_154650.txt&lt;/a&gt;'.</msg>
<arg>${cpu_file}</arg>
<arg>${cpu_data}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:46:50.179721" elapsed="0.007866"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:46:50.188071" level="INFO">üìÑ CPU information saved to: results/test5_disk_space_validation/data/cpu_information_20251005_154650.txt</msg>
<arg>üìÑ CPU information saved to: ${cpu_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:46:50.187824" elapsed="0.000532"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:46:50.188776" level="INFO">üíª Server CPU Cores: 8</msg>
<arg>üíª Server CPU Cores: ${cpu_cores}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:46:50.188533" elapsed="0.000374"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:46:50.189485" level="INFO">üíª Server CPU Model: 11th Gen Intel(R) Core(TM) i7-1185G7 @ 3.00GHz</msg>
<arg>üíª Server CPU Model: ${cpu_model}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:46:50.189102" elapsed="0.000531"/>
</kw>
<return>
<value>${cpu_cores}</value>
<status status="PASS" start="2025-10-05T15:46:50.189946" elapsed="0.000091"/>
</return>
<msg time="2025-10-05T15:46:50.190242" level="INFO">${actual_cpu_cores} = 8</msg>
<var>${actual_cpu_cores}</var>
<doc>üíª Collect CPU information from server via SSH</doc>
<status status="PASS" start="2025-10-05T15:46:49.987411" elapsed="0.202861"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:46:50.190644" level="INFO">üìã EDS Expected CPU Cores: 8</msg>
<arg>üìã EDS Expected CPU Cores: ${TARGET_CPU_CORES}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:46:50.190412" elapsed="0.000356"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:46:50.191082" level="INFO">üíª Server Actual CPU Cores: 8</msg>
<arg>üíª Server Actual CPU Cores: ${actual_cpu_cores}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:46:50.190938" elapsed="0.000235"/>
</kw>
<kw name="Validate CPU Cores Against EDS" owner="storage_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:46:50.191822" level="INFO">üîç Validating CPU cores: EDS vs Server...</msg>
<arg>üîç Validating CPU cores: EDS vs Server...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:46:50.191703" elapsed="0.000213"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:46:50.192175" level="INFO">üìã EDS Expected: 8 cores</msg>
<arg>üìã EDS Expected: ${TARGET_CPU_CORES} cores</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:46:50.192036" elapsed="0.000228"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:46:50.192513" level="INFO">üíª Server Actual: 8 cores</msg>
<arg>üíª Server Actual: ${actual_cpu_cores} cores</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:46:50.192378" elapsed="0.000273"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_cpu_cores}</arg>
<arg>${TARGET_CPU_CORES}</arg>
<arg>‚ùå CPU CORE MISMATCH: EDS expects '${TARGET_CPU_CORES}' cores but server has '${actual_cpu_cores}' cores</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-05T15:46:50.192800" elapsed="0.000253"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:46:50.193244" level="INFO">‚úÖ CPU cores validation: PASSED - EDS matches Server</msg>
<arg>‚úÖ CPU cores validation: PASSED - EDS matches Server</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:46:50.193150" elapsed="0.000183"/>
</kw>
<arg>${actual_cpu_cores}</arg>
<doc>üíª Validate CPU cores match EDS expectation</doc>
<status status="PASS" start="2025-10-05T15:46:50.191365" elapsed="0.002095"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:46:50.193666" level="INFO">‚úÖ CPU cores validation: PASSED - EDS matches Server</msg>
<arg>‚úÖ CPU cores validation: PASSED - EDS matches Server</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:46:50.193558" elapsed="0.000230"/>
</kw>
<kw name="Log Test End" owner="storage_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:46:50.195603" level="INFO">‚úÖ Completed: Critical - CPU Cores Validation - PASS</msg>
<arg>‚úÖ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:46:50.195431" elapsed="0.000278"/>
</kw>
<status status="PASS" start="2025-10-05T15:46:50.194987" elapsed="0.000780"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>‚ùå Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:46:50.195906" elapsed="0.000019"/>
</kw>
<status status="NOT RUN" start="2025-10-05T15:46:50.195802" elapsed="0.000155"/>
</branch>
<status status="PASS" start="2025-10-05T15:46:50.194915" elapsed="0.001065"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case</doc>
<status status="PASS" start="2025-10-05T15:46:50.194165" elapsed="0.001869"/>
</kw>
<doc>üíª SSH to server and validate CPU core count matches EDS specification</doc>
<tag>compliance</tag>
<tag>cpu</tag>
<tag>critical</tag>
<tag>hardware</tag>
<status status="PASS" start="2025-10-05T15:46:49.985453" elapsed="0.210642"/>
</test>
<test id="s1-s8-t2" name="Critical - Memory Allocation Validation" line="36">
<kw name="Log Test Start" owner="storage_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:46:50.197738" level="INFO">üèÅ Starting: Critical - Memory Allocation Validation</msg>
<arg>üèÅ Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:46:50.197573" elapsed="0.000303"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:46:50.197303" elapsed="0.000634"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:46:50.198195" level="INFO">üîç Validating memory allocation: EDS vs Server...</msg>
<arg>üîç Validating memory allocation: EDS vs Server...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:46:50.198045" elapsed="0.000313"/>
</kw>
<kw name="Get Memory Information From Server" owner="storage_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:46:50.198879" level="INFO">üß† Collecting memory information from server...</msg>
<arg>üß† Collecting memory information from server...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:46:50.198770" elapsed="0.000205"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:46:50.199175" level="INFO">Executing command 'free -h | grep "Mem:"'.</msg>
<msg time="2025-10-05T15:46:50.228290" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:46:50.228530" level="INFO">${mem_output} = Mem:           7.7Gi       650Mi       6.8Gi       3.7Mi       371Mi       7.0Gi</msg>
<var>${mem_output}</var>
<arg>free -h | grep "Mem:"</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:46:50.199088" elapsed="0.029468"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:46:50.228926" level="INFO">Executing command 'free -m | grep "Mem:" | awk '{print $2}''.</msg>
<msg time="2025-10-05T15:46:50.289587" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:46:50.290086" level="INFO">${mem_total_output} = 7862</msg>
<var>${mem_total_output}</var>
<arg>free -m | grep "Mem:" | awk '{print $2}'</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:46:50.228759" elapsed="0.061385"/>
</kw>
<kw name="Strip String" owner="String">
<msg time="2025-10-05T15:46:50.290904" level="INFO">${mem_total_mb} = 7862</msg>
<var>${mem_total_mb}</var>
<arg>${mem_total_output}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<status status="PASS" start="2025-10-05T15:46:50.290527" elapsed="0.000425"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-05T15:46:50.291612" level="INFO">${mem_total_gb} = 7.7</msg>
<var>${mem_total_gb}</var>
<arg>round(${mem_total_mb} / 1024, 1)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-05T15:46:50.291136" elapsed="0.000519"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:46:50.292023" level="INFO">Executing command 'cat /proc/meminfo | head -20'.</msg>
<msg time="2025-10-05T15:46:50.335929" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:46:50.336299" level="INFO">${mem_info_output} = MemTotal:        8050912 kB
MemFree:         7171100 kB
MemAvailable:    7384612 kB
Buffers:            5080 kB
Cached:           329192 kB
SwapCached:            0 kB
Active:           143376 kB
Inac...</msg>
<var>${mem_info_output}</var>
<arg>cat /proc/meminfo | head -20</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:46:50.291871" elapsed="0.044480"/>
</kw>
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:46:50.337281" level="INFO">${timestamp} = 20251005_154650</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:46:50.336720" elapsed="0.000683"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:46:50.338408" level="INFO">${mem_file} = results/test5_disk_space_validation/data/memory_information_20251005_154650.txt</msg>
<var>${mem_file}</var>
<arg>${DATA_DIR}/memory_information_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:46:50.337905" elapsed="0.000550"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:46:50.339356" level="INFO">${mem_data} = === Memory Information Report ===
Timestamp: 20251005_154650
Target Server: alhxvdvitap01 (172.30.16.186)

=== Memory Summary ===
Mem:           7.7Gi       650Mi       6.8Gi       3.7Mi       371Mi  ...</msg>
<var>${mem_data}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Memory Information Report ===</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>=== Memory Summary ===</arg>
<arg>${mem_output}</arg>
<arg>Total Memory: ${mem_total_gb} GB</arg>
<arg>=== Detailed Memory Information ===</arg>
<arg>${mem_info_output}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:46:50.338648" elapsed="0.000760"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:46:50.349994" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test5_disk_space_validation/data/memory_information_20251005_154650.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test5_disk_space_validation/data/memory_information_20251005_154650.txt&lt;/a&gt;'.</msg>
<arg>${mem_file}</arg>
<arg>${mem_data}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:46:50.339650" elapsed="0.010461"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:46:50.350618" level="INFO">üìÑ Memory information saved to: results/test5_disk_space_validation/data/memory_information_20251005_154650.txt</msg>
<arg>üìÑ Memory information saved to: ${mem_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:46:50.350339" elapsed="0.000460"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:46:50.351799" level="INFO">üß† Server Total Memory: 7.7 GB</msg>
<arg>üß† Server Total Memory: ${mem_total_gb} GB</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:46:50.351541" elapsed="0.000412"/>
</kw>
<return>
<value>${mem_total_gb}</value>
<status status="PASS" start="2025-10-05T15:46:50.352060" elapsed="0.000068"/>
</return>
<msg time="2025-10-05T15:46:50.352358" level="INFO">${actual_memory_gb} = 7.7</msg>
<var>${actual_memory_gb}</var>
<doc>üß† Collect memory information from server via SSH</doc>
<status status="PASS" start="2025-10-05T15:46:50.198560" elapsed="0.153841"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:46:50.352848" level="INFO">üìã EDS Expected RAM: 16 GB</msg>
<arg>üìã EDS Expected RAM: ${TARGET_RAM} GB</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:46:50.352624" elapsed="0.000383"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:46:50.353456" level="INFO">üß† Server Actual RAM: 7.7 GB</msg>
<arg>üß† Server Actual RAM: ${actual_memory_gb} GB</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:46:50.353178" elapsed="0.000424"/>
</kw>
<kw name="Validate Memory Against EDS" owner="storage_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:46:50.354559" level="INFO">üîç Validating memory allocation: EDS vs Server...</msg>
<arg>üîç Validating memory allocation: EDS vs Server...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:46:50.354409" elapsed="0.000304"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:46:50.355036" level="INFO">üìã EDS Expected: 16 GB</msg>
<arg>üìã EDS Expected: ${TARGET_RAM} GB</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:46:50.354868" elapsed="0.000272"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:46:50.355512" level="INFO">üß† Server Actual: 7.7 GB</msg>
<arg>üß† Server Actual: ${actual_memory_gb} GB</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:46:50.355272" elapsed="0.000339"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-05T15:46:50.356105" level="INFO">${ram_difference} = 8.3</msg>
<var>${ram_difference}</var>
<arg>abs(float("${actual_memory_gb}") - float("${TARGET_RAM}"))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-05T15:46:50.355760" elapsed="0.000372"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-05T15:46:50.356481" level="INFO">${tolerance_passed} = False</msg>
<var>${tolerance_passed}</var>
<arg>${ram_difference} &lt;= 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-05T15:46:50.356242" elapsed="0.000289"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<msg time="2025-10-05T15:46:50.357001" level="FAIL">‚ùå MEMORY MISMATCH: EDS expects '16' GB but server has '7.7' GB (difference: 8.3 GB, tolerance: 1GB)</msg>
<arg>${tolerance_passed}</arg>
<arg>‚ùå MEMORY MISMATCH: EDS expects '${TARGET_RAM}' GB but server has '${actual_memory_gb}' GB (difference: ${ram_difference} GB, tolerance: 1GB)</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="FAIL" start="2025-10-05T15:46:50.356640" elapsed="0.000574">‚ùå MEMORY MISMATCH: EDS expects '16' GB but server has '7.7' GB (difference: 8.3 GB, tolerance: 1GB)</status>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>‚úÖ Memory validation: PASSED - EDS matches Server (within tolerance)</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:46:50.357370" elapsed="0.000034"/>
</kw>
<arg>${actual_memory_gb}</arg>
<doc>üß† Validate memory allocation matches EDS expectation</doc>
<status status="FAIL" start="2025-10-05T15:46:50.354037" elapsed="0.003529">‚ùå MEMORY MISMATCH: EDS expects '16' GB but server has '7.7' GB (difference: 8.3 GB, tolerance: 1GB)</status>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>‚úÖ Memory allocation validation: PASSED - EDS matches Server</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:46:50.357686" elapsed="0.000021"/>
</kw>
<kw name="Log Test End" owner="storage_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>‚úÖ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:46:50.359103" elapsed="0.000034"/>
</kw>
<status status="NOT RUN" start="2025-10-05T15:46:50.358871" elapsed="0.000322"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:46:50.359559" level="INFO">‚ùå Completed: Critical - Memory Allocation Validation - FAIL</msg>
<arg>‚ùå Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:46:50.359355" elapsed="0.000327"/>
</kw>
<status status="PASS" start="2025-10-05T15:46:50.359241" elapsed="0.000502"/>
</branch>
<status status="PASS" start="2025-10-05T15:46:50.358603" elapsed="0.001173"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case</doc>
<status status="PASS" start="2025-10-05T15:46:50.358270" elapsed="0.001589"/>
</kw>
<doc>üß† SSH to server and validate memory allocation matches EDS specification</doc>
<tag>compliance</tag>
<tag>critical</tag>
<tag>hardware</tag>
<tag>memory</tag>
<status status="FAIL" start="2025-10-05T15:46:50.196701" elapsed="0.163230">‚ùå MEMORY MISMATCH: EDS expects '16' GB but server has '7.7' GB (difference: 8.3 GB, tolerance: 1GB)</status>
</test>
<test id="s1-s8-t3" name="Critical - Disk Space Allocation Validation" line="53">
<kw name="Log Test Start" owner="storage_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:46:50.361477" level="INFO">üèÅ Starting: Critical - Disk Space Allocation Validation</msg>
<arg>üèÅ Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:46:50.361234" elapsed="0.000343"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:46:50.360955" elapsed="0.000696"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:46:50.362012" level="INFO">üîç Validating disk space allocation: EDS vs Server...</msg>
<arg>üîç Validating disk space allocation: EDS vs Server...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:46:50.361903" elapsed="0.000196"/>
</kw>
<kw name="Get Disk Space Information From Server" owner="storage_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:46:50.362647" level="INFO">üíæ Collecting disk space information from server...</msg>
<arg>üíæ Collecting disk space information from server...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:46:50.362514" elapsed="0.000216"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:46:50.362932" level="INFO">Executing command 'df -h'.</msg>
<msg time="2025-10-05T15:46:50.390867" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:46:50.391107" level="INFO">${df_output} = Filesystem      Size  Used Avail Use% Mounted on
none            3.9G     0  3.9G   0% /usr/lib/modules/6.6.87.2-microsoft-standard-WSL2
none            3.9G  4.0K  3.9G   1% /mnt/wsl
drivers         ...</msg>
<var>${df_output}</var>
<arg>df -h</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:46:50.362843" elapsed="0.028893"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:46:50.392162" level="INFO">Executing command 'lsblk'.</msg>
<msg time="2025-10-05T15:46:50.453972" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:46:50.454276" level="INFO">${lsblk_output} = NAME MAJ:MIN RM   SIZE RO TYPE MOUNTPOINTS
sda    8:0    0 388.4M  1 disk 
sdb    8:16   0   186M  1 disk 
sdc    8:32   0     2G  0 disk [SWAP]
sdd    8:48   0     1T  0 disk /mnt/wslg/distro
       ...</msg>
<var>${lsblk_output}</var>
<arg>lsblk</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:46:50.392010" elapsed="0.062307"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:46:50.454740" level="INFO">Executing command 'sudo fdisk -l 2&gt;/dev/null || fdisk -l 2&gt;/dev/null || echo "fdisk requires elevated privileges"'.</msg>
<msg time="2025-10-05T15:47:10.616409" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:47:10.617066" level="INFO">${fdisk_output} = </msg>
<var>${fdisk_output}</var>
<arg>sudo fdisk -l 2&gt;/dev/null || fdisk -l 2&gt;/dev/null || echo "fdisk requires elevated privileges"</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:46:50.454573" elapsed="20.162556"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:47:10.618220" level="INFO">Executing command 'mount | grep -E "^/"'.</msg>
<msg time="2025-10-05T15:47:10.683731" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:47:10.684204" level="INFO">${mount_output} = /dev/sdd on / type ext4 (rw,relatime,discard,errors=remount-ro,data=ordered)
/dev/sdd on /mnt/wslg/distro type ext4 (ro,relatime,discard,errors=remount-ro,data=ordered)</msg>
<var>${mount_output}</var>
<arg>mount | grep -E "^/"</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:47:10.617821" elapsed="0.066446"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:47:10.684893" level="INFO">Executing command 'df -h / | tail -1'.</msg>
<msg time="2025-10-05T15:47:10.735021" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:47:10.735415" level="INFO">${root_df_output} = /dev/sdd       1007G  7.5G  949G   1% /</msg>
<var>${root_df_output}</var>
<arg>df -h / | tail -1</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:47:10.684614" elapsed="0.050852"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:47:10.736109" level="INFO">Executing command 'df -h / | tail -1 | awk '{print $2}''.</msg>
<msg time="2025-10-05T15:47:10.786017" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:47:10.786320" level="INFO">${root_size} = 1007G</msg>
<var>${root_size}</var>
<arg>df -h / | tail -1 | awk '{print $2}'</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:47:10.735851" elapsed="0.050500"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:47:10.786755" level="INFO">Executing command 'df -h / | tail -1 | awk '{print $3}''.</msg>
<msg time="2025-10-05T15:47:10.850868" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:47:10.851159" level="INFO">${root_used} = 7.5G</msg>
<var>${root_used}</var>
<arg>df -h / | tail -1 | awk '{print $3}'</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:47:10.786593" elapsed="0.064606"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:47:10.851798" level="INFO">Executing command 'df -h / | tail -1 | awk '{print $4}''.</msg>
<msg time="2025-10-05T15:47:10.911670" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:47:10.911992" level="INFO">${root_available} = 949G</msg>
<var>${root_available}</var>
<arg>df -h / | tail -1 | awk '{print $4}'</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:47:10.851581" elapsed="0.060461"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:47:10.912648" level="INFO">Executing command 'df -h / | tail -1 | awk '{print $5}''.</msg>
<msg time="2025-10-05T15:47:10.970293" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:47:10.970634" level="INFO">${root_usage_percent} = 1%</msg>
<var>${root_usage_percent}</var>
<arg>df -h / | tail -1 | awk '{print $5}'</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:47:10.912418" elapsed="0.058266"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:47:10.971398" level="INFO">Executing command 'sudo vgs 2&gt;/dev/null || vgs 2&gt;/dev/null || echo "Volume group information not available or requires privileges"'.</msg>
<msg time="2025-10-05T15:47:34.019253" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:47:34.019833" level="INFO">${vg_output} = Volume group information not available or requires privileges</msg>
<var>${vg_output}</var>
<arg>sudo vgs 2&gt;/dev/null || vgs 2&gt;/dev/null || echo "Volume group information not available or requires privileges"</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:47:10.971159" elapsed="23.048726"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:47:34.020747" level="INFO">Executing command 'sudo lvs 2&gt;/dev/null || lvs 2&gt;/dev/null || echo "Logical volume information not available or requires privileges"'.</msg>
<msg time="2025-10-05T15:47:56.990519" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:47:56.990965" level="INFO">${lv_output} = Logical volume information not available or requires privileges</msg>
<var>${lv_output}</var>
<arg>sudo lvs 2&gt;/dev/null || lvs 2&gt;/dev/null || echo "Logical volume information not available or requires privileges"</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:47:34.020353" elapsed="22.970707"/>
</kw>
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:47:56.992470" level="INFO">${timestamp} = 20251005_154756</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:47:56.991595" elapsed="0.000942"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:47:56.993543" level="INFO">${disk_file} = results/test5_disk_space_validation/data/disk_space_information_20251005_154756.txt</msg>
<var>${disk_file}</var>
<arg>${DATA_DIR}/disk_space_information_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:47:56.992873" elapsed="0.000723"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:47:56.995002" level="INFO">${disk_data} = === Disk Space Information Report ===
Timestamp: 20251005_154756
Target Server: alhxvdvitap01 (172.30.16.186)

=== Disk Usage Summary (df -h) ===
Filesystem      Size  Used Avail Use% Mounted on
none ...</msg>
<var>${disk_data}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Disk Space Information Report ===</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>=== Disk Usage Summary (df -h) ===</arg>
<arg>${df_output}</arg>
<arg>=== Block Device Information (lsblk) ===</arg>
<arg>${lsblk_output}</arg>
<arg>=== Root Filesystem Details ===</arg>
<arg>Total Size: ${root_size}</arg>
<arg>Used Space: ${root_used}</arg>
<arg>Available Space: ${root_available}</arg>
<arg>Usage Percentage: ${root_usage_percent}</arg>
<arg>=== Mount Points ===</arg>
<arg>${mount_output}</arg>
<arg>=== Volume Group Information ===</arg>
<arg>${vg_output}</arg>
<arg>=== Logical Volume Information ===</arg>
<arg>${lv_output}</arg>
<arg>=== Partition Information (fdisk -l) ===</arg>
<arg>${fdisk_output}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:47:56.993814" elapsed="0.001240"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:47:57.006950" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test5_disk_space_validation/data/disk_space_information_20251005_154756.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test5_disk_space_validation/data/disk_space_information_20251005_154756.txt&lt;/a&gt;'.</msg>
<arg>${disk_file}</arg>
<arg>${disk_data}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:47:56.996376" elapsed="0.010788"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:47:57.007958" level="INFO">üìÑ Disk space information saved to: results/test5_disk_space_validation/data/disk_space_information_20251005_154756.txt</msg>
<arg>üìÑ Disk space information saved to: ${disk_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:47:57.007562" elapsed="0.000632"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:47:57.009082" level="INFO">üíæ Root filesystem: 1007G total, 7.5G used, 949G available (1% used)</msg>
<arg>üíæ Root filesystem: ${root_size} total, ${root_used} used, ${root_available} available (${root_usage_percent} used)</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:47:57.008526" elapsed="0.000944"/>
</kw>
<return>
<value>${root_size}</value>
<status status="PASS" start="2025-10-05T15:47:57.009637" elapsed="0.000375"/>
</return>
<msg time="2025-10-05T15:47:57.010328" level="INFO">${actual_root_size} = 1007G</msg>
<var>${actual_root_size}</var>
<doc>üíæ Collect comprehensive disk space information from server</doc>
<status status="PASS" start="2025-10-05T15:46:50.362314" elapsed="66.648062"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:47:57.011037" level="INFO">üìã EDS Expected Storage Allocation: 20 GB</msg>
<arg>üìã EDS Expected Storage Allocation: ${TARGET_STORAGE_ALLOC_GB} GB</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:47:57.010605" elapsed="0.000678"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:47:57.011941" level="INFO">üìã EDS Recommended Storage: 20 GB</msg>
<arg>üìã EDS Recommended Storage: ${TARGET_RECOMMENDED_GB} GB</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:47:57.011612" elapsed="0.000545"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:47:57.012814" level="INFO">üíæ Server Root Filesystem Size: 1007G</msg>
<arg>üíæ Server Root Filesystem Size: ${actual_root_size}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:47:57.012487" elapsed="0.000822"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:47:57.014124" level="INFO">‚ÑπÔ∏è Disk space validation: Root=1007G, Expected=20GB</msg>
<arg>‚ÑπÔ∏è Disk space validation: Root=${actual_root_size}, Expected=${TARGET_STORAGE_ALLOC_GB}GB</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:47:57.013679" elapsed="0.000684"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:47:57.015005" level="INFO">‚úÖ Disk space allocation: LOGGED for compliance review</msg>
<arg>‚úÖ Disk space allocation: LOGGED for compliance review</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:47:57.014719" elapsed="0.000546"/>
</kw>
<kw name="Log Test End" owner="storage_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:47:57.017941" level="INFO">‚úÖ Completed: Critical - Disk Space Allocation Validation - PASS</msg>
<arg>‚úÖ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:47:57.016826" elapsed="0.001300"/>
</kw>
<status status="PASS" start="2025-10-05T15:47:57.016478" elapsed="0.001751"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>‚ùå Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:47:57.018485" elapsed="0.000031"/>
</kw>
<status status="NOT RUN" start="2025-10-05T15:47:57.018305" elapsed="0.000263"/>
</branch>
<status status="PASS" start="2025-10-05T15:47:57.016444" elapsed="0.002155"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case</doc>
<status status="PASS" start="2025-10-05T15:47:57.016008" elapsed="0.002668"/>
</kw>
<doc>üíæ SSH to server and validate disk space allocation against EDS requirements</doc>
<tag>compliance</tag>
<tag>critical</tag>
<tag>disk</tag>
<tag>storage</tag>
<status status="PASS" start="2025-10-05T15:46:50.360365" elapsed="66.658373"/>
</test>
<test id="s1-s8-t4" name="Critical - Storage Type Validation" line="70">
<kw name="Log Test Start" owner="storage_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:47:57.021719" level="INFO">üèÅ Starting: Critical - Storage Type Validation</msg>
<arg>üèÅ Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:47:57.021348" elapsed="0.000538"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:47:57.020350" elapsed="0.001678"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:47:57.022400" level="INFO">üîç Validating storage type: EDS vs Server...</msg>
<arg>üîç Validating storage type: EDS vs Server...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:47:57.022214" elapsed="0.000338"/>
</kw>
<kw name="Get Storage Type From Server" owner="storage_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:47:57.023333" level="INFO">üì° Identifying storage type from server...</msg>
<arg>üì° Identifying storage type from server...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:47:57.023202" elapsed="0.000250"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:47:57.023739" level="INFO">Executing command 'lsblk -o NAME,TYPE,FSTYPE,SIZE,MOUNTPOINT'.</msg>
<msg time="2025-10-05T15:47:57.052670" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:47:57.053059" level="INFO">${storage_info} = NAME TYPE FSTYPE   SIZE MOUNTPOINT
sda  disk ext4   388.4M 
sdb  disk ext4     186M 
sdc  disk swap       2G [SWAP]
sdd  disk ext4       1T /mnt/wslg/distro</msg>
<var>${storage_info}</var>
<arg>lsblk -o NAME,TYPE,FSTYPE,SIZE,MOUNTPOINT</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:47:57.023612" elapsed="0.029637"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:47:57.054726" level="INFO">Executing command 'ls /sys/class/scsi_host/ 2&gt;/dev/null | wc -l || echo "0"'.</msg>
<msg time="2025-10-05T15:47:57.109423" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:47:57.109793" level="INFO">${scsi_info} = 1</msg>
<var>${scsi_info}</var>
<arg>ls /sys/class/scsi_host/ 2&gt;/dev/null | wc -l || echo "0"</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:47:57.054517" elapsed="0.055367"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:47:57.110502" level="INFO">Executing command 'ls /dev/nvme* 2&gt;/dev/null | wc -l || echo "0"'.</msg>
<msg time="2025-10-05T15:47:57.170003" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:47:57.170489" level="INFO">${nvme_info} = 0</msg>
<var>${nvme_info}</var>
<arg>ls /dev/nvme* 2&gt;/dev/null | wc -l || echo "0"</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:47:57.110274" elapsed="0.060273"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:47:57.171155" level="INFO">Executing command 'ls /sys/block/ | grep -E "(vd|xvd)" | wc -l || echo "0"'.</msg>
<msg time="2025-10-05T15:47:57.226272" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:47:57.226659" level="INFO">${virt_info} = 0</msg>
<var>${virt_info}</var>
<arg>ls /sys/block/ | grep -E "(vd|xvd)" | wc -l || echo "0"</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:47:57.170914" elapsed="0.055801"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:47:57.227520" level="INFO">${storage_type} = Unknown</msg>
<var>${storage_type}</var>
<arg>Unknown</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:47:57.227198" elapsed="0.000374"/>
</kw>
<if>
<branch type="IF" condition="&quot;${nvme_info}&quot; != &quot;0&quot;">
<kw name="Set Variable" owner="BuiltIn">
<var>${storage_type}</var>
<arg>NVMe</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-10-05T15:47:57.228355" elapsed="0.000045"/>
</kw>
<status status="NOT RUN" start="2025-10-05T15:47:57.227870" elapsed="0.000604"/>
</branch>
<branch type="ELSE IF" condition="&quot;${virt_info}&quot; != &quot;0&quot;">
<kw name="Set Variable" owner="BuiltIn">
<var>${storage_type}</var>
<arg>Virtual/Cloud</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-10-05T15:47:57.229292" elapsed="0.000070"/>
</kw>
<status status="NOT RUN" start="2025-10-05T15:47:57.228689" elapsed="0.000791"/>
</branch>
<branch type="ELSE IF" condition="&quot;${scsi_info}&quot; != &quot;0&quot;">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:47:57.230283" level="INFO">${storage_type} = SCSI/SAN</msg>
<var>${storage_type}</var>
<arg>SCSI/SAN</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:47:57.230024" elapsed="0.000309"/>
</kw>
<status status="PASS" start="2025-10-05T15:47:57.229552" elapsed="0.000848"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" owner="BuiltIn">
<var>${storage_type}</var>
<arg>Local/Other</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-10-05T15:47:57.230626" elapsed="0.000572"/>
</kw>
<status status="NOT RUN" start="2025-10-05T15:47:57.230450" elapsed="0.001024"/>
</branch>
<status status="PASS" start="2025-10-05T15:47:57.227817" elapsed="0.003737"/>
</if>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:47:57.232345" level="INFO">üì° Detected storage type: SCSI/SAN</msg>
<arg>üì° Detected storage type: ${storage_type}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:47:57.231895" elapsed="0.000687"/>
</kw>
<return>
<value>${storage_type}</value>
<status status="PASS" start="2025-10-05T15:47:57.232734" elapsed="0.000184"/>
</return>
<msg time="2025-10-05T15:47:57.233823" level="INFO">${actual_storage_type} = SCSI/SAN</msg>
<var>${actual_storage_type}</var>
<doc>üì° Identify storage type from server</doc>
<status status="PASS" start="2025-10-05T15:47:57.022950" elapsed="0.210930"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:47:57.234605" level="INFO">üìã EDS Expected Storage Type: VSAN</msg>
<arg>üìã EDS Expected Storage Type: ${TARGET_STORAGE_TYPE}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:47:57.234121" elapsed="0.000709"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:47:57.235594" level="INFO">üì° Server Detected Storage Type: SCSI/SAN</msg>
<arg>üì° Server Detected Storage Type: ${actual_storage_type}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:47:57.235186" elapsed="0.000669"/>
</kw>
<kw name="Validate Storage Type Against EDS" owner="storage_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:47:57.237675" level="INFO">üîç Validating storage type: EDS vs Server...</msg>
<arg>üîç Validating storage type: EDS vs Server...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:47:57.237415" elapsed="0.000463"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:47:57.238498" level="INFO">üìã EDS Expected: VSAN</msg>
<arg>üìã EDS Expected: ${TARGET_STORAGE_TYPE}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:47:57.238134" elapsed="0.000640"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:47:57.239465" level="INFO">üì° Server Detected: SCSI/SAN</msg>
<arg>üì° Server Detected: ${actual_storage_type}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:47:57.239089" elapsed="0.000601"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:47:57.240318" level="INFO">‚ÑπÔ∏è Storage type comparison: EDS 'VSAN' vs Server 'SCSI/SAN'</msg>
<arg>‚ÑπÔ∏è Storage type comparison: EDS '${TARGET_STORAGE_TYPE}' vs Server '${actual_storage_type}'</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:47:57.239952" elapsed="0.000576"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:47:57.241498" level="INFO">‚úÖ Storage type validation: INFORMATIONAL - Logged for review</msg>
<arg>‚úÖ Storage type validation: INFORMATIONAL - Logged for review</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:47:57.240917" elapsed="0.000767"/>
</kw>
<arg>${actual_storage_type}</arg>
<doc>üì° Validate storage type matches EDS expectation</doc>
<status status="PASS" start="2025-10-05T15:47:57.236346" elapsed="0.005548"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:47:57.242327" level="INFO">‚úÖ Storage type validation: INFORMATIONAL - Logged for review</msg>
<arg>‚úÖ Storage type validation: INFORMATIONAL - Logged for review</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:47:57.242113" elapsed="0.000388"/>
</kw>
<kw name="Log Test End" owner="storage_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:47:57.245663" level="INFO">‚úÖ Completed: Critical - Storage Type Validation - PASS</msg>
<arg>‚úÖ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:47:57.244858" elapsed="0.000986"/>
</kw>
<status status="PASS" start="2025-10-05T15:47:57.243590" elapsed="0.002336"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>‚ùå Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:47:57.246194" elapsed="0.000036"/>
</kw>
<status status="NOT RUN" start="2025-10-05T15:47:57.245975" elapsed="0.000314"/>
</branch>
<status status="PASS" start="2025-10-05T15:47:57.243558" elapsed="0.002768"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case</doc>
<status status="PASS" start="2025-10-05T15:47:57.243100" elapsed="0.003310"/>
</kw>
<doc>üì° SSH to server and validate storage infrastructure matches EDS specification</doc>
<tag>compliance</tag>
<tag>critical</tag>
<tag>infrastructure</tag>
<tag>storage</tag>
<status status="PASS" start="2025-10-05T15:47:57.019477" elapsed="0.227001"/>
</test>
<test id="s1-s8-t5" name="Critical - Root Filesystem Validation" line="87">
<kw name="Log Test Start" owner="storage_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:47:57.249261" level="INFO">üèÅ Starting: Critical - Root Filesystem Validation</msg>
<arg>üèÅ Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:47:57.248296" elapsed="0.001143"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:47:57.247856" elapsed="0.001698"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:47:57.249947" level="INFO">üîç Validating root filesystem configuration: EDS vs Server...</msg>
<arg>üîç Validating root filesystem configuration: EDS vs Server...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:47:57.249756" elapsed="0.000334"/>
</kw>
<kw name="Get Filesystem Information From Server" owner="storage_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:47:57.250963" level="INFO">üóÇÔ∏è Collecting filesystem information from server...</msg>
<arg>üóÇÔ∏è Collecting filesystem information from server...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:47:57.250780" elapsed="0.000324"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:47:57.251521" level="INFO">Executing command 'df -T / | tail -1 | awk '{print $2}''.</msg>
<msg time="2025-10-05T15:47:57.285658" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:47:57.286047" level="INFO">${root_fs_type} = ext4</msg>
<var>${root_fs_type}</var>
<arg>df -T / | tail -1 | awk '{print $2}'</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:47:57.251289" elapsed="0.034808"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:47:57.286729" level="INFO">Executing command 'df / | tail -1 | awk '{print $1}''.</msg>
<msg time="2025-10-05T15:47:57.345694" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:47:57.346283" level="INFO">${root_mount} = /dev/sdd</msg>
<var>${root_mount}</var>
<arg>df / | tail -1 | awk '{print $1}'</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:47:57.286444" elapsed="0.059938"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:47:57.347431" level="INFO">Executing command 'df -T | tail -n +2'.</msg>
<msg time="2025-10-05T15:47:57.406853" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:47:57.407199" level="INFO">${fs_types_output} = none           overlay    4025456         0   4025456   0% /usr/lib/modules/6.6.87.2-microsoft-standard-WSL2
none           tmpfs      4025456         4   4025452   1% /mnt/wsl
drivers        9p      ...</msg>
<var>${fs_types_output}</var>
<arg>df -T | tail -n +2</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:47:57.347049" elapsed="0.060201"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:47:57.408022" level="INFO">üóÇÔ∏è Root filesystem type: ext4</msg>
<arg>üóÇÔ∏è Root filesystem type: ${root_fs_type}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:47:57.407571" elapsed="0.000696"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:47:57.408852" level="INFO">üóÇÔ∏è Root mounted from: /dev/sdd</msg>
<arg>üóÇÔ∏è Root mounted from: ${root_mount}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:47:57.408535" elapsed="0.000657"/>
</kw>
<return>
<value>${root_fs_type}</value>
<status status="PASS" start="2025-10-05T15:47:57.409364" elapsed="0.000119"/>
</return>
<msg time="2025-10-05T15:47:57.409850" level="INFO">${actual_fs_type} = ext4</msg>
<var>${actual_fs_type}</var>
<doc>üóÇÔ∏è Collect filesystem information from server</doc>
<status status="PASS" start="2025-10-05T15:47:57.250396" elapsed="0.159511"/>
</kw>
<kw name="Get Disk Space Information From Server" owner="storage_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:47:57.411130" level="INFO">üíæ Collecting disk space information from server...</msg>
<arg>üíæ Collecting disk space information from server...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:47:57.410918" elapsed="0.000412"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:47:57.411810" level="INFO">Executing command 'df -h'.</msg>
<msg time="2025-10-05T15:47:57.470201" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:47:57.470565" level="INFO">${df_output} = Filesystem      Size  Used Avail Use% Mounted on
none            3.9G     0  3.9G   0% /usr/lib/modules/6.6.87.2-microsoft-standard-WSL2
none            3.9G  4.0K  3.9G   1% /mnt/wsl
drivers         ...</msg>
<var>${df_output}</var>
<arg>df -h</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:47:57.411638" elapsed="0.058982"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:47:57.471315" level="INFO">Executing command 'lsblk'.</msg>
<msg time="2025-10-05T15:47:57.529999" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:47:57.530462" level="INFO">${lsblk_output} = NAME MAJ:MIN RM   SIZE RO TYPE MOUNTPOINTS
sda    8:0    0 388.4M  1 disk 
sdb    8:16   0   186M  1 disk 
sdc    8:32   0     2G  0 disk [SWAP]
sdd    8:48   0     1T  0 disk /mnt/wslg/distro
       ...</msg>
<var>${lsblk_output}</var>
<arg>lsblk</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:47:57.471070" elapsed="0.059480"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:47:57.531522" level="INFO">Executing command 'sudo fdisk -l 2&gt;/dev/null || fdisk -l 2&gt;/dev/null || echo "fdisk requires elevated privileges"'.</msg>
<msg time="2025-10-05T15:48:17.665378" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:48:17.665908" level="INFO">${fdisk_output} = </msg>
<var>${fdisk_output}</var>
<arg>sudo fdisk -l 2&gt;/dev/null || fdisk -l 2&gt;/dev/null || echo "fdisk requires elevated privileges"</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:47:57.531075" elapsed="20.134879"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:48:17.667629" level="INFO">Executing command 'mount | grep -E "^/"'.</msg>
<msg time="2025-10-05T15:48:17.720187" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:48:17.720648" level="INFO">${mount_output} = /dev/sdd on / type ext4 (rw,relatime,discard,errors=remount-ro,data=ordered)
/dev/sdd on /mnt/wslg/distro type ext4 (ro,relatime,discard,errors=remount-ro,data=ordered)</msg>
<var>${mount_output}</var>
<arg>mount | grep -E "^/"</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:48:17.667354" elapsed="0.053376"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:48:17.721737" level="INFO">Executing command 'df -h / | tail -1'.</msg>
<msg time="2025-10-05T15:48:17.775891" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:48:17.776318" level="INFO">${root_df_output} = /dev/sdd       1007G  7.5G  949G   1% /</msg>
<var>${root_df_output}</var>
<arg>df -h / | tail -1</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:48:17.721420" elapsed="0.054956"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:48:17.777530" level="INFO">Executing command 'df -h / | tail -1 | awk '{print $2}''.</msg>
<msg time="2025-10-05T15:48:17.842976" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:48:17.843337" level="INFO">${root_size} = 1007G</msg>
<var>${root_size}</var>
<arg>df -h / | tail -1 | awk '{print $2}'</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:48:17.776783" elapsed="0.066619"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:48:17.843991" level="INFO">Executing command 'df -h / | tail -1 | awk '{print $3}''.</msg>
<msg time="2025-10-05T15:48:17.901425" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:48:17.901763" level="INFO">${root_used} = 7.5G</msg>
<var>${root_used}</var>
<arg>df -h / | tail -1 | awk '{print $3}'</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:48:17.843743" elapsed="0.058062"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:48:17.902442" level="INFO">Executing command 'df -h / | tail -1 | awk '{print $4}''.</msg>
<msg time="2025-10-05T15:48:17.961492" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:48:17.961858" level="INFO">${root_available} = 949G</msg>
<var>${root_available}</var>
<arg>df -h / | tail -1 | awk '{print $4}'</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:48:17.902112" elapsed="0.059796"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:48:17.962634" level="INFO">Executing command 'df -h / | tail -1 | awk '{print $5}''.</msg>
<msg time="2025-10-05T15:48:18.022799" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:48:18.023791" level="INFO">${root_usage_percent} = 1%</msg>
<var>${root_usage_percent}</var>
<arg>df -h / | tail -1 | awk '{print $5}'</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:48:17.962269" elapsed="0.061715"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:48:18.025624" level="INFO">Executing command 'sudo vgs 2&gt;/dev/null || vgs 2&gt;/dev/null || echo "Volume group information not available or requires privileges"'.</msg>
<msg time="2025-10-05T15:48:41.090471" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:48:41.090846" level="INFO">${vg_output} = Volume group information not available or requires privileges</msg>
<var>${vg_output}</var>
<arg>sudo vgs 2&gt;/dev/null || vgs 2&gt;/dev/null || echo "Volume group information not available or requires privileges"</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:48:18.024677" elapsed="23.066224"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:48:41.091509" level="INFO">Executing command 'sudo lvs 2&gt;/dev/null || lvs 2&gt;/dev/null || echo "Logical volume information not available or requires privileges"'.</msg>
<msg time="2025-10-05T15:49:03.895849" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:49:03.896263" level="INFO">${lv_output} = Logical volume information not available or requires privileges</msg>
<var>${lv_output}</var>
<arg>sudo lvs 2&gt;/dev/null || lvs 2&gt;/dev/null || echo "Logical volume information not available or requires privileges"</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:48:41.091272" elapsed="22.805051"/>
</kw>
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:49:03.897273" level="INFO">${timestamp} = 20251005_154903</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:49:03.896710" elapsed="0.000750"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:49:03.898999" level="INFO">${disk_file} = results/test5_disk_space_validation/data/disk_space_information_20251005_154903.txt</msg>
<var>${disk_file}</var>
<arg>${DATA_DIR}/disk_space_information_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:49:03.898463" elapsed="0.000605"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:49:03.900751" level="INFO">${disk_data} = === Disk Space Information Report ===
Timestamp: 20251005_154903
Target Server: alhxvdvitap01 (172.30.16.186)

=== Disk Usage Summary (df -h) ===
Filesystem      Size  Used Avail Use% Mounted on
none ...</msg>
<var>${disk_data}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Disk Space Information Report ===</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>=== Disk Usage Summary (df -h) ===</arg>
<arg>${df_output}</arg>
<arg>=== Block Device Information (lsblk) ===</arg>
<arg>${lsblk_output}</arg>
<arg>=== Root Filesystem Details ===</arg>
<arg>Total Size: ${root_size}</arg>
<arg>Used Space: ${root_used}</arg>
<arg>Available Space: ${root_available}</arg>
<arg>Usage Percentage: ${root_usage_percent}</arg>
<arg>=== Mount Points ===</arg>
<arg>${mount_output}</arg>
<arg>=== Volume Group Information ===</arg>
<arg>${vg_output}</arg>
<arg>=== Logical Volume Information ===</arg>
<arg>${lv_output}</arg>
<arg>=== Partition Information (fdisk -l) ===</arg>
<arg>${fdisk_output}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:49:03.899412" elapsed="0.001402"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:49:03.915835" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test5_disk_space_validation/data/disk_space_information_20251005_154903.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test5_disk_space_validation/data/disk_space_information_20251005_154903.txt&lt;/a&gt;'.</msg>
<arg>${disk_file}</arg>
<arg>${disk_data}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:49:03.901296" elapsed="0.014776"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:49:03.917675" level="INFO">üìÑ Disk space information saved to: results/test5_disk_space_validation/data/disk_space_information_20251005_154903.txt</msg>
<arg>üìÑ Disk space information saved to: ${disk_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:49:03.916440" elapsed="0.001462"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:49:03.918917" level="INFO">üíæ Root filesystem: 1007G total, 7.5G used, 949G available (1% used)</msg>
<arg>üíæ Root filesystem: ${root_size} total, ${root_used} used, ${root_available} available (${root_usage_percent} used)</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:49:03.918367" elapsed="0.000745"/>
</kw>
<return>
<value>${root_size}</value>
<status status="PASS" start="2025-10-05T15:49:03.919256" elapsed="0.000141"/>
</return>
<msg time="2025-10-05T15:49:03.919769" level="INFO">${actual_root_size} = 1007G</msg>
<var>${actual_root_size}</var>
<doc>üíæ Collect comprehensive disk space information from server</doc>
<status status="PASS" start="2025-10-05T15:47:57.410493" elapsed="66.509330"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:49:03.920394" level="INFO">üìã EDS Expected Mount Point: /</msg>
<arg>üìã EDS Expected Mount Point: ${TARGET_LOGICAL_VOLUME}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:49:03.920046" elapsed="0.000579"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:49:03.921250" level="INFO">üìã EDS Expected File System: /dev/mapper/rootvg-rootlv</msg>
<arg>üìã EDS Expected File System: ${TARGET_FILE_SYSTEM}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:49:03.920945" elapsed="0.000499"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:49:03.922122" level="INFO">üóÇÔ∏è Server Root Filesystem Type: ext4</msg>
<arg>üóÇÔ∏è Server Root Filesystem Type: ${actual_fs_type}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:49:03.921705" elapsed="0.000708"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:49:03.923108" level="INFO">üóÇÔ∏è Server Root Mount Size: 1007G</msg>
<arg>üóÇÔ∏è Server Root Mount Size: ${actual_root_size}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:49:03.922755" elapsed="0.000582"/>
</kw>
<kw name="Validate Root Filesystem Against EDS" owner="storage_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:49:03.924683" level="INFO">üîç Validating root filesystem: EDS vs Server...</msg>
<arg>üîç Validating root filesystem: EDS vs Server...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:49:03.924509" elapsed="0.000329"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:49:03.925334" level="INFO">üìã EDS Expected Mount: /</msg>
<arg>üìã EDS Expected Mount: ${TARGET_LOGICAL_VOLUME}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:49:03.925030" elapsed="0.000463"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:49:03.925894" level="INFO">üìã EDS Expected Storage: 20 GB</msg>
<arg>üìã EDS Expected Storage: ${TARGET_STORAGE_ALLOC_GB} GB</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:49:03.925680" elapsed="0.000456"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:49:03.927421" level="INFO">üóÇÔ∏è Server Filesystem: ext4</msg>
<arg>üóÇÔ∏è Server Filesystem: ${actual_fs_type}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:49:03.927122" elapsed="0.000537"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:49:03.928090" level="INFO">üóÇÔ∏è Server Root Size: 1007G</msg>
<arg>üóÇÔ∏è Server Root Size: ${actual_root_size}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:49:03.927859" elapsed="0.000389"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:49:03.928833" level="INFO">‚ÑπÔ∏è Filesystem validation: Type=ext4, Size=1007G</msg>
<arg>‚ÑπÔ∏è Filesystem validation: Type=${actual_fs_type}, Size=${actual_root_size}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:49:03.928447" elapsed="0.000540"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:49:03.929397" level="INFO">‚úÖ Filesystem validation: LOGGED for compliance review</msg>
<arg>‚úÖ Filesystem validation: LOGGED for compliance review</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:49:03.929227" elapsed="0.000316"/>
</kw>
<arg>${actual_fs_type}</arg>
<arg>${actual_root_size}</arg>
<doc>üóÇÔ∏è Validate root filesystem configuration against EDS</doc>
<status status="PASS" start="2025-10-05T15:49:03.923657" elapsed="0.006021"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:49:03.930489" level="INFO">‚úÖ Root filesystem validation: LOGGED for compliance review</msg>
<arg>‚úÖ Root filesystem validation: LOGGED for compliance review</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:49:03.929911" elapsed="0.000740"/>
</kw>
<kw name="Log Test End" owner="storage_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:49:03.931867" level="INFO">‚úÖ Completed: Critical - Root Filesystem Validation - PASS</msg>
<arg>‚úÖ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:49:03.931673" elapsed="0.000360"/>
</kw>
<status status="PASS" start="2025-10-05T15:49:03.931380" elapsed="0.000712"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>‚ùå Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:49:03.932250" elapsed="0.000021"/>
</kw>
<status status="NOT RUN" start="2025-10-05T15:49:03.932125" elapsed="0.000182"/>
</branch>
<status status="PASS" start="2025-10-05T15:49:03.931355" elapsed="0.000974"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case</doc>
<status status="PASS" start="2025-10-05T15:49:03.931045" elapsed="0.001338"/>
</kw>
<doc>üóÇÔ∏è SSH to server and validate root filesystem configuration against EDS</doc>
<tag>compliance</tag>
<tag>critical</tag>
<tag>filesystem</tag>
<tag>storage</tag>
<status status="PASS" start="2025-10-05T15:47:57.246969" elapsed="66.685457"/>
</test>
<test id="s1-s8-t6" name="Normal - Storage Capacity Analysis" line="107">
<kw name="Log Test Start" owner="storage_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:49:03.933866" level="INFO">üèÅ Starting: Normal - Storage Capacity Analysis</msg>
<arg>üèÅ Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:49:03.933679" elapsed="0.000308"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:49:03.933354" elapsed="0.000999"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:49:03.934743" level="INFO">üîç Performing storage capacity analysis...</msg>
<arg>üîç Performing storage capacity analysis...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:49:03.934586" elapsed="0.000277"/>
</kw>
<kw name="Get Disk Space Information From Server" owner="storage_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:49:03.936003" level="INFO">üíæ Collecting disk space information from server...</msg>
<arg>üíæ Collecting disk space information from server...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:49:03.935870" elapsed="0.000248"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:49:03.936445" level="INFO">Executing command 'df -h'.</msg>
<msg time="2025-10-05T15:49:03.948692" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:49:03.948943" level="INFO">${df_output} = Filesystem      Size  Used Avail Use% Mounted on
none            3.9G     0  3.9G   0% /usr/lib/modules/6.6.87.2-microsoft-standard-WSL2
none            3.9G  4.0K  3.9G   1% /mnt/wsl
drivers         ...</msg>
<var>${df_output}</var>
<arg>df -h</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:49:03.936325" elapsed="0.012647"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:49:03.949326" level="INFO">Executing command 'lsblk'.</msg>
<msg time="2025-10-05T15:49:04.010734" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:49:04.011000" level="INFO">${lsblk_output} = NAME MAJ:MIN RM   SIZE RO TYPE MOUNTPOINTS
sda    8:0    0 388.4M  1 disk 
sdb    8:16   0   186M  1 disk 
sdc    8:32   0     2G  0 disk [SWAP]
sdd    8:48   0     1T  0 disk /mnt/wslg/distro
       ...</msg>
<var>${lsblk_output}</var>
<arg>lsblk</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:49:03.949183" elapsed="0.061851"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:49:04.011586" level="INFO">Executing command 'sudo fdisk -l 2&gt;/dev/null || fdisk -l 2&gt;/dev/null || echo "fdisk requires elevated privileges"'.</msg>
<msg time="2025-10-05T15:49:24.146398" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:49:24.146934" level="INFO">${fdisk_output} = </msg>
<var>${fdisk_output}</var>
<arg>sudo fdisk -l 2&gt;/dev/null || fdisk -l 2&gt;/dev/null || echo "fdisk requires elevated privileges"</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:49:04.011337" elapsed="20.135659"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:49:24.147646" level="INFO">Executing command 'mount | grep -E "^/"'.</msg>
<msg time="2025-10-05T15:49:24.207136" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:49:24.207577" level="INFO">${mount_output} = /dev/sdd on / type ext4 (rw,relatime,discard,errors=remount-ro,data=ordered)
/dev/sdd on /mnt/wslg/distro type ext4 (ro,relatime,discard,errors=remount-ro,data=ordered)</msg>
<var>${mount_output}</var>
<arg>mount | grep -E "^/"</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:49:24.147353" elapsed="0.060306"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:49:24.208258" level="INFO">Executing command 'df -h / | tail -1'.</msg>
<msg time="2025-10-05T15:49:24.252058" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:49:24.252438" level="INFO">${root_df_output} = /dev/sdd       1007G  7.5G  949G   1% /</msg>
<var>${root_df_output}</var>
<arg>df -h / | tail -1</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:49:24.208030" elapsed="0.044491"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:49:24.253090" level="INFO">Executing command 'df -h / | tail -1 | awk '{print $2}''.</msg>
<msg time="2025-10-05T15:49:24.318688" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:49:24.319049" level="INFO">${root_size} = 1007G</msg>
<var>${root_size}</var>
<arg>df -h / | tail -1 | awk '{print $2}'</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:49:24.252848" elapsed="0.066252"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:49:24.319767" level="INFO">Executing command 'df -h / | tail -1 | awk '{print $3}''.</msg>
<msg time="2025-10-05T15:49:24.384815" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:49:24.385460" level="INFO">${root_used} = 7.5G</msg>
<var>${root_used}</var>
<arg>df -h / | tail -1 | awk '{print $3}'</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:49:24.319440" elapsed="0.066565"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:49:24.387162" level="INFO">Executing command 'df -h / | tail -1 | awk '{print $4}''.</msg>
<msg time="2025-10-05T15:49:24.434488" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:49:24.434710" level="INFO">${root_available} = 949G</msg>
<var>${root_available}</var>
<arg>df -h / | tail -1 | awk '{print $4}'</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:49:24.386884" elapsed="0.047851"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:49:24.435093" level="INFO">Executing command 'df -h / | tail -1 | awk '{print $5}''.</msg>
<msg time="2025-10-05T15:49:24.498500" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:49:24.498793" level="INFO">${root_usage_percent} = 1%</msg>
<var>${root_usage_percent}</var>
<arg>df -h / | tail -1 | awk '{print $5}'</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:49:24.434955" elapsed="0.063876"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:49:24.499363" level="INFO">Executing command 'sudo vgs 2&gt;/dev/null || vgs 2&gt;/dev/null || echo "Volume group information not available or requires privileges"'.</msg>
<msg time="2025-10-05T15:49:47.688407" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:49:47.689201" level="INFO">${vg_output} = Volume group information not available or requires privileges</msg>
<var>${vg_output}</var>
<arg>sudo vgs 2&gt;/dev/null || vgs 2&gt;/dev/null || echo "Volume group information not available or requires privileges"</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:49:24.499120" elapsed="23.190178"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:49:47.691003" level="INFO">Executing command 'sudo lvs 2&gt;/dev/null || lvs 2&gt;/dev/null || echo "Logical volume information not available or requires privileges"'.</msg>
<msg time="2025-10-05T15:50:07.796115" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:50:07.796440" level="INFO">${lv_output} = Logical volume information not available or requires privileges</msg>
<var>${lv_output}</var>
<arg>sudo lvs 2&gt;/dev/null || lvs 2&gt;/dev/null || echo "Logical volume information not available or requires privileges"</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:49:47.690630" elapsed="20.105863"/>
</kw>
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:50:07.797247" level="INFO">${timestamp} = 20251005_155007</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:50:07.796788" elapsed="0.000510"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:50:07.798885" level="INFO">${disk_file} = results/test5_disk_space_validation/data/disk_space_information_20251005_155007.txt</msg>
<var>${disk_file}</var>
<arg>${DATA_DIR}/disk_space_information_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:50:07.798471" elapsed="0.000472"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:50:07.800326" level="INFO">${disk_data} = === Disk Space Information Report ===
Timestamp: 20251005_155007
Target Server: alhxvdvitap01 (172.30.16.186)

=== Disk Usage Summary (df -h) ===
Filesystem      Size  Used Avail Use% Mounted on
none ...</msg>
<var>${disk_data}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Disk Space Information Report ===</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>=== Disk Usage Summary (df -h) ===</arg>
<arg>${df_output}</arg>
<arg>=== Block Device Information (lsblk) ===</arg>
<arg>${lsblk_output}</arg>
<arg>=== Root Filesystem Details ===</arg>
<arg>Total Size: ${root_size}</arg>
<arg>Used Space: ${root_used}</arg>
<arg>Available Space: ${root_available}</arg>
<arg>Usage Percentage: ${root_usage_percent}</arg>
<arg>=== Mount Points ===</arg>
<arg>${mount_output}</arg>
<arg>=== Volume Group Information ===</arg>
<arg>${vg_output}</arg>
<arg>=== Logical Volume Information ===</arg>
<arg>${lv_output}</arg>
<arg>=== Partition Information (fdisk -l) ===</arg>
<arg>${fdisk_output}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:50:07.799192" elapsed="0.001177"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:50:07.822441" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test5_disk_space_validation/data/disk_space_information_20251005_155007.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test5_disk_space_validation/data/disk_space_information_20251005_155007.txt&lt;/a&gt;'.</msg>
<arg>${disk_file}</arg>
<arg>${disk_data}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:50:07.800611" elapsed="0.022019"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:07.823897" level="INFO">üìÑ Disk space information saved to: results/test5_disk_space_validation/data/disk_space_information_20251005_155007.txt</msg>
<arg>üìÑ Disk space information saved to: ${disk_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:07.822949" elapsed="0.001169"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:07.824941" level="INFO">üíæ Root filesystem: 1007G total, 7.5G used, 949G available (1% used)</msg>
<arg>üíæ Root filesystem: ${root_size} total, ${root_used} used, ${root_available} available (${root_usage_percent} used)</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:07.824359" elapsed="0.000750"/>
</kw>
<return>
<value>${root_size}</value>
<status status="PASS" start="2025-10-05T15:50:07.825208" elapsed="0.000080"/>
</return>
<msg time="2025-10-05T15:50:07.825529" level="INFO">${root_size} = 1007G</msg>
<var>${root_size}</var>
<doc>üíæ Collect comprehensive disk space information from server</doc>
<status status="PASS" start="2025-10-05T15:49:03.935601" elapsed="63.889959"/>
</kw>
<kw name="Get Storage Type From Server" owner="storage_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:07.826384" level="INFO">üì° Identifying storage type from server...</msg>
<arg>üì° Identifying storage type from server...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:07.826245" elapsed="0.000253"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:50:07.826769" level="INFO">Executing command 'lsblk -o NAME,TYPE,FSTYPE,SIZE,MOUNTPOINT'.</msg>
<msg time="2025-10-05T15:50:07.859285" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:50:07.859766" level="INFO">${storage_info} = NAME TYPE FSTYPE   SIZE MOUNTPOINT
sda  disk ext4   388.4M 
sdb  disk ext4     186M 
sdc  disk swap       2G [SWAP]
sdd  disk ext4       1T /mnt/wslg/distro</msg>
<var>${storage_info}</var>
<arg>lsblk -o NAME,TYPE,FSTYPE,SIZE,MOUNTPOINT</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:50:07.826640" elapsed="0.033205"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:50:07.860562" level="INFO">Executing command 'ls /sys/class/scsi_host/ 2&gt;/dev/null | wc -l || echo "0"'.</msg>
<msg time="2025-10-05T15:50:07.920222" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:50:07.920566" level="INFO">${scsi_info} = 1</msg>
<var>${scsi_info}</var>
<arg>ls /sys/class/scsi_host/ 2&gt;/dev/null | wc -l || echo "0"</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:50:07.860273" elapsed="0.060344"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:50:07.921549" level="INFO">Executing command 'ls /dev/nvme* 2&gt;/dev/null | wc -l || echo "0"'.</msg>
<msg time="2025-10-05T15:50:07.977099" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:50:07.977433" level="INFO">${nvme_info} = 0</msg>
<var>${nvme_info}</var>
<arg>ls /dev/nvme* 2&gt;/dev/null | wc -l || echo "0"</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:50:07.921242" elapsed="0.056241"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:50:07.978123" level="INFO">Executing command 'ls /sys/block/ | grep -E "(vd|xvd)" | wc -l || echo "0"'.</msg>
<msg time="2025-10-05T15:50:08.023980" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:50:08.024156" level="INFO">${virt_info} = 0</msg>
<var>${virt_info}</var>
<arg>ls /sys/block/ | grep -E "(vd|xvd)" | wc -l || echo "0"</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:50:07.977821" elapsed="0.046360"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:50:08.024576" level="INFO">${storage_type} = Unknown</msg>
<var>${storage_type}</var>
<arg>Unknown</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:50:08.024349" elapsed="0.000255"/>
</kw>
<if>
<branch type="IF" condition="&quot;${nvme_info}&quot; != &quot;0&quot;">
<kw name="Set Variable" owner="BuiltIn">
<var>${storage_type}</var>
<arg>NVMe</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-10-05T15:50:08.024893" elapsed="0.000021"/>
</kw>
<status status="NOT RUN" start="2025-10-05T15:50:08.024690" elapsed="0.000266"/>
</branch>
<branch type="ELSE IF" condition="&quot;${virt_info}&quot; != &quot;0&quot;">
<kw name="Set Variable" owner="BuiltIn">
<var>${storage_type}</var>
<arg>Virtual/Cloud</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-10-05T15:50:08.025124" elapsed="0.000018"/>
</kw>
<status status="NOT RUN" start="2025-10-05T15:50:08.024980" elapsed="0.000191"/>
</branch>
<branch type="ELSE IF" condition="&quot;${scsi_info}&quot; != &quot;0&quot;">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:50:08.025463" level="INFO">${storage_type} = SCSI/SAN</msg>
<var>${storage_type}</var>
<arg>SCSI/SAN</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:50:08.025337" elapsed="0.000197"/>
</kw>
<status status="PASS" start="2025-10-05T15:50:08.025191" elapsed="0.001012"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" owner="BuiltIn">
<var>${storage_type}</var>
<arg>Local/Other</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-10-05T15:50:08.026410" elapsed="0.000023"/>
</kw>
<status status="NOT RUN" start="2025-10-05T15:50:08.026253" elapsed="0.000217"/>
</branch>
<status status="PASS" start="2025-10-05T15:50:08.024666" elapsed="0.001867"/>
</if>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:08.026959" level="INFO">üì° Detected storage type: SCSI/SAN</msg>
<arg>üì° Detected storage type: ${storage_type}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:08.026688" elapsed="0.000414"/>
</kw>
<return>
<value>${storage_type}</value>
<status status="PASS" start="2025-10-05T15:50:08.027184" elapsed="0.000118"/>
</return>
<msg time="2025-10-05T15:50:08.027611" level="INFO">${storage_type} = SCSI/SAN</msg>
<var>${storage_type}</var>
<doc>üì° Identify storage type from server</doc>
<status status="PASS" start="2025-10-05T15:50:07.825948" elapsed="0.201714"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:08.028141" level="INFO">üìä Storage Analysis Summary:</msg>
<arg>üìä Storage Analysis Summary:</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:08.027865" elapsed="0.000409"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:08.028717" level="INFO">üìä - Storage Type: SCSI/SAN</msg>
<arg>üìä - Storage Type: ${storage_type}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:08.028477" elapsed="0.000369"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:08.029174" level="INFO">üìä - Root Size: 1007G</msg>
<arg>üìä - Root Size: ${root_size}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:08.028992" elapsed="0.000250"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:08.029539" level="INFO">üìä - EDS Total Storage: 0.465 TB</msg>
<arg>üìä - EDS Total Storage: ${TARGET_STORAGE_TOTAL_TB} TB</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:08.029374" elapsed="0.000226"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:08.030329" level="INFO">üìä - EDS Drive Purpose: OS</msg>
<arg>üìä - EDS Drive Purpose: ${TARGET_DRIVE_PURPOSE}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:08.029717" elapsed="0.000715"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:08.030648" level="INFO">‚ÑπÔ∏è Storage capacity analysis completed and logged</msg>
<arg>‚ÑπÔ∏è Storage capacity analysis completed and logged</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:08.030547" elapsed="0.000179"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:08.030931" level="INFO">‚úÖ Storage capacity analysis: INFORMATIONAL - Available for review</msg>
<arg>‚úÖ Storage capacity analysis: INFORMATIONAL - Available for review</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:08.030823" elapsed="0.000235"/>
</kw>
<kw name="Log Test End" owner="storage_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:08.032022" level="INFO">‚úÖ Completed: Normal - Storage Capacity Analysis - PASS</msg>
<arg>‚úÖ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:08.031869" elapsed="0.000238"/>
</kw>
<status status="PASS" start="2025-10-05T15:50:08.031666" elapsed="0.000478"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>‚ùå Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:50:08.032261" elapsed="0.000017"/>
</kw>
<status status="NOT RUN" start="2025-10-05T15:50:08.032168" elapsed="0.000139"/>
</branch>
<status status="PASS" start="2025-10-05T15:50:08.031646" elapsed="0.000678"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case</doc>
<status status="PASS" start="2025-10-05T15:50:08.031340" elapsed="0.001056"/>
</kw>
<doc>üìä Analyze overall storage capacity and utilization patterns</doc>
<tag>analysis</tag>
<tag>capacity</tag>
<tag>normal</tag>
<tag>storage</tag>
<status status="PASS" start="2025-10-05T15:49:03.932740" elapsed="64.099695"/>
</test>
<test id="s1-s8-t7" name="Normal - Volume Group Analysis" line="127">
<kw name="Log Test Start" owner="storage_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:08.033553" level="INFO">üèÅ Starting: Normal - Volume Group Analysis</msg>
<arg>üèÅ Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:08.033415" elapsed="0.000314"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:50:08.033170" elapsed="0.000621"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:08.034023" level="INFO">üîç Analyzing volume group configuration...</msg>
<arg>üîç Analyzing volume group configuration...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:08.033909" elapsed="0.000194"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:08.034341" level="INFO">üìã EDS Volume Group Info: rootvg:</msg>
<arg>üìã EDS Volume Group Info: ${TARGET_DRIVE_VOLUME_GROUP}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:08.034198" elapsed="0.000216"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:08.034624" level="INFO">üìã EDS Logical Volume: /</msg>
<arg>üìã EDS Logical Volume: ${TARGET_LOGICAL_VOLUME}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:08.034505" elapsed="0.000190"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:08.034926" level="INFO">üìã EDS File System: /dev/mapper/rootvg-rootlv</msg>
<arg>üìã EDS File System: ${TARGET_FILE_SYSTEM}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:08.034810" elapsed="0.000187"/>
</kw>
<kw name="Get Filesystem Information From Server" owner="storage_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:08.037650" level="INFO">üóÇÔ∏è Collecting filesystem information from server...</msg>
<arg>üóÇÔ∏è Collecting filesystem information from server...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:08.035598" elapsed="0.002195"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:50:08.038148" level="INFO">Executing command 'df -T / | tail -1 | awk '{print $2}''.</msg>
<msg time="2025-10-05T15:50:08.089685" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:50:08.090032" level="INFO">${root_fs_type} = ext4</msg>
<var>${root_fs_type}</var>
<arg>df -T / | tail -1 | awk '{print $2}'</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:50:08.037987" elapsed="0.052093"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:50:08.092034" level="INFO">Executing command 'df / | tail -1 | awk '{print $1}''.</msg>
<msg time="2025-10-05T15:50:08.149405" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:50:08.149750" level="INFO">${root_mount} = /dev/sdd</msg>
<var>${root_mount}</var>
<arg>df / | tail -1 | awk '{print $1}'</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:50:08.091686" elapsed="0.058114"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:50:08.150524" level="INFO">Executing command 'df -T | tail -n +2'.</msg>
<msg time="2025-10-05T15:50:08.213839" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:50:08.214738" level="INFO">${fs_types_output} = none           overlay    4025456         0   4025456   0% /usr/lib/modules/6.6.87.2-microsoft-standard-WSL2
none           tmpfs      4025456         4   4025452   1% /mnt/wsl
drivers        9p      ...</msg>
<var>${fs_types_output}</var>
<arg>df -T | tail -n +2</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:50:08.150194" elapsed="0.064678"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:08.216148" level="INFO">üóÇÔ∏è Root filesystem type: ext4</msg>
<arg>üóÇÔ∏è Root filesystem type: ${root_fs_type}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:08.215333" elapsed="0.001055"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:08.217087" level="INFO">üóÇÔ∏è Root mounted from: /dev/sdd</msg>
<arg>üóÇÔ∏è Root mounted from: ${root_mount}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:08.216700" elapsed="0.000582"/>
</kw>
<return>
<value>${root_fs_type}</value>
<status status="PASS" start="2025-10-05T15:50:08.217422" elapsed="0.000080"/>
</return>
<msg time="2025-10-05T15:50:08.217768" level="INFO">${actual_fs_type} = ext4</msg>
<var>${actual_fs_type}</var>
<doc>üóÇÔ∏è Collect filesystem information from server</doc>
<status status="PASS" start="2025-10-05T15:50:08.035168" elapsed="0.182644"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:08.218450" level="INFO">üèóÔ∏è Server Filesystem Type: ext4</msg>
<arg>üèóÔ∏è Server Filesystem Type: ${actual_fs_type}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:08.218116" elapsed="0.000539"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:08.219172" level="INFO">‚ÑπÔ∏è Volume group analysis: EDS vs Server configuration logged</msg>
<arg>‚ÑπÔ∏è Volume group analysis: EDS vs Server configuration logged</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:08.218923" elapsed="0.000460"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:08.220034" level="INFO">‚úÖ Volume group analysis: INFORMATIONAL - Available for review</msg>
<arg>‚úÖ Volume group analysis: INFORMATIONAL - Available for review</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:08.219808" elapsed="0.000398"/>
</kw>
<kw name="Log Test End" owner="storage_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:08.222579" level="INFO">‚úÖ Completed: Normal - Volume Group Analysis - PASS</msg>
<arg>‚úÖ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:08.222173" elapsed="0.000609"/>
</kw>
<status status="PASS" start="2025-10-05T15:50:08.221818" elapsed="0.001163"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>‚ùå Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:50:08.223450" elapsed="0.000297"/>
</kw>
<status status="NOT RUN" start="2025-10-05T15:50:08.223047" elapsed="0.000829"/>
</branch>
<status status="PASS" start="2025-10-05T15:50:08.221771" elapsed="0.002166"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case</doc>
<status status="PASS" start="2025-10-05T15:50:08.220782" elapsed="0.003265"/>
</kw>
<doc>üèóÔ∏è Analyze volume group and logical volume configuration</doc>
<tag>analysis</tag>
<tag>lvm</tag>
<tag>normal</tag>
<tag>volumes</tag>
<status status="PASS" start="2025-10-05T15:50:08.032665" elapsed="0.191457"/>
</test>
<test id="s1-s8-t8" name="Normal - Operating System Validation" line="146">
<kw name="Log Test Start" owner="storage_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:08.226774" level="INFO">üèÅ Starting: Normal - Operating System Validation</msg>
<arg>üèÅ Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:08.226470" elapsed="0.000579"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:50:08.225865" elapsed="0.001324"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:08.227944" level="INFO">üîç Validating operating system: EDS vs Server...</msg>
<arg>üîç Validating operating system: EDS vs Server...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:08.227697" elapsed="0.000698"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:50:08.228761" level="INFO">Executing command 'cat /etc/os-release | grep PRETTY_NAME | cut -d'"' -f2'.</msg>
<msg time="2025-10-05T15:50:08.264160" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:50:08.264405" level="INFO">${os_info} = Ubuntu 24.04.3 LTS</msg>
<var>${os_info}</var>
<arg>cat /etc/os-release | grep PRETTY_NAME | cut -d'"' -f2</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:50:08.228626" elapsed="0.035872"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:50:08.264948" level="INFO">Executing command 'uname -r'.</msg>
<msg time="2025-10-05T15:50:08.323279" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:50:08.323656" level="INFO">${kernel_info} = 6.6.87.2-microsoft-standard-WSL2</msg>
<var>${kernel_info}</var>
<arg>uname -r</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:50:08.264782" elapsed="0.058938"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:08.324290" level="INFO">üìã EDS Expected OS Type: RHEL 9.6</msg>
<arg>üìã EDS Expected OS Type: ${TARGET_OS_TYPE}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:08.324021" elapsed="0.000417"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:08.324953" level="INFO">üñ•Ô∏è Server OS: Ubuntu 24.04.3 LTS</msg>
<arg>üñ•Ô∏è Server OS: ${os_info}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:08.324640" elapsed="0.000445"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:08.325528" level="INFO">üñ•Ô∏è Server Kernel: 6.6.87.2-microsoft-standard-WSL2</msg>
<arg>üñ•Ô∏è Server Kernel: ${kernel_info}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:08.325280" elapsed="0.001116"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:08.326737" level="INFO">‚ÑπÔ∏è OS validation: EDS expects 'RHEL 9.6', Server runs 'Ubuntu 24.04.3 LTS'</msg>
<arg>‚ÑπÔ∏è OS validation: EDS expects '${TARGET_OS_TYPE}', Server runs '${os_info}'</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:08.326539" elapsed="0.000290"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:08.327046" level="INFO">‚úÖ Operating system validation: LOGGED for compliance review</msg>
<arg>‚úÖ Operating system validation: LOGGED for compliance review</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:08.326940" elapsed="0.000186"/>
</kw>
<kw name="Log Test End" owner="storage_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:08.328189" level="INFO">‚úÖ Completed: Normal - Operating System Validation - PASS</msg>
<arg>‚úÖ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:08.328036" elapsed="0.000240"/>
</kw>
<status status="PASS" start="2025-10-05T15:50:08.327849" elapsed="0.000463"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>‚ùå Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:50:08.328433" elapsed="0.000017"/>
</kw>
<status status="NOT RUN" start="2025-10-05T15:50:08.328340" elapsed="0.000139"/>
</branch>
<status status="PASS" start="2025-10-05T15:50:08.327825" elapsed="0.000671"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case</doc>
<status status="PASS" start="2025-10-05T15:50:08.327487" elapsed="0.001056"/>
</kw>
<doc>üñ•Ô∏è Validate operating system type matches EDS specification</doc>
<tag>compliance</tag>
<tag>normal</tag>
<tag>os</tag>
<tag>system</tag>
<status status="PASS" start="2025-10-05T15:50:08.224649" elapsed="0.103930"/>
</test>
<kw name="Generate Storage Executive Summary" owner="storage_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:08.329550" level="INFO">üìä Generating Test-5 Storage Validation Executive Summary...</msg>
<arg>üìä Generating Test-5 Storage Validation Executive Summary...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:08.329441" elapsed="0.000195"/>
</kw>
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:50:08.329923" level="INFO">${timestamp} = 2025-10-05 15:50:08</msg>
<var>${timestamp}</var>
<arg>result_format=%Y-%m-%d %H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:50:08.329740" elapsed="0.000205"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:50:08.330138" level="INFO">${summary_file} = results/test5_disk_space_validation/Test5_Storage_Executive_Summary.txt</msg>
<var>${summary_file}</var>
<arg>results/test5_disk_space_validation/Test5_Storage_Executive_Summary.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:50:08.330036" elapsed="0.000122"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:50:08.331881" level="INFO">${summary_content} = ========================================
üóÑÔ∏è TEST-5: STORAGE &amp; SYSTEM VALIDATION
üìä EXECUTIVE SUMMARY REPORT
========================================

üìÖ Report Generated: 2025-10-05 15:50:08
üéØ Target Sy...</msg>
<var>${summary_content}</var>
<arg>SEPARATOR=\n</arg>
<arg>========================================</arg>
<arg>üóÑÔ∏è TEST-5: STORAGE &amp; SYSTEM VALIDATION</arg>
<arg>üìä EXECUTIVE SUMMARY REPORT</arg>
<arg>========================================</arg>
<arg>üìÖ Report Generated: ${timestamp}</arg>
<arg>üéØ Target System: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>üìã Test Suite: Test-5 Disk Space &amp; System Validation</arg>
<arg>========================================</arg>
<arg>üìã EDS BASELINE CONFIGURATION</arg>
<arg>========================================</arg>
<arg>üíª CPU Cores (Expected): ${TARGET_CPU_CORES}</arg>
<arg>üß† RAM (Expected): ${TARGET_RAM} GB</arg>
<arg>üì° Storage Type (Expected): ${TARGET_STORAGE_TYPE}</arg>
<arg>üíæ Storage Total (Expected): ${TARGET_STORAGE_TOTAL_TB} TB</arg>
<arg>üóÇÔ∏è Mount Point (Expected): ${TARGET_LOGICAL_VOLUME}</arg>
<arg>üìä Storage Allocation (Expected): ${TARGET_STORAGE_ALLOC_GB} GB</arg>
<arg>üéØ Drive Purpose: ${TARGET_DRIVE_PURPOSE}</arg>
<arg>üñ•Ô∏è OS Type (Expected): ${TARGET_OS_TYPE}</arg>
<arg>========================================</arg>
<arg>‚úÖ VALIDATION RESULTS</arg>
<arg>========================================</arg>
<arg>Results available in detailed test reports.</arg>
<arg>========================================</arg>
<arg>üìÅ SUPPORTING DOCUMENTATION</arg>
<arg>========================================</arg>
<arg>üìÑ Detailed data files: results/test5_disk_space_validation/data/</arg>
<arg>üìä Robot Framework reports: results/test5_disk_space_validation/</arg>
<arg>========================================</arg>
<arg>üèÜ COMPLIANCE STATUS</arg>
<arg>========================================</arg>
<arg>‚úÖ Test execution completed successfully</arg>
<arg>üìã All data collected and validated against EDS</arg>
<arg>üîç Results ready for stakeholder review</arg>
<arg>End of Executive Summary</arg>
<arg>========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:50:08.330243" elapsed="0.001677"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:50:08.340108" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test5_disk_space_validation/Test5_Storage_Executive_Summary.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test5_disk_space_validation/Test5_Storage_Executive_Summary.txt&lt;/a&gt;'.</msg>
<arg>${summary_file}</arg>
<arg>${summary_content}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:50:08.332123" elapsed="0.008180"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:08.341113" level="INFO">üìä Executive summary generated: results/test5_disk_space_validation/Test5_Storage_Executive_Summary.txt</msg>
<arg>üìä Executive summary generated: ${summary_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:08.340630" elapsed="0.000665"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:08.342259" level="INFO">‚úÖ Test-5 Storage Validation completed successfully!</msg>
<arg>‚úÖ Test-5 Storage Validation completed successfully!</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:08.341554" elapsed="0.000837"/>
</kw>
<doc>üìä Generate executive summary for storage validation results</doc>
<status status="PASS" start="2025-10-05T15:50:08.329277" elapsed="0.013224"/>
</kw>
<doc>üóÑÔ∏è Storage &amp; System Validation Test Suite - Test-5
üîç Process: Find hostname in EDS ‚Üí SSH to server ‚Üí Collect disk/CPU/memory data ‚Üí Compare server vs EDS
‚úÖ Pass if server resources match EDS requirements, ‚ùå Fail if mismatch
üìä Validates: CPU cores, RAM, disk space allocation, filesystem types, storage configuration</doc>
<status status="FAIL" start="2025-10-05T15:46:34.402908" elapsed="213.939643"/>
</suite>
<suite id="s1-s9" name="Time Configuration Validation" source="/mnt/c/Users/sacpa/Projects/robot/robotframework/tests/test7_time_configuration_validation/time_configuration_validation.robot">
<kw name="Initialize Time Test Environment" owner="time_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:35.941086" level="INFO">üöÄ Initializing Test-7: Time Configuration Validation Environment...</msg>
<arg>üöÄ Initializing Test-7: Time Configuration Validation Environment...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:35.940638" elapsed="0.000694"/>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2025-10-05T15:50:35.942745" level="INFO" html="true">Directory '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test7_time_configuration_validation/data"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test7_time_configuration_validation/data&lt;/a&gt;' already exists.</msg>
<arg>${DATA_DIR}</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2025-10-05T15:50:35.941577" elapsed="0.001261"/>
</kw>
<kw name="Lookup Server Config" owner="EDSLookup">
<msg time="2025-10-05T15:50:35.981901" level="INFO">Found matching row for hostname 'alhxvdvitap01'</msg>
<msg time="2025-10-05T15:50:35.982153" level="INFO">Extracted IP from EDS: 172.30.16.186</msg>
<msg time="2025-10-05T15:50:35.982198" level="INFO">Extracted subnet from EDS: 10.26.216.0/24</msg>
<msg time="2025-10-05T15:50:35.982227" level="INFO">Extracted mask from EDS: 255.255.255.0</msg>
<msg time="2025-10-05T15:50:35.982252" level="INFO">Extracted gateway from EDS: 10.26.216.4</msg>
<msg time="2025-10-05T15:50:35.982275" level="INFO">Extracted CNAME from EDS: alhxvdvitap01</msg>
<msg time="2025-10-05T15:50:35.982297" level="INFO">Extracted domain from EDS: gnscet.com</msg>
<msg time="2025-10-05T15:50:35.982324" level="INFO">Extracted CPU cores from EDS: 8</msg>
<msg time="2025-10-05T15:50:35.982348" level="INFO">Extracted RAM from EDS: 16</msg>
<msg time="2025-10-05T15:50:35.982371" level="INFO">Extracted storage type from EDS: VSAN</msg>
<msg time="2025-10-05T15:50:35.982408" level="INFO">Extracted storage total TB from EDS: 0.465</msg>
<msg time="2025-10-05T15:50:35.982431" level="INFO">Extracted drive/volume group from EDS: rootvg:</msg>
<msg time="2025-10-05T15:50:35.982453" level="INFO">Extracted file system from EDS: /dev/mapper/rootvg-rootlv</msg>
<msg time="2025-10-05T15:50:35.982476" level="INFO">Extracted logical volume/partition from EDS: /</msg>
<msg time="2025-10-05T15:50:35.982498" level="INFO">Extracted storage allocation GB from EDS: 20</msg>
<msg time="2025-10-05T15:50:35.982520" level="INFO">Extracted recommended storage allocation GB from EDS: 20</msg>
<msg time="2025-10-05T15:50:35.982540" level="INFO">Extracted drive purpose from EDS: OS</msg>
<msg time="2025-10-05T15:50:35.982560" level="INFO">Extracted OS type from EDS: RHEL 9.6</msg>
<msg time="2025-10-05T15:50:35.982584" level="INFO">EDS configuration for alhxvdvitap01: {'ip': '172.30.16.186', 'subnet': '10.26.216.0/24', 'mask': '255.255.255.0', 'gateway': '10.26.216.4', 'cname': 'alhxvdvitap01', 'domain': 'gnscet.com', 'cpu_cores': '8', 'ram': '16', 'storage_type': 'VSAN', 'storage_total_tb': '0.465', 'drive_volume_group': 'rootvg:', 'file_system': '/dev/mapper/rootvg-rootlv', 'logical_volume_partition': '/', 'storage_allocation_gb': '20', 'recommended_storage_gb': '20', 'drive_purpose': 'OS', 'os_type': 'RHEL 9.6'}</msg>
<msg time="2025-10-05T15:50:35.982788" level="INFO">${eds_config} = {'ip': '172.30.16.186', 'subnet': '10.26.216.0/24', 'mask': '255.255.255.0', 'gateway': '10.26.216.4', 'cname': 'alhxvdvitap01', 'domain': 'gnscet.com', 'cpu_cores': '8', 'ram': '16', 'storage_type': ...</msg>
<var>${eds_config}</var>
<arg>${TARGET_HOSTNAME}</arg>
<doc>Lookup server configuration from EDS sheet based on hostname</doc>
<status status="PASS" start="2025-10-05T15:50:35.942989" elapsed="0.039837"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:50:35.984899" level="INFO">${TARGET_IP} = 172.30.16.186</msg>
<arg>${TARGET_IP}</arg>
<arg>${eds_config['ip']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:50:35.983041" elapsed="0.002051"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:35.985621" level="INFO">üìã Target Server: alhxvdvitap01</msg>
<arg>üìã Target Server: ${TARGET_HOSTNAME}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:35.985291" elapsed="0.000463"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:35.986098" level="INFO">üìã Target IP: 172.30.16.186</msg>
<arg>üìã Target IP: ${TARGET_IP}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:35.985913" elapsed="0.000289"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:35.986493" level="INFO">üîó Connecting to target server: 172.30.16.186...</msg>
<arg>üîó Connecting to target server: ${TARGET_IP}...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:35.986343" elapsed="0.000246"/>
</kw>
<kw name="Open Connection" owner="SSHLibrary">
<arg>${TARGET_IP}</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" start="2025-10-05T15:50:35.986721" elapsed="0.000255"/>
</kw>
<kw name="Login" owner="SSHLibrary">
<msg time="2025-10-05T15:50:35.987410" level="INFO">Logging into '172.30.16.186:22' as 'sac'.</msg>
<msg time="2025-10-05T15:50:37.759802" level="INFO">Read output: Welcome to Ubuntu 24.04.3 LTS (GNU/Linux 6.6.87.2-microsoft-standard-WSL2 x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/pro

 System information as of Sun Oct  5 15:50:36 CDT 2025

  System load:  0.52                Processes:             36
  Usage of /:   0.7% of 1006.85GB   Users logged in:       1
  Memory usage: 7%                  IPv4 address for eth0: 172.30.16.186
  Swap usage:   0%

 * Strictly confined Kubernetes makes edge and IoT secure. Learn how MicroK8s
   just raised the bar for easy, resilient and secure K8s cluster deployment.

   https://ubuntu.com/engage/secure-kubernetes-at-the-edge
Last login: Sun Oct  5 15:46:48 2025 from 172.30.16.186
[?2004hsac@alhxvdvitap01:~$</msg>
<arg>${SSH_USERNAME}</arg>
<arg>${SSH_PASSWORD}</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<status status="PASS" start="2025-10-05T15:50:35.987135" elapsed="1.772798"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:37.760331" level="INFO">‚úÖ SSH connection established successfully</msg>
<arg>‚úÖ SSH connection established successfully</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:37.760123" elapsed="0.000345"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:37.760718" level="INFO">‚úÖ Test-7 environment initialized</msg>
<arg>‚úÖ Test-7 environment initialized</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:37.760603" elapsed="0.000197"/>
</kw>
<doc>üèóÔ∏è Set up test environment for time configuration validation</doc>
<status status="PASS" start="2025-10-05T15:50:35.939869" elapsed="1.821019"/>
</kw>
<test id="s1-s9-t1" name="Critical - Connect to Target Server" line="19">
<kw name="Log Test Start" owner="time_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:37.762137" level="INFO">üèÅ Starting: Critical - Connect to Target Server</msg>
<arg>üèÅ Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:37.761991" elapsed="0.001289"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:50:37.761668" elapsed="0.001701"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:37.763639" level="INFO">üîç Verifying SSH connection to target server...</msg>
<arg>üîç Verifying SSH connection to target server...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:37.763506" elapsed="0.000222"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:37.764025" level="INFO">üìã Target: alhxvdvitap01 (172.30.16.186)</msg>
<arg>üìã Target: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:37.763840" elapsed="0.000292"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:50:37.764717" level="INFO">Executing command 'echo "Connection active"'.</msg>
<msg time="2025-10-05T15:50:37.776875" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:50:37.777243" level="INFO">${connection_status} = Connection active</msg>
<var>${connection_status}</var>
<arg>echo "Connection active"</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:50:37.764325" elapsed="0.012960"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${connection_status}</arg>
<arg>Connection active</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-10-05T15:50:37.777569" elapsed="0.000281"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:37.778235" level="INFO">‚úÖ SSH connection verified and active</msg>
<arg>‚úÖ SSH connection verified and active</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:37.778046" elapsed="0.000353"/>
</kw>
<kw name="Log Test End" owner="time_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:37.779558" level="INFO">‚úÖ Completed: Critical - Connect to Target Server - PASS</msg>
<arg>‚úÖ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:37.779372" elapsed="0.000302"/>
</kw>
<status status="PASS" start="2025-10-05T15:50:37.779161" elapsed="0.000580"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>‚ùå Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:50:37.779897" elapsed="0.000019"/>
</kw>
<status status="NOT RUN" start="2025-10-05T15:50:37.779782" elapsed="0.000164"/>
</branch>
<status status="PASS" start="2025-10-05T15:50:37.779127" elapsed="0.000841"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case</doc>
<status status="PASS" start="2025-10-05T15:50:37.778827" elapsed="0.001192"/>
</kw>
<doc>üîó Establish direct connection to target machine via SSH</doc>
<tag>connection</tag>
<tag>critical</tag>
<tag>infrastructure</tag>
<tag>ssh</tag>
<status status="PASS" start="2025-10-05T15:50:37.761029" elapsed="0.019031"/>
</test>
<test id="s1-s9-t2" name="Critical - Collect Time Configuration Data" line="32">
<kw name="Log Test Start" owner="time_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:37.781424" level="INFO">üèÅ Starting: Critical - Collect Time Configuration Data</msg>
<arg>üèÅ Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:37.781264" elapsed="0.000254"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:50:37.780902" elapsed="0.000683"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:37.781800" level="INFO">üîç Collecting time configuration data from server...</msg>
<arg>üîç Collecting time configuration data from server...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:37.781695" elapsed="0.000185"/>
</kw>
<kw name="Collect Time Configuration Data" owner="time_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:37.782436" level="INFO">‚è∞ Collecting time configuration data from server...</msg>
<arg>‚è∞ Collecting time configuration data from server...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:37.782342" elapsed="0.000175"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:50:37.782700" level="INFO">Executing command 'timedatectl'.</msg>
<msg time="2025-10-05T15:50:37.970634" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:50:37.971203" level="INFO">${timedatectl_output} =                Local time: Sun 2025-10-05 15:50:37 CDT
           Universal time: Sun 2025-10-05 20:50:37 UTC
                 RTC time: Sun 2025-10-05 20:50:40
                Time zone: America/Chic...</msg>
<var>${timedatectl_output}</var>
<arg>timedatectl</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:50:37.782621" elapsed="0.188685"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:50:37.972339" level="INFO">Executing command 'chronyc sources -v'.</msg>
<msg time="2025-10-05T15:50:38.026169" level="INFO">Command exited with return code 127.</msg>
<msg time="2025-10-05T15:50:38.026628" level="INFO">${chrony_sources_output} = </msg>
<var>${chrony_sources_output}</var>
<arg>chronyc sources -v</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:50:37.971942" elapsed="0.054745"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:50:38.027386" level="INFO">Executing command 'chronyc tracking'.</msg>
<msg time="2025-10-05T15:50:38.078446" level="INFO">Command exited with return code 127.</msg>
<msg time="2025-10-05T15:50:38.078744" level="INFO">${chrony_tracking_output} = </msg>
<var>${chrony_tracking_output}</var>
<arg>chronyc tracking</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:50:38.027137" elapsed="0.051648"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:50:38.079250" level="INFO">Executing command 'hwclock --show 2&gt;/dev/null || echo "hwclock requires privileges"'.</msg>
<msg time="2025-10-05T15:50:38.130840" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:50:38.131196" level="INFO">${hwclock_output} = hwclock requires privileges</msg>
<var>${hwclock_output}</var>
<arg>hwclock --show 2&gt;/dev/null || echo "hwclock requires privileges"</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:50:38.079072" elapsed="0.052174"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:50:38.131793" level="INFO">Executing command 'date'.</msg>
<msg time="2025-10-05T15:50:38.177580" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:50:38.177980" level="INFO">${current_date_output} = Sun Oct  5 15:50:38 CDT 2025</msg>
<var>${current_date_output}</var>
<arg>date</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:50:38.131537" elapsed="0.046500"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:50:38.179404" level="INFO">Executing command 'cat /etc/timezone 2&gt;/dev/null || echo "N/A"'.</msg>
<msg time="2025-10-05T15:50:38.236264" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:50:38.236600" level="INFO">${timezone_file_output} = America/Chicago</msg>
<var>${timezone_file_output}</var>
<arg>cat /etc/timezone 2&gt;/dev/null || echo "N/A"</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:50:38.179035" elapsed="0.057606"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:50:38.237476" level="INFO">Executing command 'ls -l /etc/localtime'.</msg>
<msg time="2025-10-05T15:50:38.290751" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:50:38.291009" level="INFO">${localtime_link_output} = lrwxrwxrwx 1 root root 35 Oct  5 12:18 /etc/localtime -&gt; /usr/share/zoneinfo/America/Chicago</msg>
<var>${localtime_link_output}</var>
<arg>ls -l /etc/localtime</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:50:38.237169" elapsed="0.053873"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:50:38.291709" level="INFO">Executing command 'systemctl status chronyd 2&gt;/dev/null || systemctl status chrony 2&gt;/dev/null || echo "Chrony service not found"'.</msg>
<msg time="2025-10-05T15:50:38.367132" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:50:38.367923" level="INFO">${chrony_status_output} = Chrony service not found</msg>
<var>${chrony_status_output}</var>
<arg>systemctl status chronyd 2&gt;/dev/null || systemctl status chrony 2&gt;/dev/null || echo "Chrony service not found"</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:50:38.291452" elapsed="0.076544"/>
</kw>
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:50:38.369969" level="INFO">${timestamp} = 20251005_155038</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:50:38.369491" elapsed="0.000527"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.370701" level="INFO">${time_config_file} = results/test7_time_configuration_validation/data/time_configuration_20251005_155038.txt</msg>
<var>${time_config_file}</var>
<arg>${DATA_DIR}/time_configuration_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:50:38.370283" elapsed="0.000458"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.371623" level="INFO">${time_data} = === Time Configuration Report ===
Timestamp: 20251005_155038
Target Server: alhxvdvitap01 (172.30.16.186)

=== Timedatectl Output ===
               Local time: Sun 2025-10-05 15:50:37 CDT
           ...</msg>
<var>${time_data}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Time Configuration Report ===</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>=== Timedatectl Output ===</arg>
<arg>${timedatectl_output}</arg>
<arg>=== Current Date/Time ===</arg>
<arg>${current_date_output}</arg>
<arg>=== Timezone Configuration ===</arg>
<arg>Timezone File: ${timezone_file_output}</arg>
<arg>Localtime Link: ${localtime_link_output}</arg>
<arg>=== Chrony Service Status ===</arg>
<arg>${chrony_status_output}</arg>
<arg>=== Chrony Sources (NTP Servers) ===</arg>
<arg>${chrony_sources_output}</arg>
<arg>=== Chrony Tracking (Synchronization Status) ===</arg>
<arg>${chrony_tracking_output}</arg>
<arg>=== Hardware Clock ===</arg>
<arg>${hwclock_output}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:50:38.370901" elapsed="0.000835"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:50:38.386526" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test7_time_configuration_validation/data/time_configuration_20251005_155038.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test7_time_configuration_validation/data/time_configuration_20251005_155038.txt&lt;/a&gt;'.</msg>
<arg>${time_config_file}</arg>
<arg>${time_data}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:50:38.371943" elapsed="0.015347"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.387769" level="INFO">üìÑ Time configuration data saved to: results/test7_time_configuration_validation/data/time_configuration_20251005_155038.txt</msg>
<arg>üìÑ Time configuration data saved to: ${time_config_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.387495" elapsed="0.000402"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.388356" level="INFO">${TIMEDATECTL_OUTPUT} =                Local time: Sun 2025-10-05 15:50:37 CDT
           Universal time: Sun 2025-10-05 20:50:37 UTC
                 RTC time: Sun 2025-10-05 20:50:40
                Time zone: America/Chic...</msg>
<arg>${TIMEDATECTL_OUTPUT}</arg>
<arg>${timedatectl_output}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:50:38.388097" elapsed="0.000302"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.389530" level="INFO">${CHRONY_SOURCES_OUTPUT} = </msg>
<arg>${CHRONY_SOURCES_OUTPUT}</arg>
<arg>${chrony_sources_output}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:50:38.388514" elapsed="0.001118"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.390171" level="INFO">${CHRONY_TRACKING_OUTPUT} = </msg>
<arg>${CHRONY_TRACKING_OUTPUT}</arg>
<arg>${chrony_tracking_output}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:50:38.389957" elapsed="0.000256"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.390604" level="INFO">${CHRONY_STATUS_OUTPUT} = Chrony service not found</msg>
<arg>${CHRONY_STATUS_OUTPUT}</arg>
<arg>${chrony_status_output}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:50:38.390405" elapsed="0.000239"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.390901" level="INFO">${CURRENT_DATE_OUTPUT} = Sun Oct  5 15:50:38 CDT 2025</msg>
<arg>${CURRENT_DATE_OUTPUT}</arg>
<arg>${current_date_output}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-05T15:50:38.390753" elapsed="0.000179"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.391136" level="INFO">‚úÖ Time configuration data collected successfully</msg>
<arg>‚úÖ Time configuration data collected successfully</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.391016" elapsed="0.000223"/>
</kw>
<doc>‚è∞ Execute time-related commands and collect all time configuration data</doc>
<status status="PASS" start="2025-10-05T15:50:37.782148" elapsed="0.609183"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.391591" level="INFO">Length is 311.</msg>
<arg>${TIMEDATECTL_OUTPUT}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-10-05T15:50:38.391468" elapsed="0.000169"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.392380" level="INFO">Length is 0.</msg>
<msg time="2025-10-05T15:50:38.392509" level="FAIL">'' should not be empty.</msg>
<arg>${CHRONY_SOURCES_OUTPUT}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="FAIL" start="2025-10-05T15:50:38.392247" elapsed="0.000485">'' should not be empty.</status>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<arg>${CHRONY_TRACKING_OUTPUT}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="NOT RUN" start="2025-10-05T15:50:38.392864" elapsed="0.000038"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>üìã Timedatectl output collected: ${TIMEDATECTL_OUTPUT[:100]}...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:50:38.393101" elapsed="0.000020"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>üìã Chrony sources collected: ${CHRONY_SOURCES_OUTPUT[:100]}...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:50:38.393209" elapsed="0.000015"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>‚úÖ Time configuration data collected successfully</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:50:38.393301" elapsed="0.000014"/>
</kw>
<kw name="Log Test End" owner="time_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>‚úÖ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:50:38.394444" elapsed="0.000019"/>
</kw>
<status status="NOT RUN" start="2025-10-05T15:50:38.394254" elapsed="0.000244"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.394829" level="INFO">‚ùå Completed: Critical - Collect Time Configuration Data - FAIL</msg>
<arg>‚ùå Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.394628" elapsed="0.000309"/>
</kw>
<status status="PASS" start="2025-10-05T15:50:38.394523" elapsed="0.000469"/>
</branch>
<status status="PASS" start="2025-10-05T15:50:38.394229" elapsed="0.000804"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case</doc>
<status status="PASS" start="2025-10-05T15:50:38.393949" elapsed="0.001156"/>
</kw>
<doc>‚è∞ Execute time-related commands to gather timezone, chrony, and NTP configuration</doc>
<tag>critical</tag>
<tag>data_collection</tag>
<tag>ntp</tag>
<tag>time</tag>
<status status="FAIL" start="2025-10-05T15:50:37.780341" elapsed="0.614811">'' should not be empty.</status>
</test>
<test id="s1-s9-t3" name="Critical - Validate Timezone Setting" line="50">
<kw name="Log Test Start" owner="time_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.396896" level="INFO">üèÅ Starting: Critical - Validate Timezone Setting</msg>
<arg>üèÅ Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.396676" elapsed="0.000376"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:50:38.396150" elapsed="0.000979"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.397342" level="INFO">üîç Validating timezone configuration...</msg>
<arg>üîç Validating timezone configuration...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.397232" elapsed="0.000200"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.397720" level="INFO">üìã Expected Timezone: Pacific/Los Angeles (America/Los_Angeles)</msg>
<arg>üìã Expected Timezone: Pacific/Los Angeles (America/Los_Angeles)</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.397550" elapsed="0.000271"/>
</kw>
<kw name="Validate Timezone Configuration" owner="time_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.398464" level="INFO">üîç Validating timezone configuration...</msg>
<arg>üîç Validating timezone configuration...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.398361" elapsed="0.000199"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:50:38.398771" level="INFO">Executing command 'timedatectl | grep "Time zone"'.</msg>
<msg time="2025-10-05T15:50:38.427616" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:50:38.428297" level="INFO">${timezone_line} =                 Time zone: America/Chicago (CDT, -0500)</msg>
<var>${timezone_line}</var>
<arg>timedatectl | grep "Time zone"</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:50:38.398685" elapsed="0.029908"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.430451" level="INFO">‚è∞ Timezone info:                 Time zone: America/Chicago (CDT, -0500)</msg>
<arg>‚è∞ Timezone info: ${timezone_line}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.429612" elapsed="0.001213"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.431878" level="FAIL">'                Time zone: America/Chicago (CDT, -0500)' does not contain 'America/Los_Angeles'</msg>
<arg>${timezone_line}</arg>
<arg>America/Los_Angeles</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2025-10-05T15:50:38.431568" elapsed="0.000443">'                Time zone: America/Chicago (CDT, -0500)' does not contain 'America/Los_Angeles'</status>
</kw>
<msg time="2025-10-05T15:50:38.432154" level="INFO">${contains_la} = False</msg>
<var>${contains_la}</var>
<arg>Should Contain</arg>
<arg>${timezone_line}</arg>
<arg>America/Los_Angeles</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-10-05T15:50:38.431204" elapsed="0.000981"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.433566" level="FAIL">'                Time zone: America/Chicago (CDT, -0500)' does not contain 'Pacific'</msg>
<arg>${timezone_line}</arg>
<arg>Pacific</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2025-10-05T15:50:38.432646" elapsed="0.001021">'                Time zone: America/Chicago (CDT, -0500)' does not contain 'Pacific'</status>
</kw>
<msg time="2025-10-05T15:50:38.433810" level="INFO">${contains_pacific} = False</msg>
<var>${contains_pacific}</var>
<arg>Should Contain</arg>
<arg>${timezone_line}</arg>
<arg>Pacific</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-10-05T15:50:38.432387" elapsed="0.001455"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.434404" level="INFO">${timezone_valid} = False</msg>
<var>${timezone_valid}</var>
<arg>${contains_la} or ${contains_pacific}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-05T15:50:38.434014" elapsed="0.000429"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Fail" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.436716" level="FAIL">‚ùå TIMEZONE MISMATCH: Expected 'America/Los_Angeles' or 'Pacific', found:                 Time zone: America/Chicago (CDT, -0500)</msg>
<arg>‚ùå TIMEZONE MISMATCH: Expected 'America/Los_Angeles' or 'Pacific', found: ${timezone_line}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="FAIL" start="2025-10-05T15:50:38.434904" elapsed="0.001970">‚ùå TIMEZONE MISMATCH: Expected 'America/Los_Angeles' or 'Pacific', found:                 Time zone: America/Chicago (CDT, -0500)</status>
</kw>
<arg>not ${timezone_valid}</arg>
<arg>Fail</arg>
<arg>‚ùå TIMEZONE MISMATCH: Expected 'America/Los_Angeles' or 'Pacific', found: ${timezone_line}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="FAIL" start="2025-10-05T15:50:38.434622" elapsed="0.002473">‚ùå TIMEZONE MISMATCH: Expected 'America/Los_Angeles' or 'Pacific', found:                 Time zone: America/Chicago (CDT, -0500)</status>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>‚úÖ Timezone validation: PASSED - Timezone set to Pacific/Los Angeles</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:50:38.437468" elapsed="0.000054"/>
</kw>
<return>
<value>${timezone_line}</value>
<status status="NOT RUN" start="2025-10-05T15:50:38.437630" elapsed="0.000045"/>
</return>
<var>${timezone_result}</var>
<doc>üåé Validate timezone is set to Pacific/Los Angeles</doc>
<status status="FAIL" start="2025-10-05T15:50:38.398093" elapsed="0.039792">‚ùå TIMEZONE MISMATCH: Expected 'America/Los_Angeles' or 'Pacific', found:                 Time zone: America/Chicago (CDT, -0500)</status>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>‚è∞ Timezone validation result: ${timezone_result}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:50:38.438140" elapsed="0.000072"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>‚úÖ Timezone validation: PASSED - Timezone correctly set to Pacific/Los Angeles</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:50:38.438480" elapsed="0.000037"/>
</kw>
<kw name="Log Test End" owner="time_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>‚úÖ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:50:38.440084" elapsed="0.000028"/>
</kw>
<status status="NOT RUN" start="2025-10-05T15:50:38.439792" elapsed="0.000372"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.440619" level="INFO">‚ùå Completed: Critical - Validate Timezone Setting - FAIL</msg>
<arg>‚ùå Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.440290" elapsed="0.000560"/>
</kw>
<status status="PASS" start="2025-10-05T15:50:38.440192" elapsed="0.000854"/>
</branch>
<status status="PASS" start="2025-10-05T15:50:38.439767" elapsed="0.001311"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case</doc>
<status status="PASS" start="2025-10-05T15:50:38.439369" elapsed="0.001783"/>
</kw>
<doc>üåé Validate timezone is set to Pacific/Los Angeles (America/Los_Angeles)</doc>
<tag>compliance</tag>
<tag>critical</tag>
<tag>timezone</tag>
<status status="FAIL" start="2025-10-05T15:50:38.395458" elapsed="0.045764">‚ùå TIMEZONE MISMATCH: Expected 'America/Los_Angeles' or 'Pacific', found:                 Time zone: America/Chicago (CDT, -0500)</status>
</test>
<test id="s1-s9-t4" name="Critical - Validate Chrony Service Status" line="63">
<kw name="Log Test Start" owner="time_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.443311" level="INFO">üèÅ Starting: Critical - Validate Chrony Service Status</msg>
<arg>üèÅ Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.443113" elapsed="0.000295"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:50:38.442185" elapsed="0.001328"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.443957" level="INFO">üîç Validating chrony service status...</msg>
<arg>üîç Validating chrony service status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.443752" elapsed="0.000285"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.444230" level="INFO">üìã Expected: Chrony service active and running</msg>
<arg>üìã Expected: Chrony service active and running</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.444136" elapsed="0.000167"/>
</kw>
<kw name="Validate Chrony Service Status" owner="time_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.444817" level="INFO">üîç Validating chrony service status...</msg>
<arg>üîç Validating chrony service status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.444719" elapsed="0.000153"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.445266" level="FAIL">'Chrony service not found' does not contain 'active (running)'</msg>
<arg>${CHRONY_STATUS_OUTPUT}</arg>
<arg>active (running)</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2025-10-05T15:50:38.445110" elapsed="0.000222">'Chrony service not found' does not contain 'active (running)'</status>
</kw>
<msg time="2025-10-05T15:50:38.445419" level="INFO">${service_active} = False</msg>
<var>${service_active}</var>
<arg>Should Contain</arg>
<arg>${CHRONY_STATUS_OUTPUT}</arg>
<arg>active (running)</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-10-05T15:50:38.444989" elapsed="0.000451"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Fail" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.445902" level="FAIL">‚ùå CHRONY SERVICE ISSUE: Chrony service is not active. Status: Chrony service not found</msg>
<arg>‚ùå CHRONY SERVICE ISSUE: Chrony service is not active. Status: ${CHRONY_STATUS_OUTPUT}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="FAIL" start="2025-10-05T15:50:38.445739" elapsed="0.000216">‚ùå CHRONY SERVICE ISSUE: Chrony service is not active. Status: Chrony service not found</status>
</kw>
<arg>not ${service_active}</arg>
<arg>Fail</arg>
<arg>‚ùå CHRONY SERVICE ISSUE: Chrony service is not active. Status: ${CHRONY_STATUS_OUTPUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="FAIL" start="2025-10-05T15:50:38.445547" elapsed="0.000448">‚ùå CHRONY SERVICE ISSUE: Chrony service is not active. Status: Chrony service not found</status>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>‚úÖ Chrony service validation: PASSED - Service is active and running</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:50:38.446082" elapsed="0.000016"/>
</kw>
<doc>üì° Validate chrony service is active and running</doc>
<status status="FAIL" start="2025-10-05T15:50:38.444496" elapsed="0.001682">‚ùå CHRONY SERVICE ISSUE: Chrony service is not active. Status: Chrony service not found</status>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>‚úÖ Chrony service validation: PASSED - Service is active</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:50:38.446295" elapsed="0.000018"/>
</kw>
<kw name="Log Test End" owner="time_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>‚úÖ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:50:38.447674" elapsed="0.000021"/>
</kw>
<status status="NOT RUN" start="2025-10-05T15:50:38.447497" elapsed="0.000237"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.448073" level="INFO">‚ùå Completed: Critical - Validate Chrony Service Status - FAIL</msg>
<arg>‚ùå Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.447888" elapsed="0.000288"/>
</kw>
<status status="PASS" start="2025-10-05T15:50:38.447762" elapsed="0.000465"/>
</branch>
<status status="PASS" start="2025-10-05T15:50:38.447476" elapsed="0.000773"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case</doc>
<status status="PASS" start="2025-10-05T15:50:38.447210" elapsed="0.001083"/>
</kw>
<doc>üì° Validate chrony service is active and running</doc>
<tag>chrony</tag>
<tag>critical</tag>
<tag>ntp</tag>
<tag>service</tag>
<status status="FAIL" start="2025-10-05T15:50:38.441536" elapsed="0.006795">‚ùå CHRONY SERVICE ISSUE: Chrony service is not active. Status: Chrony service not found</status>
</test>
<test id="s1-s9-t5" name="Critical - Validate NTP Server Configuration" line="75">
<kw name="Log Test Start" owner="time_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.449584" level="INFO">üèÅ Starting: Critical - Validate NTP Server Configuration</msg>
<arg>üèÅ Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.449454" elapsed="0.000225"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:50:38.449225" elapsed="0.000529"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.449957" level="INFO">üîç Validating NTP server configuration...</msg>
<arg>üîç Validating NTP server configuration...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.449848" elapsed="0.000207"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.450364" level="INFO">üìã Expected NTP Server: ntpx.domain.com</msg>
<arg>üìã Expected NTP Server: ntpx.domain.com</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.450167" elapsed="0.000295"/>
</kw>
<kw name="Validate NTP Server Configuration" owner="time_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.451527" level="INFO">üîç Validating NTP server configuration...</msg>
<arg>üîç Validating NTP server configuration...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.451158" elapsed="0.000482"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.452610" level="FAIL">'' does not contain 'ntpx.domain.com'</msg>
<arg>${CHRONY_SOURCES_OUTPUT}</arg>
<arg>ntpx.domain.com</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2025-10-05T15:50:38.452361" elapsed="0.000337">'' does not contain 'ntpx.domain.com'</status>
</kw>
<msg time="2025-10-05T15:50:38.452795" level="INFO">${ntp_configured} = False</msg>
<var>${ntp_configured}</var>
<arg>Should Contain</arg>
<arg>${CHRONY_SOURCES_OUTPUT}</arg>
<arg>ntpx.domain.com</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-10-05T15:50:38.451988" elapsed="0.000827"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.453283" level="WARN">‚ö†Ô∏è WARNING: Expected NTP server 'ntpx.domain.com' not found in chrony sources</msg>
<arg>‚ö†Ô∏è WARNING: Expected NTP server 'ntpx.domain.com' not found in chrony sources</arg>
<arg>WARN</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.453190" elapsed="0.000223"/>
</kw>
<arg>not ${ntp_configured}</arg>
<arg>Log</arg>
<arg>‚ö†Ô∏è WARNING: Expected NTP server 'ntpx.domain.com' not found in chrony sources</arg>
<arg>WARN</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-05T15:50:38.452981" elapsed="0.000481"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:50:38.453690" level="INFO">Executing command 'chronyc sources | grep -E "^\^|^\*" || echo "No NTP servers found"'.</msg>
<msg time="2025-10-05T15:50:38.478004" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:50:38.478233" level="INFO">${ntp_servers_line} = No NTP servers found</msg>
<var>${ntp_servers_line}</var>
<arg>chronyc sources | grep -E "^\\^|^\\*" || echo "No NTP servers found"</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:50:38.453584" elapsed="0.024675"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.478768" level="INFO">üïê Configured NTP servers: No NTP servers found</msg>
<arg>üïê Configured NTP servers: ${ntp_servers_line}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.478506" elapsed="0.000409"/>
</kw>
<if>
<branch type="IF" condition="${ntp_configured}">
<kw name="Log" owner="BuiltIn">
<arg>‚úÖ NTP server validation: PASSED - ntpx.domain.com is configured</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:50:38.479703" elapsed="0.000047"/>
</kw>
<status status="NOT RUN" start="2025-10-05T15:50:38.479278" elapsed="0.000537"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.480133" level="INFO">‚ÑπÔ∏è NTP server validation: INFORMATIONAL - Check NTP server configuration</msg>
<arg>‚ÑπÔ∏è NTP server validation: INFORMATIONAL - Check NTP server configuration</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.479964" elapsed="0.000281"/>
</kw>
<status status="PASS" start="2025-10-05T15:50:38.479856" elapsed="0.000446"/>
</branch>
<status status="PASS" start="2025-10-05T15:50:38.479226" elapsed="0.001100"/>
</if>
<return>
<value>${ntp_servers_line}</value>
<status status="PASS" start="2025-10-05T15:50:38.480369" elapsed="0.000061"/>
</return>
<msg time="2025-10-05T15:50:38.480736" level="INFO">${ntp_servers} = No NTP servers found</msg>
<var>${ntp_servers}</var>
<doc>üïê Validate NTP server is configured to ntpx.domain.com</doc>
<status status="PASS" start="2025-10-05T15:50:38.450769" elapsed="0.030007"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.481201" level="INFO">üïê Configured NTP servers: No NTP servers found</msg>
<arg>üïê Configured NTP servers: ${ntp_servers}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.480964" elapsed="0.000356"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.481671" level="INFO">‚úÖ NTP server configuration validated</msg>
<arg>‚úÖ NTP server configuration validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.481519" elapsed="0.000265"/>
</kw>
<kw name="Log Test End" owner="time_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.484184" level="INFO">‚úÖ Completed: Critical - Validate NTP Server Configuration - PASS</msg>
<arg>‚úÖ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.483865" elapsed="0.000466"/>
</kw>
<status status="PASS" start="2025-10-05T15:50:38.483551" elapsed="0.000871"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>‚ùå Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:50:38.484679" elapsed="0.000039"/>
</kw>
<status status="NOT RUN" start="2025-10-05T15:50:38.484470" elapsed="0.000316"/>
</branch>
<status status="PASS" start="2025-10-05T15:50:38.483519" elapsed="0.001298"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case</doc>
<status status="PASS" start="2025-10-05T15:50:38.483052" elapsed="0.001837"/>
</kw>
<doc>üïê Validate NTP server is configured to use ntpx.domain.com</doc>
<tag>configuration</tag>
<tag>critical</tag>
<tag>ntp</tag>
<tag>server</tag>
<status status="PASS" start="2025-10-05T15:50:38.448593" elapsed="0.036416"/>
</test>
<test id="s1-s9-t6" name="Critical - Validate Time Synchronization Status" line="88">
<kw name="Log Test Start" owner="time_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.486996" level="INFO">üèÅ Starting: Critical - Validate Time Synchronization Status</msg>
<arg>üèÅ Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.486690" elapsed="0.000696"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:50:38.486214" elapsed="0.001276"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.488000" level="INFO">üîç Validating time synchronization status...</msg>
<arg>üîç Validating time synchronization status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.487709" elapsed="0.001574"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.489566" level="INFO">üìã Expected: System clock synchronized with NTP server</msg>
<arg>üìã Expected: System clock synchronized with NTP server</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.489417" elapsed="0.000233"/>
</kw>
<kw name="Validate Time Synchronization Status" owner="time_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.493317" level="INFO">üîç Validating time synchronization status...</msg>
<arg>üîç Validating time synchronization status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.492574" elapsed="0.000912"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:50:38.493798" level="INFO">Executing command 'timedatectl | grep "synchronized"'.</msg>
<msg time="2025-10-05T15:50:38.539545" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:50:38.539851" level="INFO">${sync_line} = System clock synchronized: yes</msg>
<var>${sync_line}</var>
<arg>timedatectl | grep "synchronized"</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:50:38.493681" elapsed="0.046205"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.540421" level="INFO">üîÑ Synchronization status: System clock synchronized: yes</msg>
<arg>üîÑ Synchronization status: ${sync_line}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.540134" elapsed="0.000458"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${sync_line}</arg>
<arg>yes</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-10-05T15:50:38.541171" elapsed="0.000153"/>
</kw>
<msg time="2025-10-05T15:50:38.541410" level="INFO">${is_synchronized} = True</msg>
<var>${is_synchronized}</var>
<arg>Should Contain</arg>
<arg>${sync_line}</arg>
<arg>yes</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-10-05T15:50:38.540832" elapsed="0.000601"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.541957" level="FAIL">: Normal: '' does not contain 'Leap status'</msg>
<arg>${CHRONY_TRACKING_OUTPUT}</arg>
<arg>Leap status</arg>
<arg>: Normal</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2025-10-05T15:50:38.541684" elapsed="0.000372">: Normal: '' does not contain 'Leap status'</status>
</kw>
<msg time="2025-10-05T15:50:38.542186" level="INFO">${tracking_synced} = False</msg>
<var>${tracking_synced}</var>
<arg>Should Contain</arg>
<arg>${CHRONY_TRACKING_OUTPUT}</arg>
<arg>Leap status</arg>
<arg>: Normal</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-10-05T15:50:38.541545" elapsed="0.000672"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>not ${is_synchronized}</arg>
<arg>Log</arg>
<arg>‚ö†Ô∏è WARNING: System clock may not be synchronized</arg>
<arg>WARN</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-05T15:50:38.542394" elapsed="0.000285"/>
</kw>
<if>
<branch type="IF" condition="${is_synchronized} and ${tracking_synced}">
<kw name="Log" owner="BuiltIn">
<arg>‚úÖ Time synchronization validation: PASSED - System clock is synchronized</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:50:38.543156" elapsed="0.000033"/>
</kw>
<status status="NOT RUN" start="2025-10-05T15:50:38.542846" elapsed="0.000400"/>
</branch>
<branch type="ELSE IF" condition="${is_synchronized}">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.543842" level="INFO">‚úÖ Time synchronization validation: PARTIAL - System reports synchronized</msg>
<arg>‚úÖ Time synchronization validation: PARTIAL - System reports synchronized</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.543480" elapsed="0.000480"/>
</kw>
<status status="PASS" start="2025-10-05T15:50:38.543285" elapsed="0.000735"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>‚ÑπÔ∏è Time synchronization validation: INFORMATIONAL - Check synchronization status</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:50:38.544393" elapsed="0.000046"/>
</kw>
<status status="NOT RUN" start="2025-10-05T15:50:38.544054" elapsed="0.000440"/>
</branch>
<status status="PASS" start="2025-10-05T15:50:38.542770" elapsed="0.001752"/>
</if>
<return>
<value>${sync_line}</value>
<status status="PASS" start="2025-10-05T15:50:38.544571" elapsed="0.000054"/>
</return>
<msg time="2025-10-05T15:50:38.544803" level="INFO">${sync_status} = System clock synchronized: yes</msg>
<var>${sync_status}</var>
<doc>üîÑ Validate time synchronization is working properly</doc>
<status status="PASS" start="2025-10-05T15:50:38.491085" elapsed="0.053748"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.545804" level="INFO">üîÑ Synchronization status: System clock synchronized: yes</msg>
<arg>üîÑ Synchronization status: ${sync_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.545552" elapsed="0.000386"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.546308" level="INFO">‚úÖ Time synchronization validation completed</msg>
<arg>‚úÖ Time synchronization validation completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.546115" elapsed="0.000318"/>
</kw>
<kw name="Log Test End" owner="time_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.548386" level="INFO">‚úÖ Completed: Critical - Validate Time Synchronization Status - PASS</msg>
<arg>‚úÖ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.547978" elapsed="0.001537"/>
</kw>
<status status="PASS" start="2025-10-05T15:50:38.547539" elapsed="0.002058"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>‚ùå Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:50:38.550114" elapsed="0.000050"/>
</kw>
<status status="NOT RUN" start="2025-10-05T15:50:38.549634" elapsed="0.000593"/>
</branch>
<status status="PASS" start="2025-10-05T15:50:38.547493" elapsed="0.002759"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case</doc>
<status status="PASS" start="2025-10-05T15:50:38.546869" elapsed="0.003447"/>
</kw>
<doc>üîÑ Validate time synchronization is working and clock is synchronized</doc>
<tag>critical</tag>
<tag>ntp</tag>
<tag>synchronization</tag>
<tag>time</tag>
<status status="PASS" start="2025-10-05T15:50:38.485361" elapsed="0.064999"/>
</test>
<test id="s1-s9-t7" name="Normal - Comprehensive Time Configuration Validation" line="101">
<kw name="Log Test Start" owner="time_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.551699" level="INFO">üèÅ Starting: Normal - Comprehensive Time Configuration Validation</msg>
<arg>üèÅ Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.551549" elapsed="0.000254"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:50:38.551261" elapsed="0.000617"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.552149" level="INFO">üîç Performing comprehensive time configuration validation...</msg>
<arg>üîç Performing comprehensive time configuration validation...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.551982" elapsed="0.000260"/>
</kw>
<kw name="Validate All Time Settings" owner="time_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.553515" level="INFO">üîç Performing comprehensive time configuration validation...</msg>
<arg>üîç Performing comprehensive time configuration validation...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.552812" elapsed="0.000819"/>
</kw>
<kw name="Validate Timezone Configuration" owner="time_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.554177" level="INFO">üîç Validating timezone configuration...</msg>
<arg>üîç Validating timezone configuration...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.554061" elapsed="0.000208"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:50:38.554491" level="INFO">Executing command 'timedatectl | grep "Time zone"'.</msg>
<msg time="2025-10-05T15:50:38.600149" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:50:38.600345" level="INFO">${timezone_line} =                 Time zone: America/Chicago (CDT, -0500)</msg>
<var>${timezone_line}</var>
<arg>timedatectl | grep "Time zone"</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:50:38.554395" elapsed="0.045979"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.600994" level="INFO">‚è∞ Timezone info:                 Time zone: America/Chicago (CDT, -0500)</msg>
<arg>‚è∞ Timezone info: ${timezone_line}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.600695" elapsed="0.000444"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.601726" level="FAIL">'                Time zone: America/Chicago (CDT, -0500)' does not contain 'America/Los_Angeles'</msg>
<arg>${timezone_line}</arg>
<arg>America/Los_Angeles</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2025-10-05T15:50:38.601477" elapsed="0.000323">'                Time zone: America/Chicago (CDT, -0500)' does not contain 'America/Los_Angeles'</status>
</kw>
<msg time="2025-10-05T15:50:38.601894" level="INFO">${contains_la} = False</msg>
<var>${contains_la}</var>
<arg>Should Contain</arg>
<arg>${timezone_line}</arg>
<arg>America/Los_Angeles</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-10-05T15:50:38.601309" elapsed="0.000607"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.602301" level="FAIL">'                Time zone: America/Chicago (CDT, -0500)' does not contain 'Pacific'</msg>
<arg>${timezone_line}</arg>
<arg>Pacific</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2025-10-05T15:50:38.602149" elapsed="0.000202">'                Time zone: America/Chicago (CDT, -0500)' does not contain 'Pacific'</status>
</kw>
<msg time="2025-10-05T15:50:38.602429" level="INFO">${contains_pacific} = False</msg>
<var>${contains_pacific}</var>
<arg>Should Contain</arg>
<arg>${timezone_line}</arg>
<arg>Pacific</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-10-05T15:50:38.602026" elapsed="0.000421"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.602831" level="INFO">${timezone_valid} = False</msg>
<var>${timezone_valid}</var>
<arg>${contains_la} or ${contains_pacific}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-05T15:50:38.602570" elapsed="0.000288"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Fail" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.603501" level="FAIL">‚ùå TIMEZONE MISMATCH: Expected 'America/Los_Angeles' or 'Pacific', found:                 Time zone: America/Chicago (CDT, -0500)</msg>
<arg>‚ùå TIMEZONE MISMATCH: Expected 'America/Los_Angeles' or 'Pacific', found: ${timezone_line}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="FAIL" start="2025-10-05T15:50:38.603234" elapsed="0.000327">‚ùå TIMEZONE MISMATCH: Expected 'America/Los_Angeles' or 'Pacific', found:                 Time zone: America/Chicago (CDT, -0500)</status>
</kw>
<arg>not ${timezone_valid}</arg>
<arg>Fail</arg>
<arg>‚ùå TIMEZONE MISMATCH: Expected 'America/Los_Angeles' or 'Pacific', found: ${timezone_line}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="FAIL" start="2025-10-05T15:50:38.602969" elapsed="0.000639">‚ùå TIMEZONE MISMATCH: Expected 'America/Los_Angeles' or 'Pacific', found:                 Time zone: America/Chicago (CDT, -0500)</status>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>‚úÖ Timezone validation: PASSED - Timezone set to Pacific/Los Angeles</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:50:38.604235" elapsed="0.000031"/>
</kw>
<return>
<value>${timezone_line}</value>
<status status="NOT RUN" start="2025-10-05T15:50:38.604327" elapsed="0.000033"/>
</return>
<var>${timezone}</var>
<doc>üåé Validate timezone is set to Pacific/Los Angeles</doc>
<status status="FAIL" start="2025-10-05T15:50:38.553836" elapsed="0.050662">‚ùå TIMEZONE MISMATCH: Expected 'America/Los_Angeles' or 'Pacific', found:                 Time zone: America/Chicago (CDT, -0500)</status>
</kw>
<kw name="Validate Chrony Service Status" owner="time_keywords">
<doc>üì° Validate chrony service is active and running</doc>
<status status="NOT RUN" start="2025-10-05T15:50:38.604783" elapsed="0.000045"/>
</kw>
<kw name="Validate NTP Server Configuration" owner="time_keywords">
<var>${ntp_servers}</var>
<doc>üïê Validate NTP server is configured to ntpx.domain.com</doc>
<status status="NOT RUN" start="2025-10-05T15:50:38.605214" elapsed="0.000039"/>
</kw>
<kw name="Validate Time Synchronization Status" owner="time_keywords">
<var>${sync_status}</var>
<doc>üîÑ Validate time synchronization is working properly</doc>
<status status="NOT RUN" start="2025-10-05T15:50:38.605572" elapsed="0.000037"/>
</kw>
<kw name="Get Current Date" owner="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="NOT RUN" start="2025-10-05T15:50:38.605789" elapsed="0.000028"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${validation_file}</var>
<arg>${DATA_DIR}/time_validation_summary_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-10-05T15:50:38.606044" elapsed="0.000030"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<var>${validation_summary}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== Time Configuration Validation Summary ===</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>=== Timezone Validation ===</arg>
<arg>Expected: Pacific/Los Angeles (America/Los_Angeles)</arg>
<arg>Actual: ${timezone}</arg>
<arg>Status: ‚úÖ PASSED</arg>
<arg>=== Chrony Service Validation ===</arg>
<arg>Expected: Active and Running</arg>
<arg>Status: ‚úÖ PASSED</arg>
<arg>=== NTP Server Configuration ===</arg>
<arg>Expected: ntpx.domain.com</arg>
<arg>Configured Servers: ${ntp_servers}</arg>
<arg>=== Time Synchronization ===</arg>
<arg>Synchronization Status: ${sync_status}</arg>
<arg>=== Overall Status ===</arg>
<arg>Time configuration validation completed successfully</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" start="2025-10-05T15:50:38.606195" elapsed="0.000022"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<arg>${validation_file}</arg>
<arg>${validation_summary}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="NOT RUN" start="2025-10-05T15:50:38.606400" elapsed="0.000024"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>üìÑ Validation summary saved to: ${validation_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:50:38.606547" elapsed="0.000023"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>‚úÖ Comprehensive time configuration validation completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:50:38.606691" elapsed="0.000023"/>
</kw>
<doc>üìä Comprehensive validation of all time configuration settings</doc>
<status status="FAIL" start="2025-10-05T15:50:38.552424" elapsed="0.054416">‚ùå TIMEZONE MISMATCH: Expected 'America/Los_Angeles' or 'Pacific', found:                 Time zone: America/Chicago (CDT, -0500)</status>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>üìä Comprehensive validation summary:</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:50:38.607030" elapsed="0.000029"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>üìä - Timezone: Pacific/Los Angeles ‚úÖ</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:50:38.607184" elapsed="0.000027"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>üìä - Chrony Service: Active ‚úÖ</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:50:38.607332" elapsed="0.000346"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>üìä - NTP Server: Configured ‚úÖ</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:50:38.607829" elapsed="0.000036"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>üìä - Synchronization: Verified ‚úÖ</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:50:38.608007" elapsed="0.000029"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>‚úÖ Comprehensive time configuration validation: PASSED</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:50:38.608158" elapsed="0.000021"/>
</kw>
<kw name="Log Test End" owner="time_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>‚úÖ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:50:38.611587" elapsed="0.000032"/>
</kw>
<status status="NOT RUN" start="2025-10-05T15:50:38.610479" elapsed="0.001243"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.612692" level="INFO">‚ùå Completed: Normal - Comprehensive Time Configuration Validation - FAIL</msg>
<arg>‚ùå Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.612249" elapsed="0.001782"/>
</kw>
<status status="PASS" start="2025-10-05T15:50:38.611767" elapsed="0.002404"/>
</branch>
<status status="PASS" start="2025-10-05T15:50:38.610440" elapsed="0.003774"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case</doc>
<status status="PASS" start="2025-10-05T15:50:38.609829" elapsed="0.004510"/>
</kw>
<doc>üìä Perform comprehensive validation of all time configuration settings</doc>
<tag>compliance</tag>
<tag>comprehensive</tag>
<tag>normal</tag>
<tag>validation</tag>
<status status="FAIL" start="2025-10-05T15:50:38.550664" elapsed="0.063750">‚ùå TIMEZONE MISMATCH: Expected 'America/Los_Angeles' or 'Pacific', found:                 Time zone: America/Chicago (CDT, -0500)</status>
</test>
<test id="s1-s9-t8" name="Normal - Hardware Clock Verification" line="117">
<kw name="Log Test Start" owner="time_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.616705" level="INFO">üèÅ Starting: Normal - Hardware Clock Verification</msg>
<arg>üèÅ Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.616466" elapsed="0.000724"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:50:38.616097" elapsed="0.001188"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.618675" level="INFO">üîç Verifying hardware clock configuration...</msg>
<arg>üîç Verifying hardware clock configuration...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.618483" elapsed="0.000308"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:50:38.619046" level="INFO">Executing command 'hwclock --show 2&gt;/dev/null || echo "hwclock requires privileges"'.</msg>
<msg time="2025-10-05T15:50:38.649343" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:50:38.649603" level="INFO">${hwclock_output} = hwclock requires privileges</msg>
<var>${hwclock_output}</var>
<arg>hwclock --show 2&gt;/dev/null || echo "hwclock requires privileges"</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:50:38.618934" elapsed="0.030699"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:50:38.650031" level="INFO">Executing command 'date'.</msg>
<msg time="2025-10-05T15:50:38.706500" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:50:38.706725" level="INFO">${current_date} = Sun Oct  5 15:50:38 CDT 2025</msg>
<var>${current_date}</var>
<arg>date</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:50:38.649892" elapsed="0.056859"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.707253" level="INFO">üï∞Ô∏è Hardware Clock: hwclock requires privileges</msg>
<arg>üï∞Ô∏è Hardware Clock: ${hwclock_output}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.706971" elapsed="0.000463"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.707849" level="INFO">üìÖ System Date: Sun Oct  5 15:50:38 CDT 2025</msg>
<arg>üìÖ System Date: ${current_date}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.707642" elapsed="0.000336"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.708250" level="INFO">‚ÑπÔ∏è Hardware clock information collected for review</msg>
<arg>‚ÑπÔ∏è Hardware clock information collected for review</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.708128" elapsed="0.000239"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.708659" level="INFO">‚úÖ Hardware clock verification: INFORMATIONAL</msg>
<arg>‚úÖ Hardware clock verification: INFORMATIONAL</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.708512" elapsed="0.000269"/>
</kw>
<kw name="Log Test End" owner="time_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.710444" level="INFO">‚úÖ Completed: Normal - Hardware Clock Verification - PASS</msg>
<arg>‚úÖ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.710209" elapsed="0.000364"/>
</kw>
<status status="PASS" start="2025-10-05T15:50:38.709808" elapsed="0.000818"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>‚ùå Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:50:38.710785" elapsed="0.000023"/>
</kw>
<status status="NOT RUN" start="2025-10-05T15:50:38.710661" elapsed="0.000184"/>
</branch>
<status status="PASS" start="2025-10-05T15:50:38.709755" elapsed="0.001114"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case</doc>
<status status="PASS" start="2025-10-05T15:50:38.709225" elapsed="0.001710"/>
</kw>
<doc>üï∞Ô∏è Verify hardware clock and its synchronization with system clock</doc>
<tag>clock</tag>
<tag>hardware</tag>
<tag>normal</tag>
<tag>verification</tag>
<status status="PASS" start="2025-10-05T15:50:38.615138" elapsed="0.095846"/>
</test>
<test id="s1-s9-t9" name="Normal - NTP Source Analysis" line="134">
<kw name="Log Test Start" owner="time_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.712338" level="INFO">üèÅ Starting: Normal - NTP Source Analysis</msg>
<arg>üèÅ Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.712166" elapsed="0.000282"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:50:38.711843" elapsed="0.000675"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.712783" level="INFO">üîç Analyzing NTP source details...</msg>
<arg>üîç Analyzing NTP source details...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.712646" elapsed="0.000237"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:50:38.713178" level="INFO">Executing command 'chronyc sources -v'.</msg>
<msg time="2025-10-05T15:50:38.755956" level="INFO">Command exited with return code 127.</msg>
<msg time="2025-10-05T15:50:38.756345" level="INFO">${sources_verbose} = </msg>
<var>${sources_verbose}</var>
<arg>chronyc sources -v</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:50:38.713064" elapsed="0.043324"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:50:38.756848" level="INFO">Executing command 'chronyc sourcestats'.</msg>
<msg time="2025-10-05T15:50:38.808264" level="INFO">Command exited with return code 127.</msg>
<msg time="2025-10-05T15:50:38.808771" level="INFO">${sourcestats} = </msg>
<var>${sourcestats}</var>
<arg>chronyc sourcestats</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:50:38.756664" elapsed="0.052222"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.810113" level="INFO">üìä NTP Sources (Verbose): </msg>
<arg>üìä NTP Sources (Verbose): ${sources_verbose}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.809540" elapsed="0.000826"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.811140" level="INFO">üìä NTP Source Statistics: </msg>
<arg>üìä NTP Source Statistics: ${sourcestats}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.810699" elapsed="0.000577"/>
</kw>
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:50:38.812021" level="INFO">${timestamp} = 20251005_155038</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:50:38.811625" elapsed="0.000544"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.812713" level="INFO">${ntp_analysis_file} = results/test7_time_configuration_validation/data/ntp_source_analysis_20251005_155038.txt</msg>
<var>${ntp_analysis_file}</var>
<arg>${DATA_DIR}/ntp_source_analysis_${timestamp}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:50:38.812383" elapsed="0.000370"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.813535" level="INFO">${ntp_analysis_data} = === NTP Source Analysis ===
Timestamp: 20251005_155038
Target Server: alhxvdvitap01 (172.30.16.186)

=== Chrony Sources (Verbose) ===


=== Chrony Source Statistics ===
</msg>
<var>${ntp_analysis_data}</var>
<arg>SEPARATOR=\n</arg>
<arg>=== NTP Source Analysis ===</arg>
<arg>Timestamp: ${timestamp}</arg>
<arg>Target Server: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>=== Chrony Sources (Verbose) ===</arg>
<arg>${sources_verbose}</arg>
<arg>=== Chrony Source Statistics ===</arg>
<arg>${sourcestats}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:50:38.813014" elapsed="0.001099"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:50:38.819555" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test7_time_configuration_validation/data/ntp_source_analysis_20251005_155038.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test7_time_configuration_validation/data/ntp_source_analysis_20251005_155038.txt&lt;/a&gt;'.</msg>
<arg>${ntp_analysis_file}</arg>
<arg>${ntp_analysis_data}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:50:38.814266" elapsed="0.005383"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.820185" level="INFO">üìÑ NTP source analysis saved to: results/test7_time_configuration_validation/data/ntp_source_analysis_20251005_155038.txt</msg>
<arg>üìÑ NTP source analysis saved to: ${ntp_analysis_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.819915" elapsed="0.000393"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.821008" level="INFO">‚úÖ NTP source analysis: INFORMATIONAL - Available for review</msg>
<arg>‚úÖ NTP source analysis: INFORMATIONAL - Available for review</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.820490" elapsed="0.000655"/>
</kw>
<kw name="Log Test End" owner="time_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.822894" level="INFO">‚úÖ Completed: Normal - NTP Source Analysis - PASS</msg>
<arg>‚úÖ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.822672" elapsed="0.000340"/>
</kw>
<status status="PASS" start="2025-10-05T15:50:38.822097" elapsed="0.000969"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>‚ùå Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:50:38.823226" elapsed="0.000023"/>
</kw>
<status status="NOT RUN" start="2025-10-05T15:50:38.823100" elapsed="0.000188"/>
</branch>
<status status="PASS" start="2025-10-05T15:50:38.822032" elapsed="0.001279"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case</doc>
<status status="PASS" start="2025-10-05T15:50:38.821650" elapsed="0.001723"/>
</kw>
<doc>üìä Analyze NTP source details and server reachability</doc>
<tag>analysis</tag>
<tag>normal</tag>
<tag>ntp</tag>
<tag>sources</tag>
<status status="PASS" start="2025-10-05T15:50:38.711304" elapsed="0.112117"/>
</test>
<test id="s1-s9-t10" name="Normal - Clock Drift Monitoring" line="166">
<kw name="Log Test Start" owner="time_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.824821" level="INFO">üèÅ Starting: Normal - Clock Drift Monitoring</msg>
<arg>üèÅ Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.824522" elapsed="0.000531"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>üìù Log the start of a test case</doc>
<status status="PASS" start="2025-10-05T15:50:38.824197" elapsed="0.000926"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.825337" level="INFO">üîç Monitoring clock drift and accuracy...</msg>
<arg>üîç Monitoring clock drift and accuracy...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.825230" elapsed="0.000256"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:50:38.825700" level="INFO">Executing command 'chronyc tracking'.</msg>
<msg time="2025-10-05T15:50:38.871625" level="INFO">Command exited with return code 127.</msg>
<msg time="2025-10-05T15:50:38.871902" level="INFO">${tracking_output} = </msg>
<var>${tracking_output}</var>
<arg>chronyc tracking</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:50:38.825609" elapsed="0.046329"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:38.872525" level="INFO">üìâ Chrony Tracking Info: </msg>
<arg>üìâ Chrony Tracking Info: ${tracking_output}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:38.872187" elapsed="0.000509"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:50:38.873088" level="INFO">Executing command 'chronyc tracking | grep "System time" || echo "N/A"'.</msg>
<msg time="2025-10-05T15:50:38.917749" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:50:38.918038" level="INFO">${system_time_line} = N/A</msg>
<var>${system_time_line}</var>
<arg>chronyc tracking | grep "System time" || echo "N/A"</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:50:38.872884" elapsed="0.045209"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:50:38.918605" level="INFO">Executing command 'chronyc tracking | grep "Last offset" || echo "N/A"'.</msg>
<msg time="2025-10-05T15:50:38.965487" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:50:38.965684" level="INFO">${last_offset_line} = N/A</msg>
<var>${last_offset_line}</var>
<arg>chronyc tracking | grep "Last offset" || echo "N/A"</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:50:38.918392" elapsed="0.047318"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-10-05T15:50:38.966024" level="INFO">Executing command 'chronyc tracking | grep "RMS offset" || echo "N/A"'.</msg>
<msg time="2025-10-05T15:50:39.018295" level="INFO">Command exited with return code 0.</msg>
<msg time="2025-10-05T15:50:39.018564" level="INFO">${rms_offset_line} = N/A</msg>
<var>${rms_offset_line}</var>
<arg>chronyc tracking | grep "RMS offset" || echo "N/A"</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2025-10-05T15:50:38.965902" elapsed="0.052700"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:39.019152" level="INFO">üìä System Time Offset: N/A</msg>
<arg>üìä System Time Offset: ${system_time_line}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:39.018857" elapsed="0.000461"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:39.019996" level="INFO">üìä Last Offset: N/A</msg>
<arg>üìä Last Offset: ${last_offset_line}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:39.019593" elapsed="0.000559"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:39.020744" level="INFO">üìä RMS Offset: N/A</msg>
<arg>üìä RMS Offset: ${rms_offset_line}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:39.020385" elapsed="0.000505"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:39.025010" level="INFO">‚ÑπÔ∏è Clock drift monitoring: Data collected for analysis</msg>
<arg>‚ÑπÔ∏è Clock drift monitoring: Data collected for analysis</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:39.024450" elapsed="0.000753"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:39.025636" level="INFO">‚úÖ Clock drift monitoring: INFORMATIONAL</msg>
<arg>‚úÖ Clock drift monitoring: INFORMATIONAL</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:39.025428" elapsed="0.000335"/>
</kw>
<kw name="Log Test End" owner="time_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:39.027066" level="INFO">‚úÖ Completed: Normal - Clock Drift Monitoring - PASS</msg>
<arg>‚úÖ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:39.026820" elapsed="0.000358"/>
</kw>
<status status="PASS" start="2025-10-05T15:50:39.026580" elapsed="0.000658"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>‚ùå Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-05T15:50:39.027407" elapsed="0.000024"/>
</kw>
<status status="NOT RUN" start="2025-10-05T15:50:39.027274" elapsed="0.000193"/>
</branch>
<status status="PASS" start="2025-10-05T15:50:39.026553" elapsed="0.000936"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>üìù Log the end of a test case</doc>
<status status="PASS" start="2025-10-05T15:50:39.026202" elapsed="0.001346"/>
</kw>
<doc>üìâ Monitor clock drift and synchronization accuracy</doc>
<tag>accuracy</tag>
<tag>drift</tag>
<tag>monitoring</tag>
<tag>normal</tag>
<status status="PASS" start="2025-10-05T15:50:38.823695" elapsed="0.203898"/>
</test>
<kw name="Generate Time Configuration Executive Summary" owner="time_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:39.028617" level="INFO">üìä Generating Test-7 Time Configuration Executive Summary...</msg>
<arg>üìä Generating Test-7 Time Configuration Executive Summary...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:39.028485" elapsed="0.000253"/>
</kw>
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-05T15:50:39.029207" level="INFO">${timestamp} = 2025-10-05 15:50:39</msg>
<var>${timestamp}</var>
<arg>result_format=%Y-%m-%d %H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-05T15:50:39.028947" elapsed="0.000310"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-05T15:50:39.029494" level="INFO">${summary_file} = results/test7_time_configuration_validation/Test7_Time_Configuration_Executive_Summary.txt</msg>
<var>${summary_file}</var>
<arg>results/test7_time_configuration_validation/Test7_Time_Configuration_Executive_Summary.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-05T15:50:39.029377" elapsed="0.000141"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-05T15:50:39.029957" level="INFO">${summary_content} = ========================================
‚è∞ TEST-7: TIME CONFIGURATION VALIDATION
üìä EXECUTIVE SUMMARY REPORT
========================================

üìÖ Report Generated: 2025-10-05 15:50:39
üéØ Target S...</msg>
<var>${summary_content}</var>
<arg>SEPARATOR=\n</arg>
<arg>========================================</arg>
<arg>‚è∞ TEST-7: TIME CONFIGURATION VALIDATION</arg>
<arg>üìä EXECUTIVE SUMMARY REPORT</arg>
<arg>========================================</arg>
<arg>üìÖ Report Generated: ${timestamp}</arg>
<arg>üéØ Target System: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>üìã Test Suite: Test-7 Time Configuration Validation</arg>
<arg>========================================</arg>
<arg>üìã EXPECTED CONFIGURATION</arg>
<arg>========================================</arg>
<arg>üåé Timezone: Pacific/Los Angeles (America/Los_Angeles)</arg>
<arg>üïê NTP Server: ntpx.domain.com</arg>
<arg>üì° Service: Chrony (active and running)</arg>
<arg>üîÑ Synchronization: Enabled</arg>
<arg>========================================</arg>
<arg>‚úÖ VALIDATION RESULTS</arg>
<arg>========================================</arg>
<arg>Results available in detailed test reports.</arg>
<arg>========================================</arg>
<arg>üìÅ SUPPORTING DOCUMENTATION</arg>
<arg>========================================</arg>
<arg>üìÑ Time configuration data: results/test7_time_configuration_validation/data/</arg>
<arg>üìä Robot Framework reports: results/test7_time_configuration_validation/</arg>
<arg>========================================</arg>
<arg>üèÜ COMPLIANCE STATUS</arg>
<arg>========================================</arg>
<arg>‚úÖ Test execution completed successfully</arg>
<arg>üìã Time configuration validated</arg>
<arg>üîç Results ready for stakeholder review</arg>
<arg>End of Executive Summary</arg>
<arg>========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-05T15:50:39.029609" elapsed="0.000375"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-05T15:50:39.037179" level="INFO" html="true">Created file '&lt;a href="file:///mnt/c/Users/sacpa/Projects/robot/robotframework/results/test7_time_configuration_validation/Test7_Time_Configuration_Executive_Summary.txt"&gt;/mnt/c/Users/sacpa/Projects/robot/robotframework/results/test7_time_configuration_validation/Test7_Time_Configuration_Executive_Summary.txt&lt;/a&gt;'.</msg>
<arg>${summary_file}</arg>
<arg>${summary_content}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-05T15:50:39.030199" elapsed="0.007123"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:39.038011" level="INFO">üìä Executive summary generated: results/test7_time_configuration_validation/Test7_Time_Configuration_Executive_Summary.txt</msg>
<arg>üìä Executive summary generated: ${summary_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:39.037670" elapsed="0.000524"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-05T15:50:39.038498" level="INFO">‚úÖ Test-7 Time Configuration Validation completed successfully!</msg>
<arg>‚úÖ Test-7 Time Configuration Validation completed successfully!</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-05T15:50:39.038361" elapsed="0.000252"/>
</kw>
<doc>üìä Generate executive summary for time configuration validation</doc>
<status status="PASS" start="2025-10-05T15:50:39.028303" elapsed="0.010389"/>
</kw>
<doc>‚è∞ Time Configuration Validation Test Suite - Test-7
üîç Process: Find hostname in EDS ‚Üí SSH to server ‚Üí Collect time/NTP data ‚Üí Validate timezone and NTP configuration
‚úÖ Pass if timezone is Pacific/Los Angeles and NTP server is ntpx.domain.com with proper synchronization
üìä Validates: Timezone setting, Chrony service status, NTP server configuration, time synchronization</doc>
<status status="FAIL" start="2025-10-05T15:50:21.758450" elapsed="17.280280"/>
</suite>
<status status="FAIL" elapsed="383.886692"/>
</suite>
<statistics>
<total>
<stat pass="85" fail="23" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">2fa</stat>
<stat pass="1" fail="0" skip="0">accuracy</stat>
<stat pass="0" fail="1" skip="0">adapters</stat>
<stat pass="2" fail="0" skip="0">agent</stat>
<stat pass="1" fail="0" skip="0">aliases</stat>
<stat pass="5" fail="1" skip="0">analysis</stat>
<stat pass="2" fail="0" skip="0">ansible</stat>
<stat pass="0" fail="1" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">applications</stat>
<stat pass="1" fail="0" skip="0">audit</stat>
<stat pass="2" fail="1" skip="0">authentication</stat>
<stat pass="1" fail="0" skip="0">authentication_flow</stat>
<stat pass="2" fail="1" skip="0">boot</stat>
<stat pass="2" fail="0" skip="0">capacity</stat>
<stat pass="1" fail="0" skip="0">certificates</stat>
<stat pass="0" fail="1" skip="0">chrony</stat>
<stat pass="1" fail="0" skip="0">clock</stat>
<stat pass="0" fail="1" skip="0">cluster</stat>
<stat pass="10" fail="10" skip="0">compliance</stat>
<stat pass="4" fail="1" skip="0">comprehensive</stat>
<stat pass="1" fail="0" skip="0">config</stat>
<stat pass="7" fail="0" skip="0">configuration</stat>
<stat pass="6" fail="1" skip="0">connection</stat>
<stat pass="4" fail="0" skip="0">connectivity</stat>
<stat pass="1" fail="0" skip="0">contact</stat>
<stat pass="1" fail="0" skip="0">control_node</stat>
<stat pass="1" fail="1" skip="0">cpu</stat>
<stat pass="39" fail="19" skip="0">critical</stat>
<stat pass="2" fail="1" skip="0">data_collection</stat>
<stat pass="1" fail="0" skip="0">delivery</stat>
<stat pass="1" fail="0" skip="0">dependencies</stat>
<stat pass="0" fail="1" skip="0">disabled</stat>
<stat pass="1" fail="1" skip="0">disk</stat>
<stat pass="1" fail="0" skip="0">disk_space</stat>
<stat pass="0" fail="1" skip="0">dmesg</stat>
<stat pass="2" fail="0" skip="0">dns</stat>
<stat pass="0" fail="1" skip="0">documentation</stat>
<stat pass="1" fail="0" skip="0">drift</stat>
<stat pass="0" fail="1" skip="0">enabled</stat>
<stat pass="4" fail="0" skip="0">errors</stat>
<stat pass="1" fail="0" skip="0">failed</stat>
<stat pass="0" fail="1" skip="0">file_output</stat>
<stat pass="1" fail="0" skip="0">files</stat>
<stat pass="1" fail="0" skip="0">filesystem</stat>
<stat pass="3" fail="0" skip="0">firewall</stat>
<stat pass="0" fail="1" skip="0">gateway</stat>
<stat pass="1" fail="0" skip="0">growth</stat>
<stat pass="3" fail="4" skip="0">hardware</stat>
<stat pass="2" fail="0" skip="0">hostname</stat>
<stat pass="1" fail="0" skip="0">info</stat>
<stat pass="7" fail="0" skip="0">infrastructure</stat>
<stat pass="2" fail="0" skip="0">installation</stat>
<stat pass="1" fail="0" skip="0">inventory</stat>
<stat pass="1" fail="0" skip="0">ip</stat>
<stat pass="1" fail="1" skip="0">journalctl</stat>
<stat pass="1" fail="1" skip="0">kernel</stat>
<stat pass="1" fail="0" skip="0">logging</stat>
<stat pass="1" fail="0" skip="0">logrotate</stat>
<stat pass="5" fail="4" skip="0">logs</stat>
<stat pass="1" fail="0" skip="0">log_size</stat>
<stat pass="1" fail="0" skip="0">lvm</stat>
<stat pass="2" fail="0" skip="0">mail</stat>
<stat pass="1" fail="0" skip="0">maillog</stat>
<stat pass="1" fail="0" skip="0">mail_queue</stat>
<stat pass="1" fail="0" skip="0">mail_rc</stat>
<stat pass="2" fail="0" skip="0">maintenance</stat>
<stat pass="0" fail="2" skip="0">memory</stat>
<stat pass="1" fail="0" skip="0">modules</stat>
<stat pass="5" fail="0" skip="0">monitoring</stat>
<stat pass="1" fail="0" skip="0">mx_records</stat>
<stat pass="4" fail="1" skip="0">network</stat>
<stat pass="1" fail="2" skip="0">networking</stat>
<stat pass="47" fail="4" skip="0">normal</stat>
<stat pass="4" fail="2" skip="0">ntp</stat>
<stat pass="1" fail="0" skip="0">os</stat>
<stat pass="1" fail="0" skip="0">packages</stat>
<stat pass="1" fail="1" skip="0">patches</stat>
<stat pass="1" fail="0" skip="0">patch_management</stat>
<stat pass="1" fail="0" skip="0">patterns</stat>
<stat pass="2" fail="0" skip="0">performance</stat>
<stat pass="1" fail="0" skip="0">permissions</stat>
<stat pass="0" fail="1" skip="0">placement</stat>
<stat pass="1" fail="0" skip="0">port25</stat>
<stat pass="2" fail="0" skip="0">postfix</stat>
<stat pass="0" fail="1" skip="0">properties</stat>
<stat pass="1" fail="0" skip="0">query</stat>
<stat pass="1" fail="0" skip="0">reboot</stat>
<stat pass="2" fail="0" skip="0">registration</stat>
<stat pass="1" fail="0" skip="0">relay</stat>
<stat pass="1" fail="0" skip="0">reporting</stat>
<stat pass="1" fail="0" skip="0">resources</stat>
<stat pass="1" fail="0" skip="0">responsiveness</stat>
<stat pass="0" fail="1" skip="0">review</stat>
<stat pass="1" fail="0" skip="0">rhel</stat>
<stat pass="7" fail="0" skip="0">rsa</stat>
<stat pass="1" fail="0" skip="0">rsyslog</stat>
<stat pass="2" fail="0" skip="0">satellite</stat>
<stat pass="1" fail="0" skip="0">schedule</stat>
<stat pass="7" fail="2" skip="0">security</stat>
<stat pass="2" fail="0" skip="0">selinux</stat>
<stat pass="1" fail="0" skip="0">sendmail</stat>
<stat pass="1" fail="0" skip="0">sensors</stat>
<stat pass="1" fail="0" skip="0">sequence</stat>
<stat pass="1" fail="0" skip="0">server</stat>
<stat pass="2" fail="1" skip="0">service</stat>
<stat pass="4" fail="2" skip="0">services</stat>
<stat pass="2" fail="0" skip="0">settings</stat>
<stat pass="6" fail="0" skip="0">smtp</stat>
<stat pass="1" fail="0" skip="0">sources</stat>
<stat pass="6" fail="0" skip="0">ssh</stat>
<stat pass="1" fail="0" skip="0">stability</stat>
<stat pass="1" fail="0" skip="0">startup</stat>
<stat pass="3" fail="0" skip="0">status</stat>
<stat pass="4" fail="1" skip="0">storage</stat>
<stat pass="0" fail="1" skip="0">subnet</stat>
<stat pass="1" fail="0" skip="0">subscription</stat>
<stat pass="4" fail="0" skip="0">summary</stat>
<stat pass="1" fail="0" skip="0">synchronization</stat>
<stat pass="1" fail="1" skip="0">system</stat>
<stat pass="1" fail="0" skip="0">systemctl</stat>
<stat pass="0" fail="1" skip="0">systemd</stat>
<stat pass="18" fail="0" skip="0">tanium</stat>
<stat pass="1" fail="0" skip="0">test_email</stat>
<stat pass="3" fail="1" skip="0">time</stat>
<stat pass="0" fail="1" skip="0">timezone</stat>
<stat pass="1" fail="0" skip="0">timing</stat>
<stat pass="1" fail="0" skip="0">token</stat>
<stat pass="2" fail="0" skip="0">troubleshooting</stat>
<stat pass="2" fail="1" skip="0">updates</stat>
<stat pass="1" fail="0" skip="0">uptime</stat>
<stat pass="8" fail="3" skip="0">validation</stat>
<stat pass="0" fail="1" skip="0">var_log</stat>
<stat pass="0" fail="1" skip="0">vcenter</stat>
<stat pass="1" fail="0" skip="0">verification</stat>
<stat pass="1" fail="1" skip="0">version</stat>
<stat pass="1" fail="0" skip="0">volumes</stat>
<stat pass="0" fail="1" skip="0">yum</stat>
</tag>
<suite>
<stat name="Services Validation &amp; Mail Configuration &amp; Patch Management &amp; Tanium Agent &amp; Event Logs &amp; Network Validation &amp; Vm Validation &amp; Disk Space Validation &amp; Time Configuration Validation" id="s1" pass="85" fail="23" skip="0">Services Validation &amp; Mail Configuration &amp; Patch Management &amp; Tanium Agent &amp; Event Logs &amp; Network Validation &amp; Vm Validation &amp; Disk Space Validation &amp; Time Configuration Validation</stat>
<stat name="Services Validation" id="s1-s1" pass="6" fail="3" skip="0">Services Validation &amp; Mail Configuration &amp; Patch Management &amp; Tanium Agent &amp; Event Logs &amp; Network Validation &amp; Vm Validation &amp; Disk Space Validation &amp; Time Configuration Validation.Services Validation</stat>
<stat name="Mail Configuration" id="s1-s2" pass="13" fail="0" skip="0">Services Validation &amp; Mail Configuration &amp; Patch Management &amp; Tanium Agent &amp; Event Logs &amp; Network Validation &amp; Vm Validation &amp; Disk Space Validation &amp; Time Configuration Validation.Mail Configuration</stat>
<stat name="Patch Management" id="s1-s3" pass="14" fail="1" skip="0">Services Validation &amp; Mail Configuration &amp; Patch Management &amp; Tanium Agent &amp; Event Logs &amp; Network Validation &amp; Vm Validation &amp; Disk Space Validation &amp; Time Configuration Validation.Patch Management</stat>
<stat name="Tanium Agent" id="s1-s4" pass="20" fail="0" skip="0">Services Validation &amp; Mail Configuration &amp; Patch Management &amp; Tanium Agent &amp; Event Logs &amp; Network Validation &amp; Vm Validation &amp; Disk Space Validation &amp; Time Configuration Validation.Tanium Agent</stat>
<stat name="Event Logs" id="s1-s5" pass="15" fail="4" skip="0">Services Validation &amp; Mail Configuration &amp; Patch Management &amp; Tanium Agent &amp; Event Logs &amp; Network Validation &amp; Vm Validation &amp; Disk Space Validation &amp; Time Configuration Validation.Event Logs</stat>
<stat name="Network Validation" id="s1-s6" pass="4" fail="2" skip="0">Services Validation &amp; Mail Configuration &amp; Patch Management &amp; Tanium Agent &amp; Event Logs &amp; Network Validation &amp; Vm Validation &amp; Disk Space Validation &amp; Time Configuration Validation.Network Validation</stat>
<stat name="Vm Validation" id="s1-s7" pass="0" fail="8" skip="0">Services Validation &amp; Mail Configuration &amp; Patch Management &amp; Tanium Agent &amp; Event Logs &amp; Network Validation &amp; Vm Validation &amp; Disk Space Validation &amp; Time Configuration Validation.Vm Validation</stat>
<stat name="Disk Space Validation" id="s1-s8" pass="7" fail="1" skip="0">Services Validation &amp; Mail Configuration &amp; Patch Management &amp; Tanium Agent &amp; Event Logs &amp; Network Validation &amp; Vm Validation &amp; Disk Space Validation &amp; Time Configuration Validation.Disk Space Validation</stat>
<stat name="Time Configuration Validation" id="s1-s9" pass="6" fail="4" skip="0">Services Validation &amp; Mail Configuration &amp; Patch Management &amp; Tanium Agent &amp; Event Logs &amp; Network Validation &amp; Vm Validation &amp; Disk Space Validation &amp; Time Configuration Validation.Time Configuration Validation</stat>
</suite>
</statistics>
<errors>
<msg time="2025-10-05T15:43:06.746209" level="WARN">Keyword 'File Should Exist' found both from a custom library 'SSHLibrary' and a standard library 'OperatingSystem'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'SSHLibrary.File Should Exist' or 'OperatingSystem.File Should Exist'.</msg>
<msg time="2025-10-05T15:45:12.248184" level="WARN">Keyword 'File Should Exist' found both from a custom library 'SSHLibrary' and a standard library 'OperatingSystem'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'SSHLibrary.File Should Exist' or 'OperatingSystem.File Should Exist'.</msg>
<msg time="2025-10-05T15:45:12.519072" level="WARN">Keyword 'File Should Exist' found both from a custom library 'SSHLibrary' and a standard library 'OperatingSystem'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'SSHLibrary.File Should Exist' or 'OperatingSystem.File Should Exist'.</msg>
<msg time="2025-10-05T15:45:12.962322" level="WARN">Keyword 'File Should Exist' found both from a custom library 'SSHLibrary' and a standard library 'OperatingSystem'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'SSHLibrary.File Should Exist' or 'OperatingSystem.File Should Exist'.</msg>
<msg time="2025-10-05T15:46:17.919182" level="ERROR">Error in file '/mnt/c/Users/sacpa/Projects/robot/robotframework/tests/test4_vm_validation/vm_validation.robot' on line 8: Resource file 'vm_keywords.resource' does not exist.</msg>
<msg time="2025-10-05T15:50:38.453283" level="WARN">‚ö†Ô∏è WARNING: Expected NTP server 'ntpx.domain.com' not found in chrony sources</msg>
</errors>
</robot>
